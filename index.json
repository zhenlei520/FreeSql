{
  "api/FreeSql.AdoNetExtensions.html": {
    "href": "api/FreeSql.AdoNetExtensions.html",
    "title": "Class AdoNetExtensions | FreeSql API Docs",
    "keywords": "Class AdoNetExtensions Inheritance System.Object AdoNetExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.dll Syntax public static class AdoNetExtensions Methods | Improve this Doc View Source Delete<T1>(IDbConnection) 删除数据 Declaration public static IDelete<T1> Delete<T1>(this IDbConnection that) where T1 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description IDelete <T1> Type Parameters Name Description T1 | Improve this Doc View Source Delete<T1>(IDbConnection, Object) 删除数据，传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration public static IDelete<T1> Delete<T1>(this IDbConnection that, object dywhere) where T1 : class Parameters Type Name Description System.Data.IDbConnection that System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 Returns Type Description IDelete <T1> Type Parameters Name Description T1 | Improve this Doc View Source Delete<T1>(IDbTransaction) 删除数据 Declaration public static IDelete<T1> Delete<T1>(this IDbTransaction that) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description IDelete <T1> Type Parameters Name Description T1 | Improve this Doc View Source Delete<T1>(IDbTransaction, Object) 删除数据，传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration public static IDelete<T1> Delete<T1>(this IDbTransaction that, object dywhere) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 Returns Type Description IDelete <T1> Type Parameters Name Description T1 | Improve this Doc View Source GetIFreeSql(IDbConnection) 获取 IDbConnection 对应的 IFreeSql 实例 Declaration public static IFreeSql GetIFreeSql(this IDbConnection that) Parameters Type Name Description System.Data.IDbConnection that Returns Type Description IFreeSql | Improve this Doc View Source Insert<T1>(IDbConnection) 插入数据 Declaration public static IInsert<T1> Insert<T1>(this IDbConnection that) where T1 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbConnection, T1) 插入数据，传入实体 Declaration public static IInsert<T1> Insert<T1>(this IDbConnection that, T1 source) where T1 : class Parameters Type Name Description System.Data.IDbConnection that T1 source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbConnection, T1[]) 插入数据，传入实体数组 Declaration public static IInsert<T1> Insert<T1>(this IDbConnection that, T1[] source) where T1 : class Parameters Type Name Description System.Data.IDbConnection that T1[] source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbConnection, IEnumerable<T1>) 插入数据，传入实体集合 Declaration public static IInsert<T1> Insert<T1>(this IDbConnection that, IEnumerable<T1> source) where T1 : class Parameters Type Name Description System.Data.IDbConnection that System.Collections.Generic.IEnumerable <T1> source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbConnection, List<T1>) 插入数据，传入实体集合 Declaration public static IInsert<T1> Insert<T1>(this IDbConnection that, List<T1> source) where T1 : class Parameters Type Name Description System.Data.IDbConnection that System.Collections.Generic.List <T1> source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbTransaction) 插入数据 Declaration public static IInsert<T1> Insert<T1>(this IDbTransaction that) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbTransaction, T1) 插入数据，传入实体 Declaration public static IInsert<T1> Insert<T1>(this IDbTransaction that, T1 source) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that T1 source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbTransaction, T1[]) 插入数据，传入实体数组 Declaration public static IInsert<T1> Insert<T1>(this IDbTransaction that, T1[] source) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that T1[] source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbTransaction, IEnumerable<T1>) 插入数据，传入实体集合 Declaration public static IInsert<T1> Insert<T1>(this IDbTransaction that, IEnumerable<T1> source) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that System.Collections.Generic.IEnumerable <T1> source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IDbTransaction, List<T1>) 插入数据，传入实体集合 Declaration public static IInsert<T1> Insert<T1>(this IDbTransaction that, List<T1> source) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that System.Collections.Generic.List <T1> source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source InsertOrUpdate<T1>(IDbConnection) 插入或更新数据，此功能依赖数据库特性（低版本可能不支持），参考如下： MySql 5.6+: on duplicate key update PostgreSQL 9.4+: on conflict do update SqlServer 2008+: merge into Oracle 11+: merge into Sqlite: replace into Firebird: merge into 达梦: merge into 人大金仓：on conflict do update 神通：merge into MsAccess：不支持 注意区别：FreeSql.Repository 仓储也有 InsertOrUpdate 方法（不依赖数据库特性） Declaration public static IInsertOrUpdate<T1> InsertOrUpdate<T1>(this IDbConnection that) where T1 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source InsertOrUpdate<T1>(IDbTransaction) 插入或更新数据，此功能依赖数据库特性（低版本可能不支持），参考如下： MySql 5.6+: on duplicate key update PostgreSQL 9.4+: on conflict do update SqlServer 2008+: merge into Oracle 11+: merge into Sqlite: replace into 达梦: merge into 人大金仓：on conflict do update 神通：merge into MsAccess：不支持 注意区别：FreeSql.Repository 仓储也有 InsertOrUpdate 方法（不依赖数据库特性） Declaration public static IInsertOrUpdate<T1> InsertOrUpdate<T1>(this IDbTransaction that) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source Select<T1>(IDbConnection) 查询数据 Declaration public static ISelect<T1> Select<T1>(this IDbConnection that) where T1 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1> Type Parameters Name Description T1 | Improve this Doc View Source Select<T1>(IDbConnection, Object) 查询数据，传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration public static ISelect<T1> Select<T1>(this IDbConnection that, object dywhere) where T1 : class Parameters Type Name Description System.Data.IDbConnection that System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 Returns Type Description ISelect <T1> Type Parameters Name Description T1 | Improve this Doc View Source Select<T1>(IDbTransaction) 查询数据 Declaration public static ISelect<T1> Select<T1>(this IDbTransaction that) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1> Type Parameters Name Description T1 | Improve this Doc View Source Select<T1>(IDbTransaction, Object) 查询数据，传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration public static ISelect<T1> Select<T1>(this IDbTransaction that, object dywhere) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 Returns Type Description ISelect <T1> Type Parameters Name Description T1 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this IDbConnection that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this IDbTransaction that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 | Improve this Doc View Source Select<T1, T2>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2> Select<T1, T2>(this IDbConnection that) where T1 : class where T2 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2> Type Parameters Name Description T1 T2 | Improve this Doc View Source Select<T1, T2>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2> Select<T1, T2>(this IDbTransaction that) where T1 : class where T2 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2> Type Parameters Name Description T1 T2 | Improve this Doc View Source Select<T1, T2, T3>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2, T3> Select<T1, T2, T3>(this IDbConnection that) where T1 : class where T2 : class where T3 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Select<T1, T2, T3>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2, T3> Select<T1, T2, T3>(this IDbTransaction that) where T1 : class where T2 : class where T3 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Select<T1, T2, T3, T4>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2, T3, T4> Select<T1, T2, T3, T4>(this IDbConnection that) where T1 : class where T2 : class where T3 : class where T4 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Select<T1, T2, T3, T4>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2, T3, T4> Select<T1, T2, T3, T4>(this IDbTransaction that) where T1 : class where T2 : class where T3 : class where T4 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Select<T1, T2, T3, T4, T5>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5> Select<T1, T2, T3, T4, T5>(this IDbConnection that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Select<T1, T2, T3, T4, T5>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5> Select<T1, T2, T3, T4, T5>(this IDbTransaction that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6> Select<T1, T2, T3, T4, T5, T6>(this IDbConnection that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description T1 T2 T3 T4 T5 T6 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6> Select<T1, T2, T3, T4, T5, T6>(this IDbTransaction that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description T1 T2 T3 T4 T5 T6 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6, T7>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6, T7> Select<T1, T2, T3, T4, T5, T6, T7>(this IDbConnection that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6, T7>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6, T7> Select<T1, T2, T3, T4, T5, T6, T7>(this IDbTransaction that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6, T7, T8>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6, T7, T8> Select<T1, T2, T3, T4, T5, T6, T7, T8>(this IDbConnection that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6, T7, T8>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6, T7, T8> Select<T1, T2, T3, T4, T5, T6, T7, T8>(this IDbTransaction that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6, T7, T8, T9>(IDbConnection) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> Select<T1, T2, T3, T4, T5, T6, T7, T8, T9>(this IDbConnection that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 | Improve this Doc View Source Select<T1, T2, T3, T4, T5, T6, T7, T8, T9>(IDbTransaction) 多表查询 Declaration public static ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> Select<T1, T2, T3, T4, T5, T6, T7, T8, T9>(this IDbTransaction that) where T1 : class where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 | Improve this Doc View Source Update<T1>(IDbConnection) 修改数据 Declaration public static IUpdate<T1> Update<T1>(this IDbConnection that) where T1 : class Parameters Type Name Description System.Data.IDbConnection that Returns Type Description IUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source Update<T1>(IDbConnection, Object) 修改数据，传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration public static IUpdate<T1> Update<T1>(this IDbConnection that, object dywhere) where T1 : class Parameters Type Name Description System.Data.IDbConnection that System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 Returns Type Description IUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source Update<T1>(IDbTransaction) 修改数据 Declaration public static IUpdate<T1> Update<T1>(this IDbTransaction that) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that Returns Type Description IUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source Update<T1>(IDbTransaction, Object) 修改数据，传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration public static IUpdate<T1> Update<T1>(this IDbTransaction that, object dywhere) where T1 : class Parameters Type Name Description System.Data.IDbTransaction that System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 Returns Type Description IUpdate <T1> Type Parameters Name Description T1"
  },
  "api/FreeSql.Aop.AuditDataReaderEventArgs.html": {
    "href": "api/FreeSql.Aop.AuditDataReaderEventArgs.html",
    "title": "Class AuditDataReaderEventArgs | FreeSql API Docs",
    "keywords": "Class AuditDataReaderEventArgs Inheritance System.Object System.EventArgs AuditDataReaderEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class AuditDataReaderEventArgs : EventArgs Constructors | Improve this Doc View Source AuditDataReaderEventArgs(DbDataReader, Int32) Declaration public AuditDataReaderEventArgs(DbDataReader dataReader, int index) Parameters Type Name Description System.Data.Common.DbDataReader dataReader System.Int32 index Properties | Improve this Doc View Source DataReader ADO.NET 数据流读取对象 Declaration public DbDataReader DataReader { get; } Property Value Type Description System.Data.Common.DbDataReader | Improve this Doc View Source Index DataReader 对应的 Index 位置 Declaration public int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Value 获取 Index 对应的值，也可以设置拦截的新值 Declaration public object Value { get; set; } Property Value Type Description System.Object | Improve this Doc View Source ValueIsChanged Declaration public bool ValueIsChanged { get; } Property Value Type Description System.Boolean"
  },
  "api/FreeSql.Aop.AuditValueEventArgs.html": {
    "href": "api/FreeSql.Aop.AuditValueEventArgs.html",
    "title": "Class AuditValueEventArgs | FreeSql API Docs",
    "keywords": "Class AuditValueEventArgs Inheritance System.Object System.EventArgs AuditValueEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class AuditValueEventArgs : EventArgs Constructors | Improve this Doc View Source AuditValueEventArgs(AuditValueType, ColumnInfo, PropertyInfo, Object) Declaration public AuditValueEventArgs(AuditValueType autoValueType, ColumnInfo column, PropertyInfo property, object value) Parameters Type Name Description AuditValueType autoValueType ColumnInfo column System.Reflection.PropertyInfo property System.Object value Properties | Improve this Doc View Source AuditValueType 类型 Declaration public AuditValueType AuditValueType { get; } Property Value Type Description AuditValueType | Improve this Doc View Source Column 属性列的元数据 Declaration public ColumnInfo Column { get; } Property Value Type Description ColumnInfo | Improve this Doc View Source Property 反射的属性信息 Declaration public PropertyInfo Property { get; } Property Value Type Description System.Reflection.PropertyInfo | Improve this Doc View Source Value 获取实体的属性值，也可以设置实体的属性新值 Declaration public object Value { get; set; } Property Value Type Description System.Object | Improve this Doc View Source ValueIsChanged Declaration public bool ValueIsChanged { get; } Property Value Type Description System.Boolean"
  },
  "api/FreeSql.Aop.AuditValueType.html": {
    "href": "api/FreeSql.Aop.AuditValueType.html",
    "title": "Enum AuditValueType | FreeSql API Docs",
    "keywords": "Enum AuditValueType Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public enum AuditValueType Fields Name Description Insert InsertOrUpdate Update Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Aop.CommandAfterEventArgs.html": {
    "href": "api/FreeSql.Aop.CommandAfterEventArgs.html",
    "title": "Class CommandAfterEventArgs | FreeSql API Docs",
    "keywords": "Class CommandAfterEventArgs Inheritance System.Object System.EventArgs CommandBeforeEventArgs CommandAfterEventArgs Inherited Members CommandBeforeEventArgs.Identifier CommandBeforeEventArgs.Stopwatch CommandBeforeEventArgs.Command CommandBeforeEventArgs.States System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class CommandAfterEventArgs : CommandBeforeEventArgs Constructors | Improve this Doc View Source CommandAfterEventArgs(CommandBeforeEventArgs, Exception, String) Declaration public CommandAfterEventArgs(CommandBeforeEventArgs before, Exception exception, string log) Parameters Type Name Description CommandBeforeEventArgs before System.Exception exception System.String log Properties | Improve this Doc View Source ElapsedMilliseconds 耗时（单位：毫秒） Declaration public long ElapsedMilliseconds { get; } Property Value Type Description System.Int64 | Improve this Doc View Source ElapsedTicks 耗时（单位：Ticks） Declaration public long ElapsedTicks { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Exception 发生的错误 Declaration public Exception Exception { get; } Property Value Type Description System.Exception | Improve this Doc View Source Log 执行SQL命令，返回的结果 Declaration public string Log { get; } Property Value Type Description System.String"
  },
  "api/FreeSql.Aop.CommandBeforeEventArgs.html": {
    "href": "api/FreeSql.Aop.CommandBeforeEventArgs.html",
    "title": "Class CommandBeforeEventArgs | FreeSql API Docs",
    "keywords": "Class CommandBeforeEventArgs Inheritance System.Object System.EventArgs CommandBeforeEventArgs CommandAfterEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class CommandBeforeEventArgs : EventArgs Constructors | Improve this Doc View Source CommandBeforeEventArgs(DbCommand) Declaration public CommandBeforeEventArgs(DbCommand command) Parameters Type Name Description System.Data.Common.DbCommand command | Improve this Doc View Source CommandBeforeEventArgs(Guid, Stopwatch, DbCommand, Dictionary<String, Object>) Declaration protected CommandBeforeEventArgs(Guid identifier, Stopwatch stopwatch, DbCommand command, Dictionary<string, object> states) Parameters Type Name Description System.Guid identifier System.Diagnostics.Stopwatch stopwatch System.Data.Common.DbCommand command System.Collections.Generic.Dictionary < System.String , System.Object > states Properties | Improve this Doc View Source Command Declaration public DbCommand Command { get; } Property Value Type Description System.Data.Common.DbCommand | Improve this Doc View Source Identifier 标识符，可将 CommandBefore 与 CommandAfter 进行匹配 Declaration public Guid Identifier { get; protected set; } Property Value Type Description System.Guid | Improve this Doc View Source States 状态数据，可与 CommandAfter 共享 Declaration public Dictionary<string, object> States { get; protected set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source Stopwatch Declaration protected Stopwatch Stopwatch { get; } Property Value Type Description System.Diagnostics.Stopwatch"
  },
  "api/FreeSql.Aop.ConfigEntityEventArgs.html": {
    "href": "api/FreeSql.Aop.ConfigEntityEventArgs.html",
    "title": "Class ConfigEntityEventArgs | FreeSql API Docs",
    "keywords": "Class ConfigEntityEventArgs Inheritance System.Object System.EventArgs ConfigEntityEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class ConfigEntityEventArgs : EventArgs Constructors | Improve this Doc View Source ConfigEntityEventArgs(Type) Declaration public ConfigEntityEventArgs(Type entityType) Parameters Type Name Description System.Type entityType Properties | Improve this Doc View Source EntityType 实体类型 Declaration public Type EntityType { get; } Property Value Type Description System.Type | Improve this Doc View Source ModifyIndexResult 索引配置 Declaration public List<IndexAttribute> ModifyIndexResult { get; } Property Value Type Description System.Collections.Generic.List < IndexAttribute > | Improve this Doc View Source ModifyResult 实体配置 Declaration public TableAttribute ModifyResult { get; } Property Value Type Description TableAttribute"
  },
  "api/FreeSql.Aop.ConfigEntityPropertyEventArgs.html": {
    "href": "api/FreeSql.Aop.ConfigEntityPropertyEventArgs.html",
    "title": "Class ConfigEntityPropertyEventArgs | FreeSql API Docs",
    "keywords": "Class ConfigEntityPropertyEventArgs Inheritance System.Object System.EventArgs ConfigEntityPropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class ConfigEntityPropertyEventArgs : EventArgs Constructors | Improve this Doc View Source ConfigEntityPropertyEventArgs(Type, PropertyInfo) Declaration public ConfigEntityPropertyEventArgs(Type entityType, PropertyInfo property) Parameters Type Name Description System.Type entityType System.Reflection.PropertyInfo property Properties | Improve this Doc View Source EntityType 实体类型 Declaration public Type EntityType { get; } Property Value Type Description System.Type | Improve this Doc View Source ModifyResult 实体的属性配置 Declaration public ColumnAttribute ModifyResult { get; } Property Value Type Description ColumnAttribute | Improve this Doc View Source Property 实体的属性 Declaration public PropertyInfo Property { get; } Property Value Type Description System.Reflection.PropertyInfo"
  },
  "api/FreeSql.Aop.CurdAfterEventArgs.html": {
    "href": "api/FreeSql.Aop.CurdAfterEventArgs.html",
    "title": "Class CurdAfterEventArgs | FreeSql API Docs",
    "keywords": "Class CurdAfterEventArgs Inheritance System.Object System.EventArgs CurdBeforeEventArgs CurdAfterEventArgs Inherited Members CurdBeforeEventArgs.Identifier CurdBeforeEventArgs.Stopwatch CurdBeforeEventArgs.CurdType CurdBeforeEventArgs.EntityType CurdBeforeEventArgs.Table CurdBeforeEventArgs.Sql CurdBeforeEventArgs.DbParms CurdBeforeEventArgs.States System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class CurdAfterEventArgs : CurdBeforeEventArgs Constructors | Improve this Doc View Source CurdAfterEventArgs(CurdBeforeEventArgs, Exception, Object) Declaration public CurdAfterEventArgs(CurdBeforeEventArgs before, Exception exception, object executeResult) Parameters Type Name Description CurdBeforeEventArgs before System.Exception exception System.Object executeResult Properties | Improve this Doc View Source ElapsedMilliseconds 耗时（单位：毫秒） Declaration public long ElapsedMilliseconds { get; } Property Value Type Description System.Int64 | Improve this Doc View Source ElapsedTicks 耗时（单位：Ticks） Declaration public long ElapsedTicks { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Exception 发生的错误 Declaration public Exception Exception { get; } Property Value Type Description System.Exception | Improve this Doc View Source ExecuteResult 执行SQL命令，返回的结果 Declaration public object ExecuteResult { get; } Property Value Type Description System.Object"
  },
  "api/FreeSql.Aop.CurdBeforeEventArgs.html": {
    "href": "api/FreeSql.Aop.CurdBeforeEventArgs.html",
    "title": "Class CurdBeforeEventArgs | FreeSql API Docs",
    "keywords": "Class CurdBeforeEventArgs Inheritance System.Object System.EventArgs CurdBeforeEventArgs CurdAfterEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class CurdBeforeEventArgs : EventArgs Constructors | Improve this Doc View Source CurdBeforeEventArgs(Guid, Stopwatch, Type, TableInfo, CurdType, String, DbParameter[], Dictionary<String, Object>) Declaration protected CurdBeforeEventArgs(Guid identifier, Stopwatch stopwatch, Type entityType, TableInfo table, CurdType curdType, string sql, DbParameter[] dbParms, Dictionary<string, object> states) Parameters Type Name Description System.Guid identifier System.Diagnostics.Stopwatch stopwatch System.Type entityType TableInfo table CurdType curdType System.String sql System.Data.Common.DbParameter [] dbParms System.Collections.Generic.Dictionary < System.String , System.Object > states | Improve this Doc View Source CurdBeforeEventArgs(Type, TableInfo, CurdType, String, DbParameter[]) Declaration public CurdBeforeEventArgs(Type entityType, TableInfo table, CurdType curdType, string sql, DbParameter[] dbParms) Parameters Type Name Description System.Type entityType TableInfo table CurdType curdType System.String sql System.Data.Common.DbParameter [] dbParms Properties | Improve this Doc View Source CurdType 操作类型 Declaration public CurdType CurdType { get; } Property Value Type Description CurdType | Improve this Doc View Source DbParms 参数化命令 Declaration public DbParameter[] DbParms { get; } Property Value Type Description System.Data.Common.DbParameter [] | Improve this Doc View Source EntityType 实体类型 Declaration public Type EntityType { get; } Property Value Type Description System.Type | Improve this Doc View Source Identifier 标识符，可将 CurdBefore 与 CurdAfter 进行匹配 Declaration public Guid Identifier { get; protected set; } Property Value Type Description System.Guid | Improve this Doc View Source Sql 执行的 SQL Declaration public string Sql { get; } Property Value Type Description System.String | Improve this Doc View Source States 状态数据，可与 CurdAfter 共享 Declaration public Dictionary<string, object> States { get; protected set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source Stopwatch Declaration protected Stopwatch Stopwatch { get; } Property Value Type Description System.Diagnostics.Stopwatch | Improve this Doc View Source Table 实体类型的元数据 Declaration public TableInfo Table { get; } Property Value Type Description TableInfo"
  },
  "api/FreeSql.Aop.CurdType.html": {
    "href": "api/FreeSql.Aop.CurdType.html",
    "title": "Enum CurdType | FreeSql API Docs",
    "keywords": "Enum CurdType Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public enum CurdType Fields Name Description Delete Insert InsertOrUpdate Select Update Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Aop.html": {
    "href": "api/FreeSql.Aop.html",
    "title": "Namespace FreeSql.Aop | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Aop Classes AuditDataReaderEventArgs AuditValueEventArgs CommandAfterEventArgs CommandBeforeEventArgs ConfigEntityEventArgs ConfigEntityPropertyEventArgs CurdAfterEventArgs CurdBeforeEventArgs ParseExpressionEventArgs SyncStructureAfterEventArgs SyncStructureBeforeEventArgs TraceAfterEventArgs TraceBeforeEventArgs Enums AuditValueType CurdType"
  },
  "api/FreeSql.Aop.ParseExpressionEventArgs.html": {
    "href": "api/FreeSql.Aop.ParseExpressionEventArgs.html",
    "title": "Class ParseExpressionEventArgs | FreeSql API Docs",
    "keywords": "Class ParseExpressionEventArgs Inheritance System.Object System.EventArgs ParseExpressionEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class ParseExpressionEventArgs : EventArgs Constructors | Improve this Doc View Source ParseExpressionEventArgs(Expression, Func<Expression, String>) Declaration public ParseExpressionEventArgs(Expression expression, Func<Expression, string> freeParse) Parameters Type Name Description System.Linq.Expressions.Expression expression System.Func < System.Linq.Expressions.Expression , System.String > freeParse Properties | Improve this Doc View Source Expression 需要您解析的表达式 Declaration public Expression Expression { get; } Property Value Type Description System.Linq.Expressions.Expression | Improve this Doc View Source FreeParse 内置解析功能，可辅助您进行解析 Declaration public Func<Expression, string> FreeParse { get; } Property Value Type Description System.Func < System.Linq.Expressions.Expression , System.String > | Improve this Doc View Source Result 解析后的内容 Declaration public string Result { get; set; } Property Value Type Description System.String"
  },
  "api/FreeSql.Aop.SyncStructureAfterEventArgs.html": {
    "href": "api/FreeSql.Aop.SyncStructureAfterEventArgs.html",
    "title": "Class SyncStructureAfterEventArgs | FreeSql API Docs",
    "keywords": "Class SyncStructureAfterEventArgs Inheritance System.Object System.EventArgs SyncStructureBeforeEventArgs SyncStructureAfterEventArgs Inherited Members SyncStructureBeforeEventArgs.Identifier SyncStructureBeforeEventArgs.Stopwatch SyncStructureBeforeEventArgs.EntityTypes SyncStructureBeforeEventArgs.States System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class SyncStructureAfterEventArgs : SyncStructureBeforeEventArgs Constructors | Improve this Doc View Source SyncStructureAfterEventArgs(SyncStructureBeforeEventArgs, String, Exception) Declaration public SyncStructureAfterEventArgs(SyncStructureBeforeEventArgs before, string sql, Exception exception) Parameters Type Name Description SyncStructureBeforeEventArgs before System.String sql System.Exception exception Properties | Improve this Doc View Source ElapsedMilliseconds 耗时（单位：毫秒） Declaration public long ElapsedMilliseconds { get; } Property Value Type Description System.Int64 | Improve this Doc View Source ElapsedTicks 耗时（单位：Ticks） Declaration public long ElapsedTicks { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Exception 发生的错误 Declaration public Exception Exception { get; } Property Value Type Description System.Exception | Improve this Doc View Source Sql 执行的 SQL Declaration public string Sql { get; } Property Value Type Description System.String"
  },
  "api/FreeSql.Aop.SyncStructureBeforeEventArgs.html": {
    "href": "api/FreeSql.Aop.SyncStructureBeforeEventArgs.html",
    "title": "Class SyncStructureBeforeEventArgs | FreeSql API Docs",
    "keywords": "Class SyncStructureBeforeEventArgs Inheritance System.Object System.EventArgs SyncStructureBeforeEventArgs SyncStructureAfterEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class SyncStructureBeforeEventArgs : EventArgs Constructors | Improve this Doc View Source SyncStructureBeforeEventArgs(Guid, Stopwatch, Type[], Dictionary<String, Object>) Declaration protected SyncStructureBeforeEventArgs(Guid identifier, Stopwatch stopwatch, Type[] entityTypes, Dictionary<string, object> states) Parameters Type Name Description System.Guid identifier System.Diagnostics.Stopwatch stopwatch System.Type [] entityTypes System.Collections.Generic.Dictionary < System.String , System.Object > states | Improve this Doc View Source SyncStructureBeforeEventArgs(Type[]) Declaration public SyncStructureBeforeEventArgs(Type[] entityTypes) Parameters Type Name Description System.Type [] entityTypes Properties | Improve this Doc View Source EntityTypes 实体类型 Declaration public Type[] EntityTypes { get; } Property Value Type Description System.Type [] | Improve this Doc View Source Identifier 标识符，可将 SyncStructureBeforeEventArgs 与 SyncStructureAfterEventArgs 进行匹配 Declaration public Guid Identifier { get; protected set; } Property Value Type Description System.Guid | Improve this Doc View Source States 状态数据，可与 SyncStructureAfter 共享 Declaration public Dictionary<string, object> States { get; protected set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source Stopwatch Declaration protected Stopwatch Stopwatch { get; } Property Value Type Description System.Diagnostics.Stopwatch"
  },
  "api/FreeSql.Aop.TraceAfterEventArgs.html": {
    "href": "api/FreeSql.Aop.TraceAfterEventArgs.html",
    "title": "Class TraceAfterEventArgs | FreeSql API Docs",
    "keywords": "Class TraceAfterEventArgs Inheritance System.Object System.EventArgs TraceBeforeEventArgs TraceAfterEventArgs Inherited Members TraceBeforeEventArgs.Identifier TraceBeforeEventArgs.Stopwatch TraceBeforeEventArgs.Operation TraceBeforeEventArgs.Value TraceBeforeEventArgs.States System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class TraceAfterEventArgs : TraceBeforeEventArgs Constructors | Improve this Doc View Source TraceAfterEventArgs(TraceBeforeEventArgs, String, Exception) Declaration public TraceAfterEventArgs(TraceBeforeEventArgs before, string remark, Exception exception) Parameters Type Name Description TraceBeforeEventArgs before System.String remark System.Exception exception Properties | Improve this Doc View Source ElapsedMilliseconds 耗时（单位：毫秒） Declaration public long ElapsedMilliseconds { get; } Property Value Type Description System.Int64 | Improve this Doc View Source ElapsedTicks 耗时（单位：Ticks） Declaration public long ElapsedTicks { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Exception 发生的错误 Declaration public Exception Exception { get; } Property Value Type Description System.Exception | Improve this Doc View Source Remark 备注 Declaration public string Remark { get; } Property Value Type Description System.String"
  },
  "api/FreeSql.Aop.TraceBeforeEventArgs.html": {
    "href": "api/FreeSql.Aop.TraceBeforeEventArgs.html",
    "title": "Class TraceBeforeEventArgs | FreeSql API Docs",
    "keywords": "Class TraceBeforeEventArgs Inheritance System.Object System.EventArgs TraceBeforeEventArgs TraceAfterEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : FreeSql.dll Syntax public class TraceBeforeEventArgs : EventArgs Constructors | Improve this Doc View Source TraceBeforeEventArgs(Guid, Stopwatch, String, Object, Dictionary<String, Object>) Declaration protected TraceBeforeEventArgs(Guid identifier, Stopwatch stopwatch, string operation, object value, Dictionary<string, object> states) Parameters Type Name Description System.Guid identifier System.Diagnostics.Stopwatch stopwatch System.String operation System.Object value System.Collections.Generic.Dictionary < System.String , System.Object > states | Improve this Doc View Source TraceBeforeEventArgs(String, Object) Declaration public TraceBeforeEventArgs(string operation, object value) Parameters Type Name Description System.String operation System.Object value Properties | Improve this Doc View Source Identifier 标识符，可将 TraceBeforeEventArgs 与 TraceAfterEventArgs 进行匹配 Declaration public Guid Identifier { get; protected set; } Property Value Type Description System.Guid | Improve this Doc View Source Operation Declaration public string Operation { get; } Property Value Type Description System.String | Improve this Doc View Source States 状态数据，可与 TraceAfter 共享 Declaration public Dictionary<string, object> States { get; protected set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source Stopwatch Declaration protected Stopwatch Stopwatch { get; } Property Value Type Description System.Diagnostics.Stopwatch | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description System.Object"
  },
  "api/FreeSql.DataAnnotations.ColumnAttribute.html": {
    "href": "api/FreeSql.DataAnnotations.ColumnAttribute.html",
    "title": "Class ColumnAttribute | FreeSql API Docs",
    "keywords": "Class ColumnAttribute Inheritance System.Object System.Attribute ColumnAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax [AttributeUsage(AttributeTargets.Property)] public class ColumnAttribute : Attribute Properties | Improve this Doc View Source CanInsert 该字段是否可以插入，默认值true，指定为false插入时该字段会被忽略 Declaration public bool CanInsert { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanUpdate 该字段是否可以更新，默认值true，指定为false更新时该字段会被忽略 Declaration public bool CanUpdate { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DbType 数据库类型，如： varchar(255) 字符串长度，可使用特性 [MaxLength(255)] Declaration public string DbType { get; set; } Property Value Type Description System.String | Improve this Doc View Source InsertValueSql 执行 Insert 方法时使用此值 注意：如果是 getdate() 这种请可考虑使用 ServerTime，因为它对数据库间作了适配 Declaration public string InsertValueSql { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsIdentity 自增标识 Declaration public bool IsIdentity { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsIgnore 忽略此列，不迁移、不插入 Declaration public bool IsIgnore { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNullable 是否可DBNull Declaration public bool IsNullable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPrimary 主键 Declaration public bool IsPrimary { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVersion 设置行锁（乐观锁）版本号，每次更新累加版本号，若更新整个实体时会附带当前的版本号判断（修改失败时抛出异常） Declaration public bool IsVersion { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MapType 类型映射，除了可做基本的类型映射外，特别介绍的功能： 1、将 enum 属性映射成 typeof(string) 2、将 对象 属性映射成 typeof(string)，请安装扩展包 FreeSql.Extensions.JsonMap Declaration public Type MapType { get; set; } Property Value Type Description System.Type | Improve this Doc View Source Name 数据库列名 Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source OldName 指定数据库旧的列名，修改实体属性命名时，同时设置此参数为修改之前的值，CodeFirst才可以正确修改数据库字段；否则将视为【新增字段】 Declaration public string OldName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Position 创建表时字段的位置（场景：实体继承后设置字段顺序），规则如下： >0时排前面，1,2,3... =0时排中间(默认) <0时排后面，...-3,-2,-1 Declaration public short Position { get; set; } Property Value Type Description System.Int16 | Improve this Doc View Source Precision decimal/numeric 类型的长度 Declaration public int Precision { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RereadSql 重读功能 比如：[Column(RereadSql = \"{0}.STAsText()\")] 查询：SELECT a.[id], a.[geo].STAsText() FROM [table] a Declaration public string RereadSql { get; set; } Property Value Type Description System.String | Improve this Doc View Source RewriteSql 重写功能 比如：[Column(RewriteSql = \"geography::STGeomFromText({0},4236)\")] 插入：INSERT INTO table VALUES(geography::STGeomFromText('...',4236)) 提示：更新也生效 Declaration public string RewriteSql { get; set; } Property Value Type Description System.String | Improve this Doc View Source Scale decimal/numeric 类型的小数位长度 Declaration public int Scale { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ServerTime 标记属性为数据库服务器时间(utc/local)，在插入的时候使用类似 getdate() 执行 Declaration public DateTimeKind ServerTime { get; set; } Property Value Type Description System.DateTimeKind | Improve this Doc View Source StringLength 设置长度，针对 string/byte[] 类型避免 DbType 的繁琐设置 提示：也可以使用 [MaxLength(100)] --- StringLength = 100 时，对应 DbType： MySql -> varchar(100) SqlServer -> nvarchar(100) PostgreSQL -> varchar(100) Oracle -> nvarchar2(100) Sqlite -> nvarchar(100) --- StringLength < 0 时，对应 DbType： MySql -> text (StringLength = -2 时，对应 longtext) SqlServer -> nvarchar(max) PostgreSQL -> text Oracle -> nclob Sqlite -> text v1.6.0+ byte[] 支持设置 StringLength Declaration public int StringLength { get; set; } Property Value Type Description System.Int32"
  },
  "api/FreeSql.DataAnnotations.ColumnFluent.html": {
    "href": "api/FreeSql.DataAnnotations.ColumnFluent.html",
    "title": "Class ColumnFluent | FreeSql API Docs",
    "keywords": "Class ColumnFluent Inheritance System.Object ColumnFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax public class ColumnFluent Constructors | Improve this Doc View Source ColumnFluent(ColumnAttribute, PropertyInfo, Type) Declaration public ColumnFluent(ColumnAttribute column, PropertyInfo property, Type entityType) Parameters Type Name Description ColumnAttribute column System.Reflection.PropertyInfo property System.Type entityType Fields | Improve this Doc View Source _column Declaration public ColumnAttribute _column Field Value Type Description ColumnAttribute | Improve this Doc View Source _entityType Declaration public Type _entityType Field Value Type Description System.Type | Improve this Doc View Source _property Declaration public PropertyInfo _property Field Value Type Description System.Reflection.PropertyInfo Methods | Improve this Doc View Source CanInsert(Boolean) 该字段是否可以插入，默认值true，指定为false插入时该字段会被忽略 Declaration public ColumnFluent CanInsert(bool value) Parameters Type Name Description System.Boolean value Returns Type Description ColumnFluent | Improve this Doc View Source CanUpdate(Boolean) 该字段是否可以更新，默认值true，指定为false更新时该字段会被忽略 Declaration public ColumnFluent CanUpdate(bool value) Parameters Type Name Description System.Boolean value Returns Type Description ColumnFluent | Improve this Doc View Source DbType(String) 数据库类型，如： varchar(255) Declaration public ColumnFluent DbType(string value) Parameters Type Name Description System.String value Returns Type Description ColumnFluent | Improve this Doc View Source InsertValueSql(String) 执行 Insert 方法时使用此值 注意：如果是 getdate() 这种请可考虑使用 ServerTime，因为它对数据库间作了适配 Declaration public ColumnFluent InsertValueSql(string value) Parameters Type Name Description System.String value Returns Type Description ColumnFluent | Improve this Doc View Source IsIdentity(Boolean) 自增标识 Declaration public ColumnFluent IsIdentity(bool value) Parameters Type Name Description System.Boolean value Returns Type Description ColumnFluent | Improve this Doc View Source IsIgnore(Boolean) 忽略此列，不迁移、不插入 Declaration public ColumnFluent IsIgnore(bool value) Parameters Type Name Description System.Boolean value Returns Type Description ColumnFluent | Improve this Doc View Source IsNullable(Boolean) 是否可DBNull Declaration public ColumnFluent IsNullable(bool value) Parameters Type Name Description System.Boolean value Returns Type Description ColumnFluent | Improve this Doc View Source IsPrimary(Boolean) 主键 Declaration public ColumnFluent IsPrimary(bool value) Parameters Type Name Description System.Boolean value Returns Type Description ColumnFluent | Improve this Doc View Source IsVersion(Boolean) 乐观锁 Declaration public ColumnFluent IsVersion(bool value) Parameters Type Name Description System.Boolean value Returns Type Description ColumnFluent | Improve this Doc View Source MapType(Type) 类型映射，比如：可将 enum 属性映射成 typeof(string) Declaration public ColumnFluent MapType(Type value) Parameters Type Name Description System.Type value Returns Type Description ColumnFluent | Improve this Doc View Source Name(String) 数据库列名 Declaration public ColumnFluent Name(string value) Parameters Type Name Description System.String value Returns Type Description ColumnFluent | Improve this Doc View Source OldName(String) 指定数据库旧的列名，修改实体属性命名时，同时设置此参数为修改之前的值，CodeFirst才可以正确修改数据库字段；否则将视为【新增字段】 Declaration public ColumnFluent OldName(string value) Parameters Type Name Description System.String value Returns Type Description ColumnFluent | Improve this Doc View Source Position(Int16) 创建表时字段位置，规则如下： >0时排前面 =0时排中间(默认) <0时排后面 Declaration public ColumnFluent Position(short value) Parameters Type Name Description System.Int16 value Returns Type Description ColumnFluent | Improve this Doc View Source Precision(Int32, Int32) decimal/numeric 类型的长度/小数位长度 Declaration public ColumnFluent Precision(int precision, int scale = 0) Parameters Type Name Description System.Int32 precision 总长度 System.Int32 scale 小数位长度 Returns Type Description ColumnFluent | Improve this Doc View Source RereadSql(String) 重读功能 比如：[Column(RereadSql = \"{0}.STAsText()\")] 查询：SELECT a.[id], a.[geo].STAsText() FROM [table] a Declaration public ColumnFluent RereadSql(string value) Parameters Type Name Description System.String value Returns Type Description ColumnFluent | Improve this Doc View Source RewriteSql(String) 重写功能 比如：[Column(RewriteSql = \"geography::STGeomFromText({0},4236)\")] 插入：INSERT INTO table VALUES(geography::STGeomFromText('...',4236)) 提示：更新也生效 Declaration public ColumnFluent RewriteSql(string value) Parameters Type Name Description System.String value Returns Type Description ColumnFluent | Improve this Doc View Source ServerTime(DateTimeKind) 标记属性为数据库服务器时间(utc/local)，在插入的时候使用类似 getdate() 执行 Declaration public ColumnFluent ServerTime(DateTimeKind value) Parameters Type Name Description System.DateTimeKind value Returns Type Description ColumnFluent | Improve this Doc View Source StringLength(Int32) 设置长度，针对 string 类型避免 DbType 的繁琐设置 --- StringLength = 100 时，对应 DbType： MySql -> varchar(100) SqlServer -> nvarchar(100) PostgreSQL -> varchar(100) Oracle -> nvarchar2(100) Sqlite -> nvarchar(100) --- StringLength = -1 时，对应 DbType： MySql -> text SqlServer -> nvarchar(max) PostgreSQL -> text Oracle -> nvarchar2(4000) Sqlite -> text Declaration public ColumnFluent StringLength(int value) Parameters Type Name Description System.Int32 value Returns Type Description ColumnFluent"
  },
  "api/FreeSql.DataAnnotations.ExpressionCallAttribute.html": {
    "href": "api/FreeSql.DataAnnotations.ExpressionCallAttribute.html",
    "title": "Class ExpressionCallAttribute | FreeSql API Docs",
    "keywords": "Class ExpressionCallAttribute 自定义表达式函数解析 注意：请使用静态方法、或者在类上标记 Inheritance System.Object System.Attribute ExpressionCallAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method)] public class ExpressionCallAttribute : Attribute"
  },
  "api/FreeSql.DataAnnotations.ExpressionCallContext.html": {
    "href": "api/FreeSql.DataAnnotations.ExpressionCallContext.html",
    "title": "Class ExpressionCallContext | FreeSql API Docs",
    "keywords": "Class ExpressionCallContext Inheritance System.Object ExpressionCallContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax public class ExpressionCallContext Properties | Improve this Doc View Source DataType 数据库类型，可用于适配多种数据库环境 Declaration public DataType DataType { get; } Property Value Type Description DataType | Improve this Doc View Source DbParameter 主对象的参数化对象，可重塑其属性 Declaration public DbParameter DbParameter { get; } Property Value Type Description System.Data.Common.DbParameter | Improve this Doc View Source FormatSql 将 c# 对象转换为 SQL Declaration public Func<object, string> FormatSql { get; } Property Value Type Description System.Func < System.Object , System.String > | Improve this Doc View Source ParsedContent 已解析的表达式中参数内容 Declaration public Dictionary<string, string> ParsedContent { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > | Improve this Doc View Source RawExpression 表达式原始值 Declaration public Dictionary<string, Expression> RawExpression { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Linq.Expressions.Expression > | Improve this Doc View Source Result 返回表达式函数表示的 SQL 字符串 Declaration public string Result { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserParameters 可附加参数化对象 注意：本属性只有 Where 的表达式解析才可用 Declaration public List<DbParameter> UserParameters { get; } Property Value Type Description System.Collections.Generic.List < System.Data.Common.DbParameter > | Improve this Doc View Source Utility Declaration public ExpressionCallContext.IUtility Utility { get; } Property Value Type Description ExpressionCallContext.IUtility"
  },
  "api/FreeSql.DataAnnotations.ExpressionCallContext.IUtility.html": {
    "href": "api/FreeSql.DataAnnotations.ExpressionCallContext.IUtility.html",
    "title": "Interface ExpressionCallContext.IUtility | FreeSql API Docs",
    "keywords": "Interface ExpressionCallContext.IUtility Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax public interface IUtility Properties | Improve this Doc View Source CommonUtils (非公开)内部公共工具类方法 Declaration CommonUtils CommonUtils { get; } Property Value Type Description CommonUtils Methods | Improve this Doc View Source GetTableByEntity(Type) 获取实体元数据 Declaration TableInfo GetTableByEntity(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description TableInfo | Improve this Doc View Source ParseExpression(Expression) 解析表达式 Declaration string ParseExpression(Expression exp) Parameters Type Name Description System.Linq.Expressions.Expression exp Returns Type Description System.String"
  },
  "api/FreeSql.DataAnnotations.html": {
    "href": "api/FreeSql.DataAnnotations.html",
    "title": "Namespace FreeSql.DataAnnotations | FreeSql API Docs",
    "keywords": "Namespace FreeSql.DataAnnotations Classes ColumnAttribute ColumnFluent ExpressionCallAttribute 自定义表达式函数解析 注意：请使用静态方法、或者在类上标记 ExpressionCallContext IndexAttribute 索引设置，如：[Index(\"{tablename}_idx_01\", \"name\")] NavigateAttribute OraclePrimaryKeyNameAttribute RawValueAttribute 自定义表达式函数解析的时候，指定参数不解析 SQL，而是直接传进来 TableAttribute TableFluent TableFluent<T> Interfaces ExpressionCallContext.IUtility"
  },
  "api/FreeSql.DataAnnotations.IndexAttribute.html": {
    "href": "api/FreeSql.DataAnnotations.IndexAttribute.html",
    "title": "Class IndexAttribute | FreeSql API Docs",
    "keywords": "Class IndexAttribute 索引设置，如：[Index(\"{tablename}_idx_01\", \"name\")] Inheritance System.Object System.Attribute IndexAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class IndexAttribute : Attribute Constructors | Improve this Doc View Source IndexAttribute(String, String) 索引设置，如：[Index(\"{tablename}_idx_01\", \"name\")] Declaration public IndexAttribute(string name, string fields) Parameters Type Name Description System.String name 索引名 v1.7.0 增加占位符 {TableName} 表名区分索引名 （解决 AsTable 分表 CodeFirst 导致索引名重复的问题） System.String fields 索引字段，为属性名以逗号分隔，如：Create_time ASC, Title ASC | Improve this Doc View Source IndexAttribute(String, String, Boolean) 索引设置，如：[Index(\"{tablename}_idx_01\", \"name\", true)] Declaration public IndexAttribute(string name, string fields, bool isUnique) Parameters Type Name Description System.String name 索引名 v1.7.0 增加占位符 {TableName} 表名区分索引名 （解决 AsTable 分表 CodeFirst 导致索引名重复的问题） System.String fields 索引字段，为属性名以逗号分隔，如：Create_time ASC, Title ASC System.Boolean isUnique 是否唯一 Properties | Improve this Doc View Source Fields 索引字段，为属性名以逗号分隔，如：Create_time ASC, Title ASC Declaration public string Fields { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsUnique 是否唯一 Declaration public bool IsUnique { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name 索引名 v1.7.0 增加占位符 {TableName} 表名区分索引名 （解决 AsTable 分表 CodeFirst 导致索引名重复的问题） Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/FreeSql.DataAnnotations.NavigateAttribute.html": {
    "href": "api/FreeSql.DataAnnotations.NavigateAttribute.html",
    "title": "Class NavigateAttribute | FreeSql API Docs",
    "keywords": "Class NavigateAttribute Inheritance System.Object System.Attribute NavigateAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax public class NavigateAttribute : Attribute Constructors | Improve this Doc View Source NavigateAttribute() Declaration public NavigateAttribute() | Improve this Doc View Source NavigateAttribute(String) Declaration public NavigateAttribute(string bind) Parameters Type Name Description System.String bind Properties | Improve this Doc View Source Bind 手工绑定 OneToMany、ManyToOne 导航关系 Declaration public string Bind { get; set; } Property Value Type Description System.String | Improve this Doc View Source ManyToMany 手工绑定 ManyToMany 导航关系 Declaration public Type ManyToMany { get; set; } Property Value Type Description System.Type"
  },
  "api/FreeSql.DataAnnotations.OraclePrimaryKeyNameAttribute.html": {
    "href": "api/FreeSql.DataAnnotations.OraclePrimaryKeyNameAttribute.html",
    "title": "Class OraclePrimaryKeyNameAttribute | FreeSql API Docs",
    "keywords": "Class OraclePrimaryKeyNameAttribute Inheritance System.Object System.Attribute OraclePrimaryKeyNameAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class OraclePrimaryKeyNameAttribute : Attribute Constructors | Improve this Doc View Source OraclePrimaryKeyNameAttribute(String) Declaration public OraclePrimaryKeyNameAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Name 主键名 Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/FreeSql.DataAnnotations.RawValueAttribute.html": {
    "href": "api/FreeSql.DataAnnotations.RawValueAttribute.html",
    "title": "Class RawValueAttribute | FreeSql API Docs",
    "keywords": "Class RawValueAttribute 自定义表达式函数解析的时候，指定参数不解析 SQL，而是直接传进来 Inheritance System.Object System.Attribute RawValueAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax [AttributeUsage(AttributeTargets.Parameter)] public class RawValueAttribute : Attribute"
  },
  "api/FreeSql.DataAnnotations.TableAttribute.html": {
    "href": "api/FreeSql.DataAnnotations.TableAttribute.html",
    "title": "Class TableAttribute | FreeSql API Docs",
    "keywords": "Class TableAttribute Inheritance System.Object System.Attribute TableAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class TableAttribute : Attribute Properties | Improve this Doc View Source DisableSyncStructure 禁用 CodeFirst 同步结构迁移 Declaration public bool DisableSyncStructure { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name 数据库表名 Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source OldName 指定数据库旧的表名，修改实体命名时，同时设置此参数为修改之前的值，CodeFirst才可以正确修改数据库表；否则将视为【创建新表】 Declaration public string OldName { get; set; } Property Value Type Description System.String"
  },
  "api/FreeSql.DataAnnotations.TableFluent.html": {
    "href": "api/FreeSql.DataAnnotations.TableFluent.html",
    "title": "Class TableFluent | FreeSql API Docs",
    "keywords": "Class TableFluent Inheritance System.Object TableFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax public class TableFluent Constructors | Improve this Doc View Source TableFluent(Type, TableAttribute) Declaration public TableFluent(Type entityType, TableAttribute table) Parameters Type Name Description System.Type entityType TableAttribute table Methods | Improve this Doc View Source DisableSyncStructure(Boolean) 禁用 CodeFirst 同步结构迁移 Declaration public TableFluent DisableSyncStructure(bool value) Parameters Type Name Description System.Boolean value Returns Type Description TableFluent | Improve this Doc View Source Index(String, String, Boolean) 设置实体的索引 Declaration public TableFluent Index(string name, string fields, bool isUnique = false) Parameters Type Name Description System.String name 索引名 System.String fields 索引字段，为属性名以逗号分隔，如：Create_time ASC, Title ASC System.Boolean isUnique 是否唯一 Returns Type Description TableFluent | Improve this Doc View Source IndexRemove(String) Declaration public TableFluent IndexRemove(string name) Parameters Type Name Description System.String name Returns Type Description TableFluent | Improve this Doc View Source Name(String) 数据库表名 Declaration public TableFluent Name(string value) Parameters Type Name Description System.String value Returns Type Description TableFluent | Improve this Doc View Source Navigate(String, String, Type) 导航关系Fluent，与 NavigateAttribute 对应 Declaration public TableFluent Navigate(string proto, string bind, Type manyToMany = null) Parameters Type Name Description System.String proto System.String bind System.Type manyToMany 多对多关系的中间实体类型 Returns Type Description TableFluent | Improve this Doc View Source OldName(String) 指定数据库旧的表名，修改实体命名时，同时设置此参数为修改之前的值，CodeFirst才可以正确修改数据库表；否则将视为【创建新表】 Declaration public TableFluent OldName(string value) Parameters Type Name Description System.String value Returns Type Description TableFluent | Improve this Doc View Source Property(String) Declaration public ColumnFluent Property(string proto) Parameters Type Name Description System.String proto Returns Type Description ColumnFluent"
  },
  "api/FreeSql.DataAnnotations.TableFluent-1.html": {
    "href": "api/FreeSql.DataAnnotations.TableFluent-1.html",
    "title": "Class TableFluent<T> | FreeSql API Docs",
    "keywords": "Class TableFluent<T> Inheritance System.Object TableFluent<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DataAnnotations Assembly : FreeSql.dll Syntax public class TableFluent<T> Type Parameters Name Description T Constructors | Improve this Doc View Source TableFluent(TableAttribute) Declaration public TableFluent(TableAttribute table) Parameters Type Name Description TableAttribute table Methods | Improve this Doc View Source DisableSyncStructure(Boolean) 禁用 CodeFirst 同步结构迁移 Declaration public TableFluent<T> DisableSyncStructure(bool value) Parameters Type Name Description System.Boolean value Returns Type Description TableFluent <T> | Improve this Doc View Source Index(String, String, Boolean) 设置实体的索引 Declaration public TableFluent<T> Index(string name, string fields, bool isUnique = false) Parameters Type Name Description System.String name 索引名 System.String fields 索引字段，为属性名以逗号分隔，如：Create_time ASC, Title ASC System.Boolean isUnique 是否唯一 Returns Type Description TableFluent <T> | Improve this Doc View Source IndexRemove(String) Declaration public TableFluent<T> IndexRemove(string name) Parameters Type Name Description System.String name Returns Type Description TableFluent <T> | Improve this Doc View Source Name(String) 数据库表名 Declaration public TableFluent<T> Name(string value) Parameters Type Name Description System.String value Returns Type Description TableFluent <T> | Improve this Doc View Source Navigate(String, String, Type) Declaration public TableFluent<T> Navigate(string proto, string bind, Type manyToMany = null) Parameters Type Name Description System.String proto System.String bind System.Type manyToMany Returns Type Description TableFluent <T> | Improve this Doc View Source Navigate<TProto>(Expression<Func<T, TProto>>, String, Type) 导航关系Fluent，与 NavigateAttribute 对应 Declaration public TableFluent<T> Navigate<TProto>(Expression<Func<T, TProto>> proto, string bind, Type manyToMany = null) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, TProto>> proto System.String bind System.Type manyToMany 多对多关系的中间实体类型 Returns Type Description TableFluent <T> Type Parameters Name Description TProto | Improve this Doc View Source OldName(String) 指定数据库旧的表名，修改实体命名时，同时设置此参数为修改之前的值，CodeFirst才可以正确修改数据库表；否则将视为【创建新表】 Declaration public TableFluent<T> OldName(string value) Parameters Type Name Description System.String value Returns Type Description TableFluent <T> | Improve this Doc View Source Property(String) Declaration public ColumnFluent Property(string proto) Parameters Type Name Description System.String proto Returns Type Description ColumnFluent | Improve this Doc View Source Property<TProto>(Expression<Func<T, TProto>>) Declaration public ColumnFluent Property<TProto>(Expression<Func<T, TProto>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, TProto>> column Returns Type Description ColumnFluent Type Parameters Name Description TProto"
  },
  "api/FreeSql.DatabaseModel.DbColumnInfo.html": {
    "href": "api/FreeSql.DatabaseModel.DbColumnInfo.html",
    "title": "Class DbColumnInfo | FreeSql API Docs",
    "keywords": "Class DbColumnInfo Inheritance System.Object DbColumnInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public class DbColumnInfo Properties | Improve this Doc View Source Coment 备注 Declaration public string Coment { get; set; } Property Value Type Description System.String | Improve this Doc View Source CsType 映射到 C# 类型 Declaration public Type CsType { get; set; } Property Value Type Description System.Type | Improve this Doc View Source DbType 数据库枚举类型int值 Declaration public int DbType { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DbTypeText 数据库类型，字符串，varchar Declaration public string DbTypeText { get; set; } Property Value Type Description System.String | Improve this Doc View Source DbTypeTextFull 数据库类型，字符串，varchar(255) Declaration public string DbTypeTextFull { get; set; } Property Value Type Description System.String | Improve this Doc View Source DefaultValue 数据库默认值 Declaration public string DefaultValue { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsIdentity 自增标识 Declaration public bool IsIdentity { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNullable 是否可DBNull Declaration public bool IsNullable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPrimary 主键 Declaration public bool IsPrimary { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxLength 最大长度 Declaration public int MaxLength { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Name 列名 Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Position 字段位置 Declaration public int Position { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Table 所属表 Declaration public DbTableInfo Table { get; set; } Property Value Type Description DbTableInfo"
  },
  "api/FreeSql.DatabaseModel.DbEnumInfo.html": {
    "href": "api/FreeSql.DatabaseModel.DbEnumInfo.html",
    "title": "Class DbEnumInfo | FreeSql API Docs",
    "keywords": "Class DbEnumInfo Inheritance System.Object DbEnumInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public class DbEnumInfo Properties | Improve this Doc View Source Labels 枚举项 Declaration public Dictionary<string, string> Labels { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > | Improve this Doc View Source Name 枚举类型标识 Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/FreeSql.DatabaseModel.DbForeignInfo.html": {
    "href": "api/FreeSql.DatabaseModel.DbForeignInfo.html",
    "title": "Class DbForeignInfo | FreeSql API Docs",
    "keywords": "Class DbForeignInfo Inheritance System.Object DbForeignInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public class DbForeignInfo Properties | Improve this Doc View Source Columns Declaration public List<DbColumnInfo> Columns { get; set; } Property Value Type Description System.Collections.Generic.List < DbColumnInfo > | Improve this Doc View Source ReferencedColumns Declaration public List<DbColumnInfo> ReferencedColumns { get; set; } Property Value Type Description System.Collections.Generic.List < DbColumnInfo > | Improve this Doc View Source ReferencedTable Declaration public DbTableInfo ReferencedTable { get; set; } Property Value Type Description DbTableInfo | Improve this Doc View Source Table Declaration public DbTableInfo Table { get; set; } Property Value Type Description DbTableInfo"
  },
  "api/FreeSql.DatabaseModel.DbIndexColumnInfo.html": {
    "href": "api/FreeSql.DatabaseModel.DbIndexColumnInfo.html",
    "title": "Class DbIndexColumnInfo | FreeSql API Docs",
    "keywords": "Class DbIndexColumnInfo Inheritance System.Object DbIndexColumnInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public class DbIndexColumnInfo Properties | Improve this Doc View Source Column Declaration public DbColumnInfo Column { get; set; } Property Value Type Description DbColumnInfo | Improve this Doc View Source IsDesc Declaration public bool IsDesc { get; set; } Property Value Type Description System.Boolean"
  },
  "api/FreeSql.DatabaseModel.DbIndexInfo.html": {
    "href": "api/FreeSql.DatabaseModel.DbIndexInfo.html",
    "title": "Class DbIndexInfo | FreeSql API Docs",
    "keywords": "Class DbIndexInfo Inheritance System.Object DbIndexInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public class DbIndexInfo Properties | Improve this Doc View Source Columns Declaration public List<DbIndexColumnInfo> Columns { get; } Property Value Type Description System.Collections.Generic.List < DbIndexColumnInfo > | Improve this Doc View Source IsUnique Declaration public bool IsUnique { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/FreeSql.DatabaseModel.DbTableInfo.html": {
    "href": "api/FreeSql.DatabaseModel.DbTableInfo.html",
    "title": "Class DbTableInfo | FreeSql API Docs",
    "keywords": "Class DbTableInfo Inheritance System.Object DbTableInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public class DbTableInfo Properties | Improve this Doc View Source Columns 列 Declaration public List<DbColumnInfo> Columns { get; set; } Property Value Type Description System.Collections.Generic.List < DbColumnInfo > | Improve this Doc View Source Comment 表备注，SqlServer下是扩展属性 MS_Description Declaration public string Comment { get; set; } Property Value Type Description System.String | Improve this Doc View Source Foreigns Declaration public List<DbForeignInfo> Foreigns { get; } Property Value Type Description System.Collections.Generic.List < DbForeignInfo > | Improve this Doc View Source ForeignsDict 外键 Declaration public Dictionary<string, DbForeignInfo> ForeignsDict { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , DbForeignInfo > | Improve this Doc View Source Id 唯一标识 Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source Identitys 自增列 Declaration public List<DbColumnInfo> Identitys { get; set; } Property Value Type Description System.Collections.Generic.List < DbColumnInfo > | Improve this Doc View Source Indexes Declaration public List<DbIndexInfo> Indexes { get; } Property Value Type Description System.Collections.Generic.List < DbIndexInfo > | Improve this Doc View Source IndexesDict 索引/组合 Declaration public Dictionary<string, DbIndexInfo> IndexesDict { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , DbIndexInfo > | Improve this Doc View Source Name 表名 Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Primarys 主键/组合 Declaration public List<DbColumnInfo> Primarys { get; set; } Property Value Type Description System.Collections.Generic.List < DbColumnInfo > | Improve this Doc View Source Schema SqlServer下是Owner、PostgreSQL下是Schema、MySql下是数据库名 Declaration public string Schema { get; set; } Property Value Type Description System.String | Improve this Doc View Source Type 表/视图 Declaration public DbTableType Type { get; set; } Property Value Type Description DbTableType | Improve this Doc View Source Uniques Declaration public List<DbIndexInfo> Uniques { get; } Property Value Type Description System.Collections.Generic.List < DbIndexInfo > | Improve this Doc View Source UniquesDict 唯一键/组合 Declaration public Dictionary<string, DbIndexInfo> UniquesDict { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , DbIndexInfo >"
  },
  "api/FreeSql.DatabaseModel.DbTableType.html": {
    "href": "api/FreeSql.DatabaseModel.DbTableType.html",
    "title": "Enum DbTableType | FreeSql API Docs",
    "keywords": "Enum DbTableType Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public enum DbTableType Fields Name Description StoreProcedure TABLE VIEW Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.DatabaseModel.DbTypeInfo.html": {
    "href": "api/FreeSql.DatabaseModel.DbTypeInfo.html",
    "title": "Class DbTypeInfo | FreeSql API Docs",
    "keywords": "Class DbTypeInfo Inheritance System.Object DbTypeInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public class DbTypeInfo Properties | Improve this Doc View Source Labels 枚举项 Declaration public List<DbTypeInfo.LabelInfo> Labels { get; set; } Property Value Type Description System.Collections.Generic.List < DbTypeInfo.LabelInfo > | Improve this Doc View Source Name 类型标识 Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/FreeSql.DatabaseModel.DbTypeInfo.LabelInfo.html": {
    "href": "api/FreeSql.DatabaseModel.DbTypeInfo.LabelInfo.html",
    "title": "Class DbTypeInfo.LabelInfo | FreeSql API Docs",
    "keywords": "Class DbTypeInfo.LabelInfo Inheritance System.Object DbTypeInfo.LabelInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.DatabaseModel Assembly : FreeSql.dll Syntax public class LabelInfo Constructors | Improve this Doc View Source LabelInfo(String, String) Declaration public LabelInfo(string label, string value) Parameters Type Name Description System.String label System.String value Properties | Improve this Doc View Source label Declaration public string label { get; } Property Value Type Description System.String | Improve this Doc View Source value Declaration public string value { get; } Property Value Type Description System.String"
  },
  "api/FreeSql.DatabaseModel.html": {
    "href": "api/FreeSql.DatabaseModel.html",
    "title": "Namespace FreeSql.DatabaseModel | FreeSql API Docs",
    "keywords": "Namespace FreeSql.DatabaseModel Classes DbColumnInfo DbEnumInfo DbForeignInfo DbIndexColumnInfo DbIndexInfo DbTableInfo DbTypeInfo DbTypeInfo.LabelInfo Enums DbTableType"
  },
  "api/FreeSql.DataType.html": {
    "href": "api/FreeSql.DataType.html",
    "title": "Enum DataType | FreeSql API Docs",
    "keywords": "Enum DataType Namespace : FreeSql Assembly : FreeSql.dll Syntax public enum DataType Fields Name Description Custom 自定义适配器，访问任何数据库 注意：该类型不提供 DbFirst/CodeFirst 功能 Dameng 武汉达梦数据库有限公司，基于 DmProvider.dll 的实现 Firebird Firebird 是一个跨平台的关系数据库，能作为多用户环境下的数据库服务器运行，也提供嵌入式数据库的实现 KingbaseES 北京人大金仓信息技术股份有限公司，基于 Kdbndp.dll 的实现 MsAccess Microsoft Office Access 是由微软发布的关联式数据库管理系统 MySql Odbc 通用的 Odbc 实现，只能做基本的 Crud 操作 不支持实体结构迁移、不支持分页（只能 Take 查询） 通用实现为了让用户自己适配更多的数据库，比如连接 mssql 2000、db2 等数据库 默认适配 SqlServer，可以继承后重新适配 FreeSql.Odbc.Default.OdbcAdapter，最好去看下代码 适配新的 OdbcAdapter，请在 FreeSqlBuilder.Build 之后调用 IFreeSql.SetOdbcAdapter 方法设置 OdbcDameng 武汉达梦数据库有限公司，基于 Odbc 的实现 OdbcKingbaseES 北京人大金仓信息技术股份有限公司，基于 Odbc 的实现 OdbcMySql OdbcOracle OdbcPostgreSQL OdbcSqlServer Oracle PostgreSQL ShenTong 天津神舟通用数据技术有限公司，基于 System.Data.OscarClient.dll 的实现 Sqlite SqlServer Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Extensions.EntityUtil.EntityUtilExtensions.html": {
    "href": "api/FreeSql.Extensions.EntityUtil.EntityUtilExtensions.html",
    "title": "Class EntityUtilExtensions | FreeSql API Docs",
    "keywords": "Class EntityUtilExtensions Inheritance System.Object EntityUtilExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EntityUtil Assembly : FreeSql.dll Syntax public static class EntityUtilExtensions Methods | Improve this Doc View Source AppendEntityUpdateSetWithColumn<TEntity>(IUpdate<TEntity>, Type, LambdaExpression) 缓存执行 IUpdate.Set Declaration public static void AppendEntityUpdateSetWithColumn<TEntity>(this IUpdate<TEntity> update, Type columnType, LambdaExpression setExp) where TEntity : class Parameters Type Name Description IUpdate <TEntity> update System.Type columnType System.Linq.Expressions.LambdaExpression setExp Type Parameters Name Description TEntity | Improve this Doc View Source ClearEntityPrimaryValueWithIdentity(IFreeSql, Type, Object) 清除实体的主键值，将自增、Guid类型的主键值清除 Declaration public static void ClearEntityPrimaryValueWithIdentity(this IFreeSql orm, Type entityType, object entity) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity | Improve this Doc View Source ClearEntityPrimaryValueWithIdentityAndGuid(IFreeSql, Type, Object) 清除实体的主键值，将自增、Guid类型的主键值清除 Declaration public static void ClearEntityPrimaryValueWithIdentityAndGuid(this IFreeSql orm, Type entityType, object entity) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity | Improve this Doc View Source CompareEntityValueReturnColumns(IFreeSql, Type, Object, Object, Boolean) 对比两个实体值，返回相同/或不相同的列名 Declaration public static string[] CompareEntityValueReturnColumns(this IFreeSql orm, Type entityType, object entity1, object entity2, bool isEqual) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity1 System.Object entity2 System.Boolean isEqual Returns Type Description System.String [] | Improve this Doc View Source GetEntityIdentityValueWithPrimary(IFreeSql, Type, Object) 获取实体中主键内的自增字段值（若存在） Declaration public static long GetEntityIdentityValueWithPrimary(this IFreeSql orm, Type entityType, object entity) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity Returns Type Description System.Int64 | Improve this Doc View Source GetEntityKeyString(IFreeSql, Type, Object, Boolean, String) 获取实体的主键值，以 \" | ,[, | \" 分割，当任意一个主键属性无值时，返回 null Declaration public static string GetEntityKeyString(this IFreeSql orm, Type entityType, object entity, bool genGuid, string splitString = \"*|_,[,_|*\") Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity System.Boolean genGuid 当Guid无值时，会生成有序的新值 System.String splitString Returns Type Description System.String | Improve this Doc View Source GetEntityKeyValues(IFreeSql, Type, Object) 获取实体的主键值，多个主键返回数组 Declaration public static object[] GetEntityKeyValues(this IFreeSql orm, Type entityType, object entity) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity Returns Type Description System.Object [] | Improve this Doc View Source GetEntityString(IFreeSql, Type, Object) 获取实体的所有数据，以 (1, 2, xxx) 的形式 Declaration public static string GetEntityString(this IFreeSql orm, Type entityType, object entity) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity Returns Type Description System.String | Improve this Doc View Source GetEntityValueWithPropertyName(IFreeSql, Type, Object, String) 获取实体的属性值 Declaration public static object GetEntityValueWithPropertyName(this IFreeSql orm, Type entityType, object entity, string propertyName) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity System.String propertyName Returns Type Description System.Object | Improve this Doc View Source GetPropertyValue(TableInfo, Object, String) Declaration public static object GetPropertyValue(this TableInfo table, object entity, string propertyName) Parameters Type Name Description TableInfo table System.Object entity System.String propertyName Returns Type Description System.Object | Improve this Doc View Source MapEntityKeyValue(IFreeSql, Type, Object, Object) 使用新实体的主键值，复盖旧实体的主键值 Declaration public static void MapEntityKeyValue(this IFreeSql orm, Type entityType, object entityFrom, object entityTo) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entityFrom System.Object entityTo | Improve this Doc View Source MapEntityValue(IFreeSql, Type, Object, Object) Declaration public static void MapEntityValue(this IFreeSql orm, Type entityType, object entityFrom, object entityTo) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entityFrom System.Object entityTo | Improve this Doc View Source SetEntityIdentityValueWithPrimary(IFreeSql, Type, Object, Int64) 设置实体中主键内的自增字段值（若存在） Declaration public static void SetEntityIdentityValueWithPrimary(this IFreeSql orm, Type entityType, object entity, long idtval) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity System.Int64 idtval | Improve this Doc View Source SetEntityIncrByWithPropertyName(IFreeSql, Type, Object, String, Int32) 设置实体中某属性的数值增加指定的值 Declaration public static void SetEntityIncrByWithPropertyName(this IFreeSql orm, Type entityType, object entity, string propertyName, int incrBy) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity System.String propertyName System.Int32 incrBy | Improve this Doc View Source SetEntityValueWithPropertyName(IFreeSql, Type, Object, String, Object) 设置实体中某属性的值 Declaration public static void SetEntityValueWithPropertyName(this IFreeSql orm, Type entityType, object entity, string propertyName, object value) Parameters Type Name Description IFreeSql orm System.Type entityType System.Object entity System.String propertyName System.Object value | Improve this Doc View Source SetPropertyValue(TableInfo, Object, String, Object) Declaration public static void SetPropertyValue(this TableInfo table, object entity, string propertyName, object value) Parameters Type Name Description TableInfo table System.Object entity System.String propertyName System.Object value"
  },
  "api/FreeSql.Extensions.EntityUtil.html": {
    "href": "api/FreeSql.Extensions.EntityUtil.html",
    "title": "Namespace FreeSql.Extensions.EntityUtil | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Extensions.EntityUtil Classes EntityUtilExtensions"
  },
  "api/FreeSql.FieldAliasOptions.html": {
    "href": "api/FreeSql.FieldAliasOptions.html",
    "title": "Enum FieldAliasOptions | FreeSql API Docs",
    "keywords": "Enum FieldAliasOptions Namespace : FreeSql Assembly : FreeSql.dll Syntax public enum FieldAliasOptions Fields Name Description AsIndex 自动产生 as1, as2, as3 .... 字段别名 这种方法可以最大程度防止多表，存在相同字段的问题 AsProperty 使用属性名作为字段别名 Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.FreeSqlBuilder.html": {
    "href": "api/FreeSql.FreeSqlBuilder.html",
    "title": "Class FreeSqlBuilder | FreeSql API Docs",
    "keywords": "Class FreeSqlBuilder Inheritance System.Object FreeSqlBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.dll Syntax public class FreeSqlBuilder Methods | Improve this Doc View Source Build() Declaration public IFreeSql Build() Returns Type Description IFreeSql | Improve this Doc View Source Build<TMark>() Declaration public IFreeSql<TMark> Build<TMark>() Returns Type Description IFreeSql <TMark> Type Parameters Name Description TMark | Improve this Doc View Source UseAutoSyncStructure(Boolean) 【开发环境必备】自动同步实体结构到数据库，程序运行中检查实体表是否存在，然后创建或修改 注意：生产环境中谨慎使用 Declaration public FreeSqlBuilder UseAutoSyncStructure(bool value) Parameters Type Name Description System.Boolean value true:运行时检查自动同步结构, false:不同步结构(默认) Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseConfigEntityFromDbFirst(Boolean) 将数据库的主键、自增、索引设置导入，适用 DbFirst 模式，无须在实体类型上设置 [Column(IsPrimary)] 或者 ConfigEntity。此功能目前可用于 mysql/sqlserver/postgresql/oracle。 本功能会影响 IFreeSql 首次访问的速度。 若使用 CodeFirst 创建索引后，又直接在数据库上建了索引，若无本功能下一次 CodeFirst 迁移时数据库上创建的索引将被删除 Declaration public FreeSqlBuilder UseConfigEntityFromDbFirst(bool value) Parameters Type Name Description System.Boolean value Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseConnectionFactory(DataType, Func<DbConnection>, Type) 使用自定义数据库连接对象（放弃内置对象连接池技术） Declaration public FreeSqlBuilder UseConnectionFactory(DataType dataType, Func<DbConnection> connectionFactory, Type providerType = null) Parameters Type Name Description DataType dataType 数据库类型 System.Func < System.Data.Common.DbConnection > connectionFactory 数据库连接对象创建器 System.Type providerType 提供者的类型，一般不需要指定，如果一直提示“缺少 FreeSql 数据库实现包：FreeSql.Provider.MySql.dll，可前往 nuget 下载”的错误，说明反射获取不到类型，此时该参数可排上用场 Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseConnectionString(DataType, String, Type) 使用连接串（推荐） Declaration public FreeSqlBuilder UseConnectionString(DataType dataType, string connectionString, Type providerType = null) Parameters Type Name Description DataType dataType 数据库类型 System.String connectionString 数据库连接串 System.Type providerType 提供者的类型，一般不需要指定，如果一直提示“缺少 FreeSql 数据库实现包：FreeSql.Provider.MySql.dll，可前往 nuget 下载”的错误，说明反射获取不到类型，此时该参数可排上用场 Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseEntityPropertyNameConvert(StringConvertType) 自动转换实体属性名称 Entity Property -> Db Filed *不会覆盖 [Column] 特性设置的Name Declaration [Obsolete(\"请使用 UseNameConvert 功能\")] public FreeSqlBuilder UseEntityPropertyNameConvert(StringConvertType convertType) Parameters Type Name Description StringConvertType convertType Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseExitAutoDisposePool(Boolean) 监听 AppDomain.CurrentDomain.ProcessExit/Console.CancelKeyPress 事件自动释放连接池 默认值: true Declaration public FreeSqlBuilder UseExitAutoDisposePool(bool value) Parameters Type Name Description System.Boolean value Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseGenerateCommandParameterWithLambda(Boolean) 是否生成命令参数化执行，针对 lambda 表达式解析 注意：常量不会参数化，变量才会做参数化 var id = 100; fsql.Select<T>().Where(a => a.id == id) 会参数化 fsql.Select<T>().Where(a => a.id == 100) 不会参数化 Declaration public FreeSqlBuilder UseGenerateCommandParameterWithLambda(bool value) Parameters Type Name Description System.Boolean value Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseLazyLoading(Boolean) 延时加载导航属性对象，导航属性需要声明 virtual Declaration public FreeSqlBuilder UseLazyLoading(bool value) Parameters Type Name Description System.Boolean value Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseMonitorCommand(Action<DbCommand>, Action<DbCommand, String>) 监视数据库命令对象 Declaration public FreeSqlBuilder UseMonitorCommand(Action<DbCommand> executing, Action<DbCommand, string> executed = null) Parameters Type Name Description System.Action < System.Data.Common.DbCommand > executing 执行前 System.Action < System.Data.Common.DbCommand , System.String > executed 执行后，可监视执行性能 Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseNameConvert(NameConvertType) 实体类名 -> 数据库表名，命名转换（类名、属性名都生效） 优先级小于 [Table(Name = \"xxx\")]、[Column(Name = \"xxx\")] Declaration public FreeSqlBuilder UseNameConvert(NameConvertType convertType) Parameters Type Name Description NameConvertType convertType Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseNoneCommandParameter(Boolean) 不使用命令参数化执行，针对 Insert/Update，也可临时使用 IInsert/IUpdate.NoneParameter() Declaration public FreeSqlBuilder UseNoneCommandParameter(bool value) Parameters Type Name Description System.Boolean value Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseSlave(String[]) 使用从数据库，支持多个 Declaration public FreeSqlBuilder UseSlave(params string[] slaveConnectionString) Parameters Type Name Description System.String [] slaveConnectionString 从数据库连接串 Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseSyncStructureToLower(Boolean) 转小写同步结构 Declaration [Obsolete(\"请使用 UseNameConvert(NameConvertType.ToLower)，或者 fsql.CodeFirst.IsSyncStructureToLower = value\")] public FreeSqlBuilder UseSyncStructureToLower(bool value) Parameters Type Name Description System.Boolean value true:转小写, false:不转 Returns Type Description FreeSqlBuilder | Improve this Doc View Source UseSyncStructureToUpper(Boolean) 转大写同步结构 Declaration [Obsolete(\"请使用 UseNameConvert(NameConvertType.ToUpper)，或者 fsql.CodeFirst.IsSyncStructureToUpper = value\")] public FreeSqlBuilder UseSyncStructureToUpper(bool value) Parameters Type Name Description System.Boolean value true:转大写, false:不转 Returns Type Description FreeSqlBuilder"
  },
  "api/FreeSql.html": {
    "href": "api/FreeSql.html",
    "title": "Namespace FreeSql | FreeSql API Docs",
    "keywords": "Namespace FreeSql Classes AdoNetExtensions FreeSqlBuilder SqlExt SqlExt 是利用自定表达式函数解析功能，解析默认常用的SQL函数，欢迎 PR SqlExtExtensions Interfaces IAdo IAop ICodeFirst IDbFirst IDelete<T1> IInsert<T1> IInsertOrUpdate<T1> ISelect<T1> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2> ISelect<T1, T2, T3> ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect0 ISelect0<TSelect, T1> ISelectFromExpression<T1> ISelectGrouping<TKey, TValue> ISelectGroupingAggregate<TKey> ISelectGroupingAggregate<TKey, TValue> IUpdate<T1> SqlExtExtensions.ICaseWhenEnd SqlExtExtensions.ICaseWhenEnd<TValue> SqlExtExtensions.IGroupConcat SqlExtExtensions.ISqlOver<TValue> Enums DataType FieldAliasOptions"
  },
  "api/FreeSql.IAdo.html": {
    "href": "api/FreeSql.IAdo.html",
    "title": "Interface IAdo | FreeSql API Docs",
    "keywords": "Interface IAdo Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface IAdo Properties | Improve this Doc View Source ConnectionString UseConnectionString 时候的值 Declaration string ConnectionString { get; } Property Value Type Description System.String | Improve this Doc View Source DataType 数据库类型 Declaration DataType DataType { get; } Property Value Type Description DataType | Improve this Doc View Source Identifier 唯一标识 Declaration Guid Identifier { get; } Property Value Type Description System.Guid | Improve this Doc View Source MasterPool 主库连接池 Declaration IObjectPool<DbConnection> MasterPool { get; } Property Value Type Description IObjectPool < System.Data.Common.DbConnection > | Improve this Doc View Source SlaveConnectionStrings UseSalve 时候的值 Declaration string[] SlaveConnectionStrings { get; } Property Value Type Description System.String [] | Improve this Doc View Source SlavePools 从库连接池 Declaration List<IObjectPool<DbConnection>> SlavePools { get; } Property Value Type Description System.Collections.Generic.List < IObjectPool < System.Data.Common.DbConnection >> | Improve this Doc View Source TransactionCurrentThread 当前线程的事务 Declaration DbTransaction TransactionCurrentThread { get; } Property Value Type Description System.Data.Common.DbTransaction Methods | Improve this Doc View Source CommandFluent(String, Object) SQL 命令执行类，fsql.Ado.CommandFluent(\"select * from user where age > @age&quot;, new { age = 25 }) .WithConnection(connection) .WithTransaction(transaction) .WithParameter(\"age\", 25) .WithParameter(\"id\", 11) .CommandType(CommandType.Text) .CommandTimeout(60) .Query<T>(); 或者 ExecuteNonQuery/ExecuteScalar/ExecuteDataTable/ExecuteDataSet/ExecuteArray Declaration AdoCommandFluent CommandFluent(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description AdoCommandFluent | Improve this Doc View Source ExecuteArray(CommandType, String, DbParameter[]) 查询 Declaration object[][] ExecuteArray(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration object[][] ExecuteArray(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(DbConnection, DbTransaction, String, Object) Declaration object[][] ExecuteArray(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(DbTransaction, CommandType, String, DbParameter[]) Declaration object[][] ExecuteArray(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(DbTransaction, String, Object) Declaration object[][] ExecuteArray(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(String, Object) 查询，ExecuteArray(\"select * from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration object[][] ExecuteArray(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArrayAsync(CommandType, String, DbParameter[], CancellationToken) 查询 Declaration Task<object[][]> ExecuteArrayAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<object[][]> ExecuteArrayAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<object[][]> ExecuteArrayAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<object[][]> ExecuteArrayAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(DbTransaction, String, Object, CancellationToken) Declaration Task<object[][]> ExecuteArrayAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(String, Object, CancellationToken) 查询，ExecuteArrayAsync(\"select * from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration Task<object[][]> ExecuteArrayAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteConnectTest(Int32) 测试数据库是否连接正确，本方法执行如下命令： MySql/SqlServer/PostgreSQL/达梦/人大金仓/神通: SELECT 1 Oracle: SELECT 1 FROM dual Declaration bool ExecuteConnectTest(int commandTimeout = 0) Parameters Type Name Description System.Int32 commandTimeout 命令超时设置(秒) Returns Type Description System.Boolean true: 成功, false: 失败 | Improve this Doc View Source ExecuteConnectTestAsync(Int32, CancellationToken) 测试数据库是否连接正确，本方法执行如下命令： MySql/SqlServer/PostgreSQL/达梦/人大金仓/神通: SELECT 1 Oracle: SELECT 1 FROM dual Declaration Task<bool> ExecuteConnectTestAsync(int commandTimeout = 0, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 commandTimeout 命令超时设置(秒) System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > true: 成功, false: 失败 | Improve this Doc View Source ExecuteDataSet(CommandType, String, DbParameter[]) 查询 Declaration DataSet ExecuteDataSet(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration DataSet ExecuteDataSet(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(DbConnection, DbTransaction, String, Object) Declaration DataSet ExecuteDataSet(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(DbTransaction, CommandType, String, DbParameter[]) Declaration DataSet ExecuteDataSet(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(DbTransaction, String, Object) Declaration DataSet ExecuteDataSet(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(String, Object) 查询，ExecuteDataSet(\"select * from user where age > @age; select 2\", new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration DataSet ExecuteDataSet(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSetAsync(CommandType, String, DbParameter[], CancellationToken) 查询 Declaration Task<DataSet> ExecuteDataSetAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<DataSet> ExecuteDataSetAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<DataSet> ExecuteDataSetAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<DataSet> ExecuteDataSetAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(DbTransaction, String, Object, CancellationToken) Declaration Task<DataSet> ExecuteDataSetAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(String, Object, CancellationToken) 查询，ExecuteDataSetAsync(\"select * from user where age > @age; select 2\", new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration Task<DataSet> ExecuteDataSetAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataTable(CommandType, String, DbParameter[]) 查询 Declaration DataTable ExecuteDataTable(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration DataTable ExecuteDataTable(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(DbConnection, DbTransaction, String, Object) Declaration DataTable ExecuteDataTable(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(DbTransaction, CommandType, String, DbParameter[]) Declaration DataTable ExecuteDataTable(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(DbTransaction, String, Object) Declaration DataTable ExecuteDataTable(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(String, Object) 查询，ExecuteDataTable(\"select * from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration DataTable ExecuteDataTable(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTableAsync(CommandType, String, DbParameter[], CancellationToken) 查询 Declaration Task<DataTable> ExecuteDataTableAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<DataTable> ExecuteDataTableAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<DataTable> ExecuteDataTableAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<DataTable> ExecuteDataTableAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(DbTransaction, String, Object, CancellationToken) Declaration Task<DataTable> ExecuteDataTableAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(String, Object, CancellationToken) 查询，ExecuteDataTableAsync(\"select * from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration Task<DataTable> ExecuteDataTableAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteNonQuery(CommandType, String, DbParameter[]) 在【主库】执行 Declaration int ExecuteNonQuery(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration int ExecuteNonQuery(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(DbConnection, DbTransaction, String, Object) Declaration int ExecuteNonQuery(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(DbTransaction, CommandType, String, DbParameter[]) Declaration int ExecuteNonQuery(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(DbTransaction, String, Object) Declaration int ExecuteNonQuery(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(String, Object) 在【主库】执行，ExecuteNonQuery(\"delete from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration int ExecuteNonQuery(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQueryAsync(CommandType, String, DbParameter[], CancellationToken) 在【主库】执行 Declaration Task<int> ExecuteNonQueryAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<int> ExecuteNonQueryAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<int> ExecuteNonQueryAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<int> ExecuteNonQueryAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(DbTransaction, String, Object, CancellationToken) Declaration Task<int> ExecuteNonQueryAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(String, Object, CancellationToken) 在【主库】执行，ExecuteNonQueryAsync(\"delete from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration Task<int> ExecuteNonQueryAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteReader(Action<FetchCallbackArgs<DbDataReader>>, CommandType, String, DbParameter[]) 查询，若使用读写分离，查询【从库】条件cmdText.StartsWith(\"SELECT \")，否则查询【主库】 Declaration void ExecuteReader(Action<FetchCallbackArgs<DbDataReader>> fetchHandler, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms | Improve this Doc View Source ExecuteReader(Action<FetchCallbackArgs<DbDataReader>>, String, Object) 查询，ExecuteReader(dr => {}, \"select * from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration void ExecuteReader(Action<FetchCallbackArgs<DbDataReader>> fetchHandler, string cmdText, object parms = null) Parameters Type Name Description System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.String cmdText System.Object parms | Improve this Doc View Source ExecuteReader(DbConnection, DbTransaction, Action<FetchCallbackArgs<DbDataReader>>, CommandType, String, Int32, DbParameter[]) Declaration void ExecuteReader(DbConnection connection, DbTransaction transaction, Action<FetchCallbackArgs<DbDataReader>> fetchHandler, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms | Improve this Doc View Source ExecuteReader(DbConnection, DbTransaction, Action<FetchCallbackArgs<DbDataReader>>, String, Object) Declaration void ExecuteReader(DbConnection connection, DbTransaction transaction, Action<FetchCallbackArgs<DbDataReader>> fetchHandler, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.String cmdText System.Object parms | Improve this Doc View Source ExecuteReader(DbTransaction, Action<FetchCallbackArgs<DbDataReader>>, CommandType, String, DbParameter[]) Declaration void ExecuteReader(DbTransaction transaction, Action<FetchCallbackArgs<DbDataReader>> fetchHandler, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms | Improve this Doc View Source ExecuteReader(DbTransaction, Action<FetchCallbackArgs<DbDataReader>>, String, Object) Declaration void ExecuteReader(DbTransaction transaction, Action<FetchCallbackArgs<DbDataReader>> fetchHandler, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.String cmdText System.Object parms | Improve this Doc View Source ExecuteReaderAsync(DbConnection, DbTransaction, Func<FetchCallbackArgs<DbDataReader>, Task>, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task ExecuteReaderAsync(DbConnection connection, DbTransaction transaction, Func<FetchCallbackArgs<DbDataReader>, Task> readerHander, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > readerHander System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(DbConnection, DbTransaction, Func<FetchCallbackArgs<DbDataReader>, Task>, String, Object, CancellationToken) Declaration Task ExecuteReaderAsync(DbConnection connection, DbTransaction transaction, Func<FetchCallbackArgs<DbDataReader>, Task> readerHander, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > readerHander System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(DbTransaction, Func<FetchCallbackArgs<DbDataReader>, Task>, CommandType, String, DbParameter[], CancellationToken) Declaration Task ExecuteReaderAsync(DbTransaction transaction, Func<FetchCallbackArgs<DbDataReader>, Task> readerHander, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > readerHander System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(DbTransaction, Func<FetchCallbackArgs<DbDataReader>, Task>, String, Object, CancellationToken) Declaration Task ExecuteReaderAsync(DbTransaction transaction, Func<FetchCallbackArgs<DbDataReader>, Task> readerHander, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > readerHander System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(Func<FetchCallbackArgs<DbDataReader>, Task>, CommandType, String, DbParameter[], CancellationToken) 查询，若使用读写分离，查询【从库】条件cmdText.StartsWith(\"SELECT \")，否则查询【主库】 Declaration Task ExecuteReaderAsync(Func<FetchCallbackArgs<DbDataReader>, Task> readerHander, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > readerHander System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(Func<FetchCallbackArgs<DbDataReader>, Task>, String, Object, CancellationToken) 查询，ExecuteReaderAsync(dr => {}, \"select * from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration Task ExecuteReaderAsync(Func<FetchCallbackArgs<DbDataReader>, Task> readerHander, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > readerHander System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteScalar(CommandType, String, DbParameter[]) 在【主库】执行 Declaration object ExecuteScalar(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration object ExecuteScalar(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(DbConnection, DbTransaction, String, Object) Declaration object ExecuteScalar(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(DbTransaction, CommandType, String, DbParameter[]) Declaration object ExecuteScalar(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(DbTransaction, String, Object) Declaration object ExecuteScalar(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(String, Object) 在【主库】执行，ExecuteScalar(\"select 1 from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration object ExecuteScalar(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalarAsync(CommandType, String, DbParameter[], CancellationToken) 在【主库】执行 Declaration Task<object> ExecuteScalarAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<object> ExecuteScalarAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<object> ExecuteScalarAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<object> ExecuteScalarAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(DbTransaction, String, Object, CancellationToken) Declaration Task<object> ExecuteScalarAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(String, Object, CancellationToken) 在【主库】执行，ExecuteScalarAsync(\"select 1 from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration Task<object> ExecuteScalarAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source GetDbParamtersByObject(Object) 将 new { id = 1 } 或者 Dictionary<string, object> 转换为 DbParameter[] Declaration DbParameter[] GetDbParamtersByObject(object obj) Parameters Type Name Description System.Object obj new { id = 1 } 或者 Dictionary<string, object> Returns Type Description System.Data.Common.DbParameter [] | Improve this Doc View Source Query<T>(CommandType, String, DbParameter[]) 执行SQL返回对象集合，Query<User>(\"select * from user where age > @age&quot;, new SqlParameter { ParameterName = \"age\", Value = 25 }) Declaration List<T> Query<T>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration List<T> Query<T>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(DbConnection, DbTransaction, String, Object) Declaration List<T> Query<T>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(DbTransaction, CommandType, String, DbParameter[]) Declaration List<T> Query<T>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(DbTransaction, String, Object) Declaration List<T> Query<T>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(String, Object) 执行SQL返回对象集合，Query<User>(\"select * from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration List<T> Query<T>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(Type, DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration List<T> Query<T>(Type resultType, DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Type resultType System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T1, T2>(CommandType, String, DbParameter[]) 执行SQL返回对象集合，Query<User>(\"select * from user where age > @age; select * from address\", new SqlParameter { ParameterName = \"age\", Value = 25 }) Declaration NativeTuple<List<T1>, List<T2>> Query<T1, T2>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>> Query<T1, T2>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(DbConnection, DbTransaction, String, Object) Declaration NativeTuple<List<T1>, List<T2>> Query<T1, T2>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(DbTransaction, CommandType, String, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>> Query<T1, T2>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(DbTransaction, String, Object) Declaration NativeTuple<List<T1>, List<T2>> Query<T1, T2>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(String, Object) 执行SQL返回对象集合，Query<User>(\"select * from user where age > @age; select * from address\", new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration NativeTuple<List<T1>, List<T2>> Query<T1, T2>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2, T3>(CommandType, String, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(DbConnection, DbTransaction, String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(DbTransaction, CommandType, String, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(DbTransaction, String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3, T4>(CommandType, String, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(DbConnection, DbTransaction, String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(DbTransaction, CommandType, String, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(DbTransaction, String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(CommandType, String, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(DbConnection, DbTransaction, String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(DbTransaction, CommandType, String, DbParameter[]) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(DbTransaction, String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(String, Object) Declaration NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T>(CommandType, String, DbParameter[], CancellationToken) 执行SQL返回对象集合，QueryAsync<User>(\"select * from user where age > @age&quot;, new SqlParameter { ParameterName = \"age\", Value = 25 }) Declaration Task<List<T>> QueryAsync<T>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<List<T>> QueryAsync<T>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<List<T>> QueryAsync<T>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<List<T>> QueryAsync<T>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(DbTransaction, String, Object, CancellationToken) Declaration Task<List<T>> QueryAsync<T>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(String, Object, CancellationToken) 执行SQL返回对象集合，QueryAsync<User>(\"select * from user where age > @age&quot;, new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration Task<List<T>> QueryAsync<T>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(Type, DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<List<T>> QueryAsync<T>(Type resultType, DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Type resultType System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T1, T2>(CommandType, String, DbParameter[], CancellationToken) 执行SQL返回对象集合，Query<User>(\"select * from user where age > @age; select * from address\", new SqlParameter { ParameterName = \"age\", Value = 25 }) Declaration Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(DbTransaction, String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(String, Object, CancellationToken) 执行SQL返回对象集合，Query<User, Address>(\"select * from user where age > @age; select * from address\", new { age = 25 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2, T3>(CommandType, String, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(DbTransaction, String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(CommandType, String, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(DbTransaction, String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(CommandType, String, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(DbTransaction, String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(String, Object, CancellationToken) Declaration Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QuerySingle<T>(CommandType, String, DbParameter[]) Declaration T QuerySingle<T>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source QuerySingle<T>(String, Object) Declaration T QuerySingle<T>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source QuerySingleAsync<T>(CommandType, String, DbParameter[], CancellationToken) Declaration Task<T> QuerySingleAsync<T>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source QuerySingleAsync<T>(String, Object, CancellationToken) Declaration Task<T> QuerySingleAsync<T>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source Transaction(Action) 开启事务（不支持异步） Declaration void Transaction(Action handler) Parameters Type Name Description System.Action handler 事务体 () => {} | Improve this Doc View Source Transaction(IsolationLevel, Action) 开启事务（不支持异步） Declaration void Transaction(IsolationLevel isolationLevel, Action handler) Parameters Type Name Description System.Data.IsolationLevel isolationLevel System.Action handler 事务体 () => {}"
  },
  "api/FreeSql.IAop.html": {
    "href": "api/FreeSql.IAop.html",
    "title": "Interface IAop | FreeSql API Docs",
    "keywords": "Interface IAop Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface IAop Properties | Improve this Doc View Source AuditDataReaderHandler Declaration EventHandler<AuditDataReaderEventArgs> AuditDataReaderHandler { get; } Property Value Type Description System.EventHandler < AuditDataReaderEventArgs > | Improve this Doc View Source AuditValueHandler Declaration EventHandler<AuditValueEventArgs> AuditValueHandler { get; } Property Value Type Description System.EventHandler < AuditValueEventArgs > | Improve this Doc View Source CommandAfterHandler Declaration EventHandler<CommandAfterEventArgs> CommandAfterHandler { get; } Property Value Type Description System.EventHandler < CommandAfterEventArgs > | Improve this Doc View Source CommandBeforeHandler Declaration EventHandler<CommandBeforeEventArgs> CommandBeforeHandler { get; } Property Value Type Description System.EventHandler < CommandBeforeEventArgs > | Improve this Doc View Source ConfigEntityHandler Declaration EventHandler<ConfigEntityEventArgs> ConfigEntityHandler { get; } Property Value Type Description System.EventHandler < ConfigEntityEventArgs > | Improve this Doc View Source ConfigEntityPropertyHandler Declaration EventHandler<ConfigEntityPropertyEventArgs> ConfigEntityPropertyHandler { get; } Property Value Type Description System.EventHandler < ConfigEntityPropertyEventArgs > | Improve this Doc View Source CurdAfterHandler Declaration EventHandler<CurdAfterEventArgs> CurdAfterHandler { get; } Property Value Type Description System.EventHandler < CurdAfterEventArgs > | Improve this Doc View Source CurdBeforeHandler Declaration EventHandler<CurdBeforeEventArgs> CurdBeforeHandler { get; } Property Value Type Description System.EventHandler < CurdBeforeEventArgs > | Improve this Doc View Source ParseExpressionHandler Declaration EventHandler<ParseExpressionEventArgs> ParseExpressionHandler { get; } Property Value Type Description System.EventHandler < ParseExpressionEventArgs > | Improve this Doc View Source SyncStructureAfterHandler Declaration EventHandler<SyncStructureAfterEventArgs> SyncStructureAfterHandler { get; } Property Value Type Description System.EventHandler < SyncStructureAfterEventArgs > | Improve this Doc View Source SyncStructureBeforeHandler Declaration EventHandler<SyncStructureBeforeEventArgs> SyncStructureBeforeHandler { get; } Property Value Type Description System.EventHandler < SyncStructureBeforeEventArgs > | Improve this Doc View Source TraceAfterHandler Declaration EventHandler<TraceAfterEventArgs> TraceAfterHandler { get; } Property Value Type Description System.EventHandler < TraceAfterEventArgs > | Improve this Doc View Source TraceBeforeHandler Declaration EventHandler<TraceBeforeEventArgs> TraceBeforeHandler { get; } Property Value Type Description System.EventHandler < TraceBeforeEventArgs > Events | Improve this Doc View Source AuditDataReader ADO.NET DataReader 拦截 Declaration event EventHandler<AuditDataReaderEventArgs> AuditDataReader Event Type Type Description System.EventHandler < AuditDataReaderEventArgs > | Improve this Doc View Source AuditValue Insert/Update自动值处理 Declaration event EventHandler<AuditValueEventArgs> AuditValue Event Type Type Description System.EventHandler < AuditValueEventArgs > | Improve this Doc View Source CommandAfter 监视数据库命令对象(执行后，用于监视执行性能) Declaration event EventHandler<CommandAfterEventArgs> CommandAfter Event Type Type Description System.EventHandler < CommandAfterEventArgs > | Improve this Doc View Source CommandBefore 监视数据库命令对象(执行前，调试) Declaration event EventHandler<CommandBeforeEventArgs> CommandBefore Event Type Type Description System.EventHandler < CommandBeforeEventArgs > | Improve this Doc View Source ConfigEntity 自定义实体的配置，方便和多个 ORM 共同使用 Declaration event EventHandler<ConfigEntityEventArgs> ConfigEntity Event Type Type Description System.EventHandler < ConfigEntityEventArgs > | Improve this Doc View Source ConfigEntityProperty 自定义实体的属性配置，方便和多个 ORM 共同使用 Declaration event EventHandler<ConfigEntityPropertyEventArgs> ConfigEntityProperty Event Type Type Description System.EventHandler < ConfigEntityPropertyEventArgs > | Improve this Doc View Source CurdAfter 增删查改，执行命令完成后触发 Declaration event EventHandler<CurdAfterEventArgs> CurdAfter Event Type Type Description System.EventHandler < CurdAfterEventArgs > | Improve this Doc View Source CurdBefore 增删查改，执行命令之前触发 Declaration event EventHandler<CurdBeforeEventArgs> CurdBefore Event Type Type Description System.EventHandler < CurdBeforeEventArgs > | Improve this Doc View Source ParseExpression 可自定义解析表达式 Declaration event EventHandler<ParseExpressionEventArgs> ParseExpression Event Type Type Description System.EventHandler < ParseExpressionEventArgs > | Improve this Doc View Source SyncStructureAfter CodeFirst迁移，执行完成触发 Declaration event EventHandler<SyncStructureAfterEventArgs> SyncStructureAfter Event Type Type Description System.EventHandler < SyncStructureAfterEventArgs > | Improve this Doc View Source SyncStructureBefore CodeFirst迁移，执行之前触发 Declaration event EventHandler<SyncStructureBeforeEventArgs> SyncStructureBefore Event Type Type Description System.EventHandler < SyncStructureBeforeEventArgs > | Improve this Doc View Source TraceAfter 跟踪结束 Declaration event EventHandler<TraceAfterEventArgs> TraceAfter Event Type Type Description System.EventHandler < TraceAfterEventArgs > | Improve this Doc View Source TraceBefore 跟踪开始 Declaration event EventHandler<TraceBeforeEventArgs> TraceBefore Event Type Type Description System.EventHandler < TraceBeforeEventArgs >"
  },
  "api/FreeSql.ICodeFirst.html": {
    "href": "api/FreeSql.ICodeFirst.html",
    "title": "Interface ICodeFirst | FreeSql API Docs",
    "keywords": "Interface ICodeFirst Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ICodeFirst Properties | Improve this Doc View Source IsAutoSyncStructure 【开发环境必备】自动同步实体结构到数据库，程序运行中检查实体表是否存在，然后创建或修改 Declaration bool IsAutoSyncStructure { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsConfigEntityFromDbFirst 将数据库的主键、自增、索引设置导入，适用 DbFirst 模式，无须在实体类型上设置 [Column(IsPrimary)] 或者 ConfigEntity。此功能目前可用于 mysql/sqlserver/postgresql/oracle。 本功能会影响 IFreeSql 首次访问的速度。 若使用 CodeFirst 创建索引后，又直接在数据库上建了索引，若无本功能下一次 CodeFirst 迁移时数据库上创建的索引将被删除 Declaration bool IsConfigEntityFromDbFirst { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGenerateCommandParameterWithLambda 是否生成命令参数化执行，针对 lambda 表达式解析 注意：常量不会参数化，变量才会做参数化 var id = 100; fsql.Select<T>().Where(a => a.id == id) 会参数化 fsql.Select<T>().Where(a => a.id == 100) 不会参数化 Declaration bool IsGenerateCommandParameterWithLambda { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLazyLoading 延时加载导航属性对象，导航属性需要声明 virtual Declaration bool IsLazyLoading { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNoneCommandParameter 不使用命令参数化执行，针对 Insert/Update Declaration bool IsNoneCommandParameter { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSyncStructureToLower 转小写同步结构，适用 PostgreSQL Declaration bool IsSyncStructureToLower { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSyncStructureToUpper 转大写同步结构，适用 Oracle/达梦/人大金仓 Declaration bool IsSyncStructureToUpper { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ConfigEntity(Type, Action<TableFluent>) FreeSql FluentApi 配置实体，方法名与特性相同 Declaration ICodeFirst ConfigEntity(Type type, Action<TableFluent> entity) Parameters Type Name Description System.Type type System.Action < TableFluent > entity Returns Type Description ICodeFirst | Improve this Doc View Source ConfigEntity<T>(Action<TableFluent<T>>) FreeSql FluentApi 配置实体，方法名与特性相同 Declaration ICodeFirst ConfigEntity<T>(Action<TableFluent<T>> entity) Parameters Type Name Description System.Action < TableFluent <T>> entity Returns Type Description ICodeFirst Type Parameters Name Description T | Improve this Doc View Source GetComparisonDDLStatements(Type, String) 将实体类型与数据库对比，返回DDL语句（指定表名） Declaration string GetComparisonDDLStatements(Type entityType, string tableName) Parameters Type Name Description System.Type entityType 实体类型 System.String tableName 指定表名对比 Returns Type Description System.String | Improve this Doc View Source GetComparisonDDLStatements(Type[]) 将实体类型集合与数据库对比，返回DDL语句 Declaration string GetComparisonDDLStatements(params Type[] entityTypes) Parameters Type Name Description System.Type [] entityTypes 实体类型 Returns Type Description System.String | Improve this Doc View Source GetComparisonDDLStatements<TEntity>() 将实体类型与数据库对比，返回DDL语句 Declaration string GetComparisonDDLStatements<TEntity>() Returns Type Description System.String Type Parameters Name Description TEntity | Improve this Doc View Source GetConfigEntity(Type) 获取 FreeSql FluentApi 配置实体的元数据 Declaration TableAttribute GetConfigEntity(Type type) Parameters Type Name Description System.Type type Returns Type Description TableAttribute 未使用ConfigEntity配置时，返回null | Improve this Doc View Source GetDbInfo(Type) 根据 System.Type 获取数据库信息 Declaration DbInfoResult GetDbInfo(Type type) Parameters Type Name Description System.Type type Returns Type Description DbInfoResult | Improve this Doc View Source GetTableByEntity(Type) 获取实体类核心配置 Declaration TableInfo GetTableByEntity(Type type) Parameters Type Name Description System.Type type Returns Type Description TableInfo | Improve this Doc View Source SyncStructure(Type, String, Boolean) 同步实体类型到数据库（指定表名） 注意：生产环境中谨慎使用 Declaration void SyncStructure(Type entityType, string tableName, bool isForceSync = false) Parameters Type Name Description System.Type entityType 实体类型 System.String tableName 指定表名对比 System.Boolean isForceSync 强制同步结构，无视缓存每次都同步 | Improve this Doc View Source SyncStructure(Type[]) 同步实体类型集合到数据库 注意：生产环境中谨慎使用 Declaration void SyncStructure(params Type[] entityTypes) Parameters Type Name Description System.Type [] entityTypes | Improve this Doc View Source SyncStructure<TEntity>() 同步实体类型到数据库 注意：生产环境中谨慎使用 Declaration void SyncStructure<TEntity>() Type Parameters Name Description TEntity"
  },
  "api/FreeSql.IDbFirst.html": {
    "href": "api/FreeSql.IDbFirst.html",
    "title": "Interface IDbFirst | FreeSql API Docs",
    "keywords": "Interface IDbFirst Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface IDbFirst Methods | Improve this Doc View Source ExistsTable(String, Boolean) 判断表是否存在 Declaration bool ExistsTable(string name, bool ignoreCase = true) Parameters Type Name Description System.String name 表名，如：dbo.table1 System.Boolean ignoreCase 是否忽略大小写 Returns Type Description System.Boolean | Improve this Doc View Source GetCsConvert(DbColumnInfo) 获取c#转换，(int)、(long) Declaration string GetCsConvert(DbColumnInfo column) Parameters Type Name Description DbColumnInfo column Returns Type Description System.String | Improve this Doc View Source GetCsParse(DbColumnInfo) 反序列化 Declaration string GetCsParse(DbColumnInfo column) Parameters Type Name Description DbColumnInfo column Returns Type Description System.String | Improve this Doc View Source GetCsStringify(DbColumnInfo) 序列化 Declaration string GetCsStringify(DbColumnInfo column) Parameters Type Name Description DbColumnInfo column Returns Type Description System.String | Improve this Doc View Source GetCsType(DbColumnInfo) 获取c#类型，int、long Declaration string GetCsType(DbColumnInfo column) Parameters Type Name Description DbColumnInfo column Returns Type Description System.String | Improve this Doc View Source GetCsTypeInfo(DbColumnInfo) 获取c#类型对象 Declaration Type GetCsTypeInfo(DbColumnInfo column) Parameters Type Name Description DbColumnInfo column Returns Type Description System.Type | Improve this Doc View Source GetCsTypeValue(DbColumnInfo) 获取c#值 Declaration string GetCsTypeValue(DbColumnInfo column) Parameters Type Name Description DbColumnInfo column Returns Type Description System.String | Improve this Doc View Source GetDatabases() 获取所有数据库 Declaration List<string> GetDatabases() Returns Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source GetDataReaderMethod(DbColumnInfo) 获取ado.net读取方法, GetBoolean、GetInt64 Declaration string GetDataReaderMethod(DbColumnInfo column) Parameters Type Name Description DbColumnInfo column Returns Type Description System.String | Improve this Doc View Source GetDbType(DbColumnInfo) 获取数据库枚举类型int值 Declaration int GetDbType(DbColumnInfo column) Parameters Type Name Description DbColumnInfo column Returns Type Description System.Int32 | Improve this Doc View Source GetEnumsByDatabase(String[]) 获取数据库枚举类型，适用 PostgreSQL Declaration List<DbEnumInfo> GetEnumsByDatabase(params string[] database) Parameters Type Name Description System.String [] database Returns Type Description System.Collections.Generic.List < DbEnumInfo > | Improve this Doc View Source GetTableByName(String, Boolean) 获取指定单表信息，包括列详情、主键、唯一键、索引、备注 Declaration DbTableInfo GetTableByName(string name, bool ignoreCase = true) Parameters Type Name Description System.String name 表名，如：dbo.table1 System.Boolean ignoreCase 是否忽略大小写 Returns Type Description DbTableInfo | Improve this Doc View Source GetTablesByDatabase(String[]) 获取指定数据库的表信息，包括表、列详情、主键、唯一键、索引、外键、备注 Declaration List<DbTableInfo> GetTablesByDatabase(params string[] database) Parameters Type Name Description System.String [] database Returns Type Description System.Collections.Generic.List < DbTableInfo >"
  },
  "api/FreeSql.IDelete-1.html": {
    "href": "api/FreeSql.IDelete-1.html",
    "title": "Interface IDelete<T1> | FreeSql API Docs",
    "keywords": "Interface IDelete<T1> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface IDelete<T1> Type Parameters Name Description T1 Methods | Improve this Doc View Source AsTable(Func<String, String>) 设置表名规则，可用于分库/分表，参数1：默认表名；返回值：新表名； Declaration IDelete<T1> AsTable(Func<string, string> tableRule) Parameters Type Name Description System.Func < System.String , System.String > tableRule Returns Type Description IDelete <T1> | Improve this Doc View Source AsType(Type) 动态Type，在使用 Delete<object> 后使用本方法，指定实体类型 Declaration IDelete<T1> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IDelete <T1> | Improve this Doc View Source CommandTimeout(Int32) 命令超时设置(秒) Declaration IDelete<T1> CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description IDelete <T1> | Improve this Doc View Source DisableGlobalFilter(String[]) 禁用全局过滤功能，不传参数时将禁用所有 Declaration IDelete<T1> DisableGlobalFilter(params string[] name) Parameters Type Name Description System.String [] name 零个或多个过滤器名字 Returns Type Description IDelete <T1> | Improve this Doc View Source ExecuteAffrows() 执行SQL语句，返回影响的行数 Declaration int ExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration Task<int> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteDeleted() 执行SQL语句，返回被删除的记录 注意：此方法只有 Postgresql/SqlServer 有效果 Declaration List<T1> ExecuteDeleted() Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source ExecuteDeletedAsync(CancellationToken) Declaration Task<List<T1>> ExecuteDeletedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source ToSql() 返回即将执行的SQL语句 Declaration string ToSql() Returns Type Description System.String | Improve this Doc View Source Where(T1) 传入实体，将主键作为条件 Declaration IDelete<T1> Where(T1 item) Parameters Type Name Description T1 item 实体 Returns Type Description IDelete <T1> | Improve this Doc View Source Where(IEnumerable<T1>) 传入实体集合，将主键作为条件 Declaration IDelete<T1> Where(IEnumerable<T1> items) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> items 实体集合 Returns Type Description IDelete <T1> | Improve this Doc View Source Where(Expression<Func<T1, Boolean>>) lambda表达式条件，仅支持实体基础成员（不包含导航对象） 若想使用导航对象，请使用 ISelect.ToDelete() 方法 Declaration IDelete<T1> Where(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式条件 Returns Type Description IDelete <T1> | Improve this Doc View Source Where(String, Object) 原生sql语法条件，Where(\"id = @id&quot;, new { id = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration IDelete<T1> Where(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法条件 System.Object parms 参数 Returns Type Description IDelete <T1> | Improve this Doc View Source WhereDynamic(Object, Boolean) 传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration IDelete<T1> WhereDynamic(object dywhere, bool not = false) Parameters Type Name Description System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 System.Boolean not 是否标识为NOT Returns Type Description IDelete <T1> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, Boolean>>) lambda表达式条件，仅支持实体基础成员（不包含导航对象） 若想使用导航对象，请使用 ISelect.ToUpdate() 方法 Declaration IDelete<T1> WhereIf(bool condition, Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式条件 Returns Type Description IDelete <T1> | Improve this Doc View Source WhereIf(Boolean, String, Object) 原生sql语法条件，Where(\"id = @id&quot;, new { id = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration IDelete<T1> WhereIf(bool condition, string sql, object parms = null) Parameters Type Name Description System.Boolean condition true 时生效 System.String sql sql语法条件 System.Object parms 参数 Returns Type Description IDelete <T1> | Improve this Doc View Source WithConnection(DbConnection) 指定事务对象 Declaration IDelete<T1> WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description IDelete <T1> | Improve this Doc View Source WithTransaction(DbTransaction) 指定事务对象 Declaration IDelete<T1> WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description IDelete <T1>"
  },
  "api/FreeSql.IInsert-1.html": {
    "href": "api/FreeSql.IInsert-1.html",
    "title": "Interface IInsert<T1> | FreeSql API Docs",
    "keywords": "Interface IInsert<T1> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface IInsert<T1> where T1 : class Type Parameters Name Description T1 Methods | Improve this Doc View Source AppendData(T1) 追加准备插入的实体 Declaration IInsert<T1> AppendData(T1 source) Parameters Type Name Description T1 source 实体 Returns Type Description IInsert <T1> | Improve this Doc View Source AppendData(T1[]) 追加准备插入的实体 Declaration IInsert<T1> AppendData(T1[] source) Parameters Type Name Description T1[] source 实体 Returns Type Description IInsert <T1> | Improve this Doc View Source AppendData(IEnumerable<T1>) 追加准备插入的实体集合 Declaration IInsert<T1> AppendData(IEnumerable<T1> source) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> source 实体集合 Returns Type Description IInsert <T1> | Improve this Doc View Source AsTable(Func<String, String>) 设置表名规则，可用于分库/分表，参数1：默认表名；返回值：新表名； Declaration IInsert<T1> AsTable(Func<string, string> tableRule) Parameters Type Name Description System.Func < System.String , System.String > tableRule Returns Type Description IInsert <T1> | Improve this Doc View Source AsType(Type) 动态Type，在使用 Insert<object> 后使用本方法，指定实体类型 Declaration IInsert<T1> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IInsert <T1> | Improve this Doc View Source BatchOptions(Int32, Int32, Boolean) 批量执行选项设置，一般不需要使用该方法 各数据库 values, parameters 限制不一样，默认设置： MySql 5000 3000 PostgreSQL 5000 3000 SqlServer 1000 2100 Oracle 500 999 Sqlite 5000 999 若没有事务传入，内部(默认)会自动开启新事务，保证拆包执行的完整性。 Declaration IInsert<T1> BatchOptions(int valuesLimit, int parameterLimit, bool autoTransaction = true) Parameters Type Name Description System.Int32 valuesLimit 指定根据 values 上限数量拆分执行 System.Int32 parameterLimit 指定根据 parameters 上限数量拆分执行 System.Boolean autoTransaction 是否自动开启事务 Returns Type Description IInsert <T1> | Improve this Doc View Source BatchProgress(Action<BatchProgressStatus<T1>>) 批量执行时，分批次执行的进度状态 Declaration IInsert<T1> BatchProgress(Action<BatchProgressStatus<T1>> callback) Parameters Type Name Description System.Action < BatchProgressStatus <T1>> callback 批量执行时的回调委托 Returns Type Description IInsert <T1> | Improve this Doc View Source CommandTimeout(Int32) 命令超时设置(秒) Declaration IInsert<T1> CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description IInsert <T1> | Improve this Doc View Source ExecuteAffrows() 执行SQL语句，返回影响的行数 Declaration int ExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration Task<int> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteIdentity() 执行SQL语句，返回自增值 注意：请检查实体类是否标记了 [Column(IsIdentity = true)] Declaration long ExecuteIdentity() Returns Type Description System.Int64 | Improve this Doc View Source ExecuteIdentityAsync(CancellationToken) Declaration Task<long> ExecuteIdentityAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source ExecuteInserted() 执行SQL语句，返回插入后的记录 注意：此方法只有 Postgresql/SqlServer 有效果 Declaration List<T1> ExecuteInserted() Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source ExecuteInsertedAsync(CancellationToken) Declaration Task<List<T1>> ExecuteInsertedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) 忽略的列，IgnoreColumns(a => a.Name) | IgnoreColumns(a => new{a.Name,a.Time}) | IgnoreColumns(a => new[]{\"name\",\"time\"}) Declaration IInsert<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns lambda选择列 Returns Type Description IInsert <T1> | Improve this Doc View Source IgnoreColumns(String[]) 忽略的列 Declaration IInsert<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns 属性名，或者字段名 Returns Type Description IInsert <T1> | Improve this Doc View Source InsertColumns(Expression<Func<T1, Object>>) 只插入的列，InsertColumns(a => a.Name) | InsertColumns(a => new{a.Name,a.Time}) | InsertColumns(a => new[]{\"name\",\"time\"}) Declaration IInsert<T1> InsertColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns lambda选择列 Returns Type Description IInsert <T1> | Improve this Doc View Source InsertColumns(String[]) 只插入的列 Declaration IInsert<T1> InsertColumns(string[] columns) Parameters Type Name Description System.String [] columns 属性名，或者字段名 Returns Type Description IInsert <T1> | Improve this Doc View Source InsertIdentity() 指定可插入自增字段 Declaration IInsert<T1> InsertIdentity() Returns Type Description IInsert <T1> | Improve this Doc View Source NoneParameter(Boolean) 不使用参数化，可通过 IFreeSql.CodeFirst.IsNotCommandParameter 全局性设置 Declaration IInsert<T1> NoneParameter(bool isNotCommandParameter = true) Parameters Type Name Description System.Boolean isNotCommandParameter 是否不使用参数化 Returns Type Description IInsert <T1> | Improve this Doc View Source ToDataTable() 返回 DataTable 以便做 BulkCopy 数据做准备 此方法会处理： 类型、表名、字段名映射 IgnoreColumns、InsertColumns Declaration DataTable ToDataTable() Returns Type Description System.Data.DataTable | Improve this Doc View Source ToSql() 返回即将执行的SQL语句 Declaration string ToSql() Returns Type Description System.String | Improve this Doc View Source WithConnection(DbConnection) 指定事务对象 Declaration IInsert<T1> WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description IInsert <T1> | Improve this Doc View Source WithTransaction(DbTransaction) 指定事务对象 Declaration IInsert<T1> WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description IInsert <T1>"
  },
  "api/FreeSql.IInsertOrUpdate-1.html": {
    "href": "api/FreeSql.IInsertOrUpdate-1.html",
    "title": "Interface IInsertOrUpdate<T1> | FreeSql API Docs",
    "keywords": "Interface IInsertOrUpdate<T1> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface IInsertOrUpdate<T1> where T1 : class Type Parameters Name Description T1 Methods | Improve this Doc View Source AsTable(Func<String, String>) 设置表名规则，可用于分库/分表，参数1：默认表名；返回值：新表名； Declaration IInsertOrUpdate<T1> AsTable(Func<string, string> tableRule) Parameters Type Name Description System.Func < System.String , System.String > tableRule Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source AsType(Type) 动态Type，在使用 Update<object> 后使用本方法，指定实体类型 Declaration IInsertOrUpdate<T1> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source CommandTimeout(Int32) 命令超时设置(秒) Declaration IInsertOrUpdate<T1> CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source ExecuteAffrows() 执行SQL语句，返回影响的行数 Declaration int ExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration Task<int> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source IfExistsDoNothing() 当记录存在时，什么都不做 换句话：只有记录不存在时才插入 Declaration IInsertOrUpdate<T1> IfExistsDoNothing() Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source SetSource(T1) 添加或更新，设置实体 Declaration IInsertOrUpdate<T1> SetSource(T1 source) Parameters Type Name Description T1 source 实体 Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source SetSource(IEnumerable<T1>) 添加或更新，设置实体集合 Declaration IInsertOrUpdate<T1> SetSource(IEnumerable<T1> source) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> source 实体集合 Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source ToSql() 返回即将执行的SQL语句 Declaration string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) 当记录存在时，指定只更新的字段，UpdateColumns(a => a.Name) | UpdateColumns(a => new{a.Name,a.Time}) | UpdateColumns(a => new[]{\"name\",\"time\"}) Declaration IInsertOrUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns lambda选择列 Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) 当记录存在时，指定只更新的字段 Declaration IInsertOrUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns 属性名，或者字段名 Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source WithConnection(DbConnection) 指定事务对象 Declaration IInsertOrUpdate<T1> WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source WithTransaction(DbTransaction) 指定事务对象 Declaration IInsertOrUpdate<T1> WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description IInsertOrUpdate <T1>"
  },
  "api/FreeSql.Internal.BaseDiyMemberExpression.html": {
    "href": "api/FreeSql.Internal.BaseDiyMemberExpression.html",
    "title": "Class BaseDiyMemberExpression | FreeSql API Docs",
    "keywords": "Class BaseDiyMemberExpression Inheritance System.Object BaseDiyMemberExpression SelectGroupingProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public abstract class BaseDiyMemberExpression Fields | Improve this Doc View Source _field Declaration public string _field Field Value Type Description System.String | Improve this Doc View Source _lambdaParameter 临时 LambdaExpression.Parameter Declaration public ParameterExpression _lambdaParameter Field Value Type Description System.Linq.Expressions.ParameterExpression | Improve this Doc View Source _map Declaration public ReadAnonymousTypeInfo _map Field Value Type Description ReadAnonymousTypeInfo Methods | Improve this Doc View Source ParseExp(Expression[]) Declaration public abstract string ParseExp(Expression[] members) Parameters Type Name Description System.Linq.Expressions.Expression [] members Returns Type Description System.String"
  },
  "api/FreeSql.Internal.CommonExpression.ExpressionStyle.html": {
    "href": "api/FreeSql.Internal.CommonExpression.ExpressionStyle.html",
    "title": "Enum CommonExpression.ExpressionStyle | FreeSql API Docs",
    "keywords": "Enum CommonExpression.ExpressionStyle Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public enum ExpressionStyle Fields Name Description AsSelect SelectColumns Where Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Internal.CommonExpression.ExpTSC.html": {
    "href": "api/FreeSql.Internal.CommonExpression.ExpTSC.html",
    "title": "Class CommonExpression.ExpTSC | FreeSql API Docs",
    "keywords": "Class CommonExpression.ExpTSC Inheritance System.Object CommonExpression.ExpTSC Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public class ExpTSC Properties | Improve this Doc View Source _selectColumnMap Declaration public List<SelectColumnInfo> _selectColumnMap { get; set; } Property Value Type Description System.Collections.Generic.List < SelectColumnInfo > | Improve this Doc View Source _tables Declaration public List<SelectTableInfo> _tables { get; set; } Property Value Type Description System.Collections.Generic.List < SelectTableInfo > | Improve this Doc View Source alias001 Declaration public string alias001 { get; set; } Property Value Type Description System.String | Improve this Doc View Source currentTable Declaration public TableInfo currentTable { get; set; } Property Value Type Description TableInfo | Improve this Doc View Source dbParams Declaration public List<DbParameter> dbParams { get; set; } Property Value Type Description System.Collections.Generic.List < System.Data.Common.DbParameter > | Improve this Doc View Source diymemexp Declaration public BaseDiyMemberExpression diymemexp { get; set; } Property Value Type Description BaseDiyMemberExpression | Improve this Doc View Source isDisableDiyParse Declaration public bool isDisableDiyParse { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source isQuoteName Declaration public bool isQuoteName { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source mapColumnTmp Declaration public ColumnInfo mapColumnTmp { get; set; } Property Value Type Description ColumnInfo | Improve this Doc View Source mapType Declaration public Type mapType { get; set; } Property Value Type Description System.Type | Improve this Doc View Source mapTypeTmp Declaration public Type mapTypeTmp { get; set; } Property Value Type Description System.Type | Improve this Doc View Source style Declaration public CommonExpression.ExpressionStyle style { get; set; } Property Value Type Description CommonExpression.ExpressionStyle | Improve this Doc View Source subSelect001 Declaration public Select0Provider subSelect001 { get; set; } Property Value Type Description Select0Provider | Improve this Doc View Source tbtype Declaration public SelectTableInfoType tbtype { get; set; } Property Value Type Description SelectTableInfoType | Improve this Doc View Source whereGlobalFilter Declaration public List<GlobalFilter.Item> whereGlobalFilter { get; set; } Property Value Type Description System.Collections.Generic.List < GlobalFilter.Item > Methods | Improve this Doc View Source Clone_selectColumnMap_diymemexp_tbtype(List<SelectColumnInfo>, BaseDiyMemberExpression, SelectTableInfoType) Declaration public CommonExpression.ExpTSC Clone_selectColumnMap_diymemexp_tbtype(List<SelectColumnInfo> v1, BaseDiyMemberExpression v2, SelectTableInfoType v3) Parameters Type Name Description System.Collections.Generic.List < SelectColumnInfo > v1 BaseDiyMemberExpression v2 SelectTableInfoType v3 Returns Type Description CommonExpression.ExpTSC | Improve this Doc View Source CloneDisableDiyParse() Declaration public CommonExpression.ExpTSC CloneDisableDiyParse() Returns Type Description CommonExpression.ExpTSC | Improve this Doc View Source SetDbParamsReturnOld(List<DbParameter>) Declaration public List<DbParameter> SetDbParamsReturnOld(List<DbParameter> newValue) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > newValue Returns Type Description System.Collections.Generic.List < System.Data.Common.DbParameter > | Improve this Doc View Source SetMapColumnTmp(ColumnInfo) Declaration public CommonExpression.ExpTSC SetMapColumnTmp(ColumnInfo col) Parameters Type Name Description ColumnInfo col Returns Type Description CommonExpression.ExpTSC | Improve this Doc View Source SetMapTypeReturnOld(Type) Declaration public Type SetMapTypeReturnOld(Type newValue) Parameters Type Name Description System.Type newValue Returns Type Description System.Type"
  },
  "api/FreeSql.Internal.CommonExpression.html": {
    "href": "api/FreeSql.Internal.CommonExpression.html",
    "title": "Class CommonExpression | FreeSql API Docs",
    "keywords": "Class CommonExpression Inheritance System.Object CommonExpression Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public abstract class CommonExpression Constructors | Improve this Doc View Source CommonExpression(CommonUtils) Declaration public CommonExpression(CommonUtils common) Parameters Type Name Description CommonUtils common Fields | Improve this Doc View Source _common Declaration public CommonUtils _common Field Value Type Description CommonUtils Properties | Improve this Doc View Source _ado Declaration public AdoProvider _ado { get; } Property Value Type Description AdoProvider Methods | Improve this Doc View Source ExpressionBinary(String, Expression, Expression, CommonExpression.ExpTSC) Declaration public string ExpressionBinary(string oper, Expression leftExp, Expression rightExp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.String oper System.Linq.Expressions.Expression leftExp System.Linq.Expressions.Expression rightExp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionJoinLambda(List<SelectTableInfo>, SelectTableInfoType, Expression, BaseDiyMemberExpression, List<GlobalFilter.Item>) Declaration public void ExpressionJoinLambda(List<SelectTableInfo> _tables, SelectTableInfoType tbtype, Expression exp, BaseDiyMemberExpression diymemexp, List<GlobalFilter.Item> whereGlobalFilter) Parameters Type Name Description System.Collections.Generic.List < SelectTableInfo > _tables SelectTableInfoType tbtype System.Linq.Expressions.Expression exp BaseDiyMemberExpression diymemexp System.Collections.Generic.List < GlobalFilter.Item > whereGlobalFilter | Improve this Doc View Source ExpressionLambdaToSql(Expression, CommonExpression.ExpTSC) Declaration public string ExpressionLambdaToSql(Expression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.Expression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlCallConvert(MethodCallExpression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlCallConvert(MethodCallExpression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.MethodCallExpression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlCallDateTime(MethodCallExpression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlCallDateTime(MethodCallExpression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.MethodCallExpression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlCallMath(MethodCallExpression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlCallMath(MethodCallExpression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.MethodCallExpression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlCallString(MethodCallExpression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlCallString(MethodCallExpression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.MethodCallExpression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlCallTimeSpan(MethodCallExpression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlCallTimeSpan(MethodCallExpression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.MethodCallExpression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlMemberAccessDateTime(MemberExpression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlMemberAccessDateTime(MemberExpression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.MemberExpression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlMemberAccessString(MemberExpression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlMemberAccessString(MemberExpression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.MemberExpression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlMemberAccessTimeSpan(MemberExpression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlMemberAccessTimeSpan(MemberExpression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.MemberExpression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionLambdaToSqlOther(Expression, CommonExpression.ExpTSC) Declaration public abstract string ExpressionLambdaToSqlOther(Expression exp, CommonExpression.ExpTSC tsc) Parameters Type Name Description System.Linq.Expressions.Expression exp CommonExpression.ExpTSC tsc Returns Type Description System.String | Improve this Doc View Source ExpressionSelectColumn_MemberAccess(List<SelectTableInfo>, List<SelectColumnInfo>, SelectTableInfoType, Expression, Boolean, BaseDiyMemberExpression) Declaration public string ExpressionSelectColumn_MemberAccess(List<SelectTableInfo> _tables, List<SelectColumnInfo> _selectColumnMap, SelectTableInfoType tbtype, Expression exp, bool isQuoteName, BaseDiyMemberExpression diymemexp) Parameters Type Name Description System.Collections.Generic.List < SelectTableInfo > _tables System.Collections.Generic.List < SelectColumnInfo > _selectColumnMap SelectTableInfoType tbtype System.Linq.Expressions.Expression exp System.Boolean isQuoteName BaseDiyMemberExpression diymemexp Returns Type Description System.String | Improve this Doc View Source ExpressionSelectColumns_MemberAccess_New_NewArrayInit(List<SelectTableInfo>, Expression, Boolean, BaseDiyMemberExpression) Declaration public string[] ExpressionSelectColumns_MemberAccess_New_NewArrayInit(List<SelectTableInfo> _tables, Expression exp, bool isQuoteName, BaseDiyMemberExpression diymemexp) Parameters Type Name Description System.Collections.Generic.List < SelectTableInfo > _tables System.Linq.Expressions.Expression exp System.Boolean isQuoteName BaseDiyMemberExpression diymemexp Returns Type Description System.String [] | Improve this Doc View Source ExpressionWhereLambda(List<SelectTableInfo>, Expression, BaseDiyMemberExpression, List<GlobalFilter.Item>, List<DbParameter>) Declaration public string ExpressionWhereLambda(List<SelectTableInfo> _tables, Expression exp, BaseDiyMemberExpression diymemexp, List<GlobalFilter.Item> whereGlobalFilter, List<DbParameter> dbParams) Parameters Type Name Description System.Collections.Generic.List < SelectTableInfo > _tables System.Linq.Expressions.Expression exp BaseDiyMemberExpression diymemexp System.Collections.Generic.List < GlobalFilter.Item > whereGlobalFilter System.Collections.Generic.List < System.Data.Common.DbParameter > dbParams Returns Type Description System.String | Improve this Doc View Source ExpressionWhereLambdaNoneForeignObject(List<SelectTableInfo>, TableInfo, List<SelectColumnInfo>, Expression, BaseDiyMemberExpression, List<DbParameter>) Declaration public string ExpressionWhereLambdaNoneForeignObject(List<SelectTableInfo> _tables, TableInfo table, List<SelectColumnInfo> _selectColumnMap, Expression exp, BaseDiyMemberExpression diymemexp, List<DbParameter> dbParams) Parameters Type Name Description System.Collections.Generic.List < SelectTableInfo > _tables TableInfo table System.Collections.Generic.List < SelectColumnInfo > _selectColumnMap System.Linq.Expressions.Expression exp BaseDiyMemberExpression diymemexp System.Collections.Generic.List < System.Data.Common.DbParameter > dbParams Returns Type Description System.String | Improve this Doc View Source formatSql(Object, Type, ColumnInfo, List<DbParameter>) Declaration public string formatSql(object obj, Type mapType, ColumnInfo mapColumn, List<DbParameter> dbParams) Parameters Type Name Description System.Object obj System.Type mapType ColumnInfo mapColumn System.Collections.Generic.List < System.Data.Common.DbParameter > dbParams Returns Type Description System.String | Improve this Doc View Source GetBoolString(Expression, String) Declaration public string GetBoolString(Expression exp, string sql) Parameters Type Name Description System.Linq.Expressions.Expression exp System.String sql Returns Type Description System.String | Improve this Doc View Source GetWhereCascadeSql(SelectTableInfo, List<GlobalFilter.Item>, Boolean) Declaration public string GetWhereCascadeSql(SelectTableInfo tb, List<GlobalFilter.Item> filters, bool isMultitb) Parameters Type Name Description SelectTableInfo tb System.Collections.Generic.List < GlobalFilter.Item > filters System.Boolean isMultitb Returns Type Description System.String | Improve this Doc View Source ReadAnonymous(ReadAnonymousTypeInfo, DbDataReader, ref Int32, Boolean, CommonExpression.ReadAnonymousDbValueRef, Int32, List<NativeTuple<String, IList, Int32>>) Declaration public object ReadAnonymous(ReadAnonymousTypeInfo parent, DbDataReader dr, ref int index, bool notRead, CommonExpression.ReadAnonymousDbValueRef dbValue, int rowIndex, List<NativeTuple<string, IList, int>> fillIncludeMany) Parameters Type Name Description ReadAnonymousTypeInfo parent System.Data.Common.DbDataReader dr System.Int32 index System.Boolean notRead CommonExpression.ReadAnonymousDbValueRef dbValue System.Int32 rowIndex System.Collections.Generic.List < NativeTuple < System.String , System.Collections.IList , System.Int32 >> fillIncludeMany Returns Type Description System.Object | Improve this Doc View Source ReadAnonymousField(List<SelectTableInfo>, StringBuilder, ReadAnonymousTypeInfo, ref Int32, Expression, Select0Provider, BaseDiyMemberExpression, List<GlobalFilter.Item>, List<String>, Boolean) Declaration public bool ReadAnonymousField(List<SelectTableInfo> _tables, StringBuilder field, ReadAnonymousTypeInfo parent, ref int index, Expression exp, Select0Provider select, BaseDiyMemberExpression diymemexp, List<GlobalFilter.Item> whereGlobalFilter, List<string> findIncludeMany, bool isAllDtoMap) Parameters Type Name Description System.Collections.Generic.List < SelectTableInfo > _tables System.Text.StringBuilder field ReadAnonymousTypeInfo parent System.Int32 index System.Linq.Expressions.Expression exp Select0Provider select BaseDiyMemberExpression diymemexp System.Collections.Generic.List < GlobalFilter.Item > whereGlobalFilter System.Collections.Generic.List < System.String > findIncludeMany System.Boolean isAllDtoMap Returns Type Description System.Boolean | Improve this Doc View Source SearchColumnByField(List<SelectTableInfo>, TableInfo, String) Declaration public ColumnInfo SearchColumnByField(List<SelectTableInfo> _tables, TableInfo currentTable, string field) Parameters Type Name Description System.Collections.Generic.List < SelectTableInfo > _tables TableInfo currentTable System.String field Returns Type Description ColumnInfo"
  },
  "api/FreeSql.Internal.CommonExpression.ReadAnonymousDbValueRef.html": {
    "href": "api/FreeSql.Internal.CommonExpression.ReadAnonymousDbValueRef.html",
    "title": "Class CommonExpression.ReadAnonymousDbValueRef | FreeSql API Docs",
    "keywords": "Class CommonExpression.ReadAnonymousDbValueRef Inheritance System.Object CommonExpression.ReadAnonymousDbValueRef Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public class ReadAnonymousDbValueRef Properties | Improve this Doc View Source DbValue Declaration public object DbValue { get; set; } Property Value Type Description System.Object"
  },
  "api/FreeSql.Internal.CommonExpression.ReplaceHzyTupleToMultiParam.html": {
    "href": "api/FreeSql.Internal.CommonExpression.ReplaceHzyTupleToMultiParam.html",
    "title": "Class CommonExpression.ReplaceHzyTupleToMultiParam | FreeSql API Docs",
    "keywords": "Class CommonExpression.ReplaceHzyTupleToMultiParam Inheritance System.Object System.Linq.Expressions.ExpressionVisitor CommonExpression.ReplaceHzyTupleToMultiParam Inherited Members System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>) System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression) System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>) System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String) System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String) System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression) System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression) System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock) System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression) System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression) System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression) System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression) System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression) System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit) System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression) System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression) System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression) System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression) System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression) System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget) System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>) System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression) System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression) System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment) System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding) System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression) System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding) System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding) System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression) System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression) System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression) System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression) System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression) System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression) System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase) System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression) System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression) System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public class ReplaceHzyTupleToMultiParam : ExpressionVisitor Methods | Improve this Doc View Source Modify(LambdaExpression, List<SelectTableInfo>) Declaration public LambdaExpression Modify(LambdaExpression lambda, List<SelectTableInfo> tables) Parameters Type Name Description System.Linq.Expressions.LambdaExpression lambda System.Collections.Generic.List < SelectTableInfo > tables Returns Type Description System.Linq.Expressions.LambdaExpression | Improve this Doc View Source VisitMember(MemberExpression) Declaration protected override Expression VisitMember(MemberExpression node) Parameters Type Name Description System.Linq.Expressions.MemberExpression node Returns Type Description System.Linq.Expressions.Expression Overrides System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)"
  },
  "api/FreeSql.Internal.CommonExpression.ReplaceParameterVisitor.html": {
    "href": "api/FreeSql.Internal.CommonExpression.ReplaceParameterVisitor.html",
    "title": "Class CommonExpression.ReplaceParameterVisitor | FreeSql API Docs",
    "keywords": "Class CommonExpression.ReplaceParameterVisitor Inheritance System.Object System.Linq.Expressions.ExpressionVisitor CommonExpression.ReplaceParameterVisitor Inherited Members System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>) System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression) System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>) System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String) System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String) System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression) System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression) System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock) System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression) System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression) System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression) System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression) System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression) System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit) System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression) System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression) System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression) System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression) System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression) System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget) System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>) System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression) System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression) System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment) System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding) System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression) System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding) System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding) System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression) System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression) System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression) System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression) System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression) System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression) System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase) System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression) System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression) System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public class ReplaceParameterVisitor : ExpressionVisitor Methods | Improve this Doc View Source Modify(LambdaExpression, ParameterExpression) Declaration public Expression Modify(LambdaExpression lambda, ParameterExpression parameter) Parameters Type Name Description System.Linq.Expressions.LambdaExpression lambda System.Linq.Expressions.ParameterExpression parameter Returns Type Description System.Linq.Expressions.Expression | Improve this Doc View Source VisitMember(MemberExpression) Declaration protected override Expression VisitMember(MemberExpression node) Parameters Type Name Description System.Linq.Expressions.MemberExpression node Returns Type Description System.Linq.Expressions.Expression Overrides System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)"
  },
  "api/FreeSql.Internal.CommonProvider.AdoProvider.html": {
    "href": "api/FreeSql.Internal.CommonProvider.AdoProvider.html",
    "title": "Class AdoProvider | FreeSql API Docs",
    "keywords": "Class AdoProvider Inheritance System.Object AdoProvider Implements IAdo System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class AdoProvider : IAdo, IDisposable Constructors | Improve this Doc View Source AdoProvider(DataType, String, String[]) Declaration public AdoProvider(DataType dataType, string connectionString, string[] slaveConnectionStrings) Parameters Type Name Description DataType dataType System.String connectionString System.String [] slaveConnectionStrings Fields | Improve this Doc View Source ResolveTransaction Declaration protected Func<DbTransaction> ResolveTransaction Field Value Type Description System.Func < System.Data.Common.DbTransaction > | Improve this Doc View Source slaveUnavailables Declaration protected int slaveUnavailables Field Value Type Description System.Int32 Properties | Improve this Doc View Source _util Declaration public CommonUtils _util { get; set; } Property Value Type Description CommonUtils | Improve this Doc View Source ConnectionString Declaration public string ConnectionString { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source DataType Declaration public DataType DataType { get; } Property Value Type Description DataType | Improve this Doc View Source Identifier Declaration public Guid Identifier { get; protected set; } Property Value Type Description System.Guid | Improve this Doc View Source IsTracePerformance Declaration protected bool IsTracePerformance { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MasterPool Declaration public IObjectPool<DbConnection> MasterPool { get; protected set; } Property Value Type Description IObjectPool < System.Data.Common.DbConnection > | Improve this Doc View Source SlaveConnectionStrings Declaration public string[] SlaveConnectionStrings { get; protected set; } Property Value Type Description System.String [] | Improve this Doc View Source SlavePools Declaration public List<IObjectPool<DbConnection>> SlavePools { get; } Property Value Type Description System.Collections.Generic.List < IObjectPool < System.Data.Common.DbConnection >> | Improve this Doc View Source TransactionCurrentThread Declaration public DbTransaction TransactionCurrentThread { get; } Property Value Type Description System.Data.Common.DbTransaction | Improve this Doc View Source TransactionCurrentThreadAopBefore Declaration public TraceBeforeEventArgs TransactionCurrentThreadAopBefore { get; } Property Value Type Description TraceBeforeEventArgs Methods | Improve this Doc View Source Addslashes(String, Object[]) Declaration public string Addslashes(string filter, params object[] parms) Parameters Type Name Description System.String filter System.Object [] parms Returns Type Description System.String | Improve this Doc View Source AddslashesIEnumerable(Object, Type, ColumnInfo) Declaration protected string AddslashesIEnumerable(object param, Type mapType, ColumnInfo mapColumn) Parameters Type Name Description System.Object param System.Type mapType ColumnInfo mapColumn Returns Type Description System.String | Improve this Doc View Source AddslashesProcessParam(Object, Type, ColumnInfo) Declaration public abstract object AddslashesProcessParam(object param, Type mapType, ColumnInfo mapColumn) Parameters Type Name Description System.Object param System.Type mapType ColumnInfo mapColumn Returns Type Description System.Object | Improve this Doc View Source BeginTransaction(Nullable<IsolationLevel>) Declaration public void BeginTransaction(IsolationLevel? isolationLevel) Parameters Type Name Description System.Nullable < System.Data.IsolationLevel > isolationLevel | Improve this Doc View Source CommandFluent(String, Object) Declaration public AdoCommandFluent CommandFluent(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description AdoCommandFluent | Improve this Doc View Source CommitTransaction() Declaration public void CommitTransaction() | Improve this Doc View Source CreateCommand() Declaration public abstract DbCommand CreateCommand() Returns Type Description System.Data.Common.DbCommand | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ExecuteArray(CommandType, String, DbParameter[]) Declaration public object[][] ExecuteArray(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public object[][] ExecuteArray(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(DbConnection, DbTransaction, String, Object) Declaration public object[][] ExecuteArray(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(DbTransaction, CommandType, String, DbParameter[]) Declaration public object[][] ExecuteArray(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(DbTransaction, String, Object) Declaration public object[][] ExecuteArray(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArray(String, Object) Declaration public object[][] ExecuteArray(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArrayAsync(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<object[][]> ExecuteArrayAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<object[][]> ExecuteArrayAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<object[][]> ExecuteArrayAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<object[][]> ExecuteArrayAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(DbTransaction, String, Object, CancellationToken) Declaration public Task<object[][]> ExecuteArrayAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteArrayAsync(String, Object, CancellationToken) Declaration public Task<object[][]> ExecuteArrayAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteConnectTest(Int32) Declaration public bool ExecuteConnectTest(int commandTimeout = 0) Parameters Type Name Description System.Int32 commandTimeout Returns Type Description System.Boolean | Improve this Doc View Source ExecuteConnectTestAsync(Int32, CancellationToken) Declaration public Task<bool> ExecuteConnectTestAsync(int commandTimeout = 0, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 commandTimeout System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ExecuteDataSet(CommandType, String, DbParameter[]) Declaration public DataSet ExecuteDataSet(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public DataSet ExecuteDataSet(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(DbConnection, DbTransaction, String, Object) Declaration public DataSet ExecuteDataSet(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(DbTransaction, CommandType, String, DbParameter[]) Declaration public DataSet ExecuteDataSet(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(DbTransaction, String, Object) Declaration public DataSet ExecuteDataSet(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSet(String, Object) Declaration public DataSet ExecuteDataSet(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSetAsync(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<DataSet> ExecuteDataSetAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<DataSet> ExecuteDataSetAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<DataSet> ExecuteDataSetAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<DataSet> ExecuteDataSetAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(DbTransaction, String, Object, CancellationToken) Declaration public Task<DataSet> ExecuteDataSetAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataSetAsync(String, Object, CancellationToken) Declaration public Task<DataSet> ExecuteDataSetAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataTable(CommandType, String, DbParameter[]) Declaration public DataTable ExecuteDataTable(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public DataTable ExecuteDataTable(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(DbConnection, DbTransaction, String, Object) Declaration public DataTable ExecuteDataTable(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(DbTransaction, CommandType, String, DbParameter[]) Declaration public DataTable ExecuteDataTable(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(DbTransaction, String, Object) Declaration public DataTable ExecuteDataTable(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTable(String, Object) Declaration public DataTable ExecuteDataTable(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTableAsync(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<DataTable> ExecuteDataTableAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<DataTable> ExecuteDataTableAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<DataTable> ExecuteDataTableAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<DataTable> ExecuteDataTableAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(DbTransaction, String, Object, CancellationToken) Declaration public Task<DataTable> ExecuteDataTableAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteDataTableAsync(String, Object, CancellationToken) Declaration public Task<DataTable> ExecuteDataTableAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteNonQuery(CommandType, String, DbParameter[]) Declaration public int ExecuteNonQuery(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public int ExecuteNonQuery(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(DbConnection, DbTransaction, String, Object) Declaration public int ExecuteNonQuery(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(DbTransaction, CommandType, String, DbParameter[]) Declaration public int ExecuteNonQuery(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(DbTransaction, String, Object) Declaration public int ExecuteNonQuery(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQuery(String, Object) Declaration public int ExecuteNonQuery(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQueryAsync(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<int> ExecuteNonQueryAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<int> ExecuteNonQueryAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<int> ExecuteNonQueryAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<int> ExecuteNonQueryAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(DbTransaction, String, Object, CancellationToken) Declaration public Task<int> ExecuteNonQueryAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteNonQueryAsync(String, Object, CancellationToken) Declaration public Task<int> ExecuteNonQueryAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteReader(Action<FetchCallbackArgs<DbDataReader>>, CommandType, String, DbParameter[]) Declaration public void ExecuteReader(Action<FetchCallbackArgs<DbDataReader>> fetchHandler, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms | Improve this Doc View Source ExecuteReader(Action<FetchCallbackArgs<DbDataReader>>, String, Object) Declaration public void ExecuteReader(Action<FetchCallbackArgs<DbDataReader>> fetchHandler, string cmdText, object parms = null) Parameters Type Name Description System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.String cmdText System.Object parms | Improve this Doc View Source ExecuteReader(DbConnection, DbTransaction, Action<FetchCallbackArgs<DbDataReader>>, CommandType, String, Int32, DbParameter[]) Declaration public void ExecuteReader(DbConnection connection, DbTransaction transaction, Action<FetchCallbackArgs<DbDataReader>> fetchHandler, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms | Improve this Doc View Source ExecuteReader(DbConnection, DbTransaction, Action<FetchCallbackArgs<DbDataReader>>, String, Object) Declaration public void ExecuteReader(DbConnection connection, DbTransaction transaction, Action<FetchCallbackArgs<DbDataReader>> fetchHandler, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.String cmdText System.Object parms | Improve this Doc View Source ExecuteReader(DbTransaction, Action<FetchCallbackArgs<DbDataReader>>, CommandType, String, DbParameter[]) Declaration public void ExecuteReader(DbTransaction transaction, Action<FetchCallbackArgs<DbDataReader>> fetchHandler, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms | Improve this Doc View Source ExecuteReader(DbTransaction, Action<FetchCallbackArgs<DbDataReader>>, String, Object) Declaration public void ExecuteReader(DbTransaction transaction, Action<FetchCallbackArgs<DbDataReader>> fetchHandler, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Action < FetchCallbackArgs < System.Data.Common.DbDataReader >> fetchHandler System.String cmdText System.Object parms | Improve this Doc View Source ExecuteReaderAsync(DbConnection, DbTransaction, Func<FetchCallbackArgs<DbDataReader>, Task>, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task ExecuteReaderAsync(DbConnection connection, DbTransaction transaction, Func<FetchCallbackArgs<DbDataReader>, Task> fetchHandler, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > fetchHandler System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(DbConnection, DbTransaction, Func<FetchCallbackArgs<DbDataReader>, Task>, String, Object, CancellationToken) Declaration public Task ExecuteReaderAsync(DbConnection connection, DbTransaction transaction, Func<FetchCallbackArgs<DbDataReader>, Task> fetchHandler, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > fetchHandler System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(DbTransaction, Func<FetchCallbackArgs<DbDataReader>, Task>, CommandType, String, DbParameter[], CancellationToken) Declaration public Task ExecuteReaderAsync(DbTransaction transaction, Func<FetchCallbackArgs<DbDataReader>, Task> fetchHandler, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > fetchHandler System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(DbTransaction, Func<FetchCallbackArgs<DbDataReader>, Task>, String, Object, CancellationToken) Declaration public Task ExecuteReaderAsync(DbTransaction transaction, Func<FetchCallbackArgs<DbDataReader>, Task> fetchHandler, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > fetchHandler System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(Func<FetchCallbackArgs<DbDataReader>, Task>, CommandType, String, DbParameter[], CancellationToken) Declaration public Task ExecuteReaderAsync(Func<FetchCallbackArgs<DbDataReader>, Task> fetchHandler, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > fetchHandler System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteReaderAsync(Func<FetchCallbackArgs<DbDataReader>, Task>, String, Object, CancellationToken) Declaration public Task ExecuteReaderAsync(Func<FetchCallbackArgs<DbDataReader>, Task> fetchHandler, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Func < FetchCallbackArgs < System.Data.Common.DbDataReader >, System.Threading.Tasks.Task > fetchHandler System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ExecuteScalar(CommandType, String, DbParameter[]) Declaration public object ExecuteScalar(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public object ExecuteScalar(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(DbConnection, DbTransaction, String, Object) Declaration public object ExecuteScalar(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(DbTransaction, CommandType, String, DbParameter[]) Declaration public object ExecuteScalar(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(DbTransaction, String, Object) Declaration public object ExecuteScalar(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalar(String, Object) Declaration public object ExecuteScalar(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Object | Improve this Doc View Source ExecuteScalarAsync(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<object> ExecuteScalarAsync(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<object> ExecuteScalarAsync(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<object> ExecuteScalarAsync(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<object> ExecuteScalarAsync(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(DbTransaction, String, Object, CancellationToken) Declaration public Task<object> ExecuteScalarAsync(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source ExecuteScalarAsync(String, Object, CancellationToken) Declaration public Task<object> ExecuteScalarAsync(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source GetDbParamtersByObject(Object) Declaration public DbParameter[] GetDbParamtersByObject(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Data.Common.DbParameter [] | Improve this Doc View Source GetDbParamtersByObject(String, Object) Declaration public abstract DbParameter[] GetDbParamtersByObject(string sql, object obj) Parameters Type Name Description System.String sql System.Object obj Returns Type Description System.Data.Common.DbParameter [] | Improve this Doc View Source IsFromSlave(String) Declaration public static bool IsFromSlave(string cmdText) Parameters Type Name Description System.String cmdText Returns Type Description System.Boolean | Improve this Doc View Source Query<T>(CommandType, String, DbParameter[]) Declaration public List<T> Query<T>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public List<T> Query<T>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(DbConnection, DbTransaction, String, Object) Declaration public List<T> Query<T>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(DbTransaction, CommandType, String, DbParameter[]) Declaration public List<T> Query<T>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(DbTransaction, String, Object) Declaration public List<T> Query<T>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(String, Object) Declaration public List<T> Query<T>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T>(Type, DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public List<T> Query<T>(Type resultType, DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Type resultType System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T1, T2>(CommandType, String, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>> Query<T1, T2>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>> Query<T1, T2>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(DbConnection, DbTransaction, String, Object) Declaration public NativeTuple<List<T1>, List<T2>> Query<T1, T2>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(DbTransaction, CommandType, String, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>> Query<T1, T2>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(DbTransaction, String, Object) Declaration public NativeTuple<List<T1>, List<T2>> Query<T1, T2>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2>(String, Object) Declaration public NativeTuple<List<T1>, List<T2>> Query<T1, T2>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2, T3>(CommandType, String, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(DbConnection, DbTransaction, String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(DbTransaction, CommandType, String, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(DbTransaction, String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3>(String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3, T4>(CommandType, String, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(DbConnection, DbTransaction, String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(DbTransaction, CommandType, String, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(DbTransaction, String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4>(String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(CommandType, String, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(DbConnection, DbTransaction, String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(DbTransaction, CommandType, String, DbParameter[]) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(DbTransaction transaction, CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(DbTransaction, String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(DbTransaction transaction, string cmdText, object parms = null) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>(String, Object) Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T>(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<List<T>> QueryAsync<T>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<List<T>> QueryAsync<T>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<List<T>> QueryAsync<T>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<List<T>> QueryAsync<T>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(DbTransaction, String, Object, CancellationToken) Declaration public Task<List<T>> QueryAsync<T>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(String, Object, CancellationToken) Declaration public Task<List<T>> QueryAsync<T>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T>(Type, DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<List<T>> QueryAsync<T>(Type resultType, DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Type resultType System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T1, T2>(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(DbTransaction, String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2>(String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2, T3>(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(DbTransaction, String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3>(String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(DbTransaction, String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(DbConnection, DbTransaction, CommandType, String, Int32, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(DbConnection connection, DbTransaction transaction, CommandType cmdType, string cmdText, int cmdTimeout, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Int32 cmdTimeout System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(DbConnection, DbTransaction, String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(DbConnection connection, DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbConnection connection System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(DbTransaction, CommandType, String, DbParameter[], CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(DbTransaction transaction, CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(DbTransaction, String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(DbTransaction transaction, string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.Common.DbTransaction transaction System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(String, Object, CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QuerySingle<T>(CommandType, String, DbParameter[]) Declaration public T QuerySingle<T>(CommandType cmdType, string cmdText, params DbParameter[] cmdParms) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source QuerySingle<T>(String, Object) Declaration public T QuerySingle<T>(string cmdText, object parms = null) Parameters Type Name Description System.String cmdText System.Object parms Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source QuerySingleAsync<T>(CommandType, String, DbParameter[], CancellationToken) Declaration public Task<T> QuerySingleAsync<T>(CommandType cmdType, string cmdText, DbParameter[] cmdParms, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Data.CommandType cmdType System.String cmdText System.Data.Common.DbParameter [] cmdParms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source QuerySingleAsync<T>(String, Object, CancellationToken) Declaration public Task<T> QuerySingleAsync<T>(string cmdText, object parms = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String cmdText System.Object parms System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source ReturnConnection(IObjectPool<DbConnection>, Object<DbConnection>, Exception) Declaration public abstract void ReturnConnection(IObjectPool<DbConnection> pool, Object<DbConnection> conn, Exception ex) Parameters Type Name Description IObjectPool < System.Data.Common.DbConnection > pool Object < System.Data.Common.DbConnection > conn System.Exception ex | Improve this Doc View Source RollbackTransaction(Exception) Declaration public void RollbackTransaction(Exception ex) Parameters Type Name Description System.Exception ex | Improve this Doc View Source Transaction(Action) Declaration public void Transaction(Action handler) Parameters Type Name Description System.Action handler | Improve this Doc View Source Transaction(IsolationLevel, Action) Declaration public void Transaction(IsolationLevel isolationLevel, Action handler) Parameters Type Name Description System.Data.IsolationLevel isolationLevel System.Action handler Implements IAdo System.IDisposable"
  },
  "api/FreeSql.Internal.CommonProvider.AopProvider.html": {
    "href": "api/FreeSql.Internal.CommonProvider.AopProvider.html",
    "title": "Class AopProvider | FreeSql API Docs",
    "keywords": "Class AopProvider Inheritance System.Object AopProvider Implements IAop Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public class AopProvider : IAop Properties | Improve this Doc View Source AuditDataReaderHandler Declaration public EventHandler<AuditDataReaderEventArgs> AuditDataReaderHandler { get; } Property Value Type Description System.EventHandler < AuditDataReaderEventArgs > | Improve this Doc View Source AuditValueHandler Declaration public EventHandler<AuditValueEventArgs> AuditValueHandler { get; } Property Value Type Description System.EventHandler < AuditValueEventArgs > | Improve this Doc View Source CommandAfterHandler Declaration public EventHandler<CommandAfterEventArgs> CommandAfterHandler { get; } Property Value Type Description System.EventHandler < CommandAfterEventArgs > | Improve this Doc View Source CommandBeforeHandler Declaration public EventHandler<CommandBeforeEventArgs> CommandBeforeHandler { get; } Property Value Type Description System.EventHandler < CommandBeforeEventArgs > | Improve this Doc View Source ConfigEntityHandler Declaration public EventHandler<ConfigEntityEventArgs> ConfigEntityHandler { get; } Property Value Type Description System.EventHandler < ConfigEntityEventArgs > | Improve this Doc View Source ConfigEntityPropertyHandler Declaration public EventHandler<ConfigEntityPropertyEventArgs> ConfigEntityPropertyHandler { get; } Property Value Type Description System.EventHandler < ConfigEntityPropertyEventArgs > | Improve this Doc View Source CurdAfterHandler Declaration public EventHandler<CurdAfterEventArgs> CurdAfterHandler { get; } Property Value Type Description System.EventHandler < CurdAfterEventArgs > | Improve this Doc View Source CurdBeforeHandler Declaration public EventHandler<CurdBeforeEventArgs> CurdBeforeHandler { get; } Property Value Type Description System.EventHandler < CurdBeforeEventArgs > | Improve this Doc View Source ParseExpressionHandler Declaration public EventHandler<ParseExpressionEventArgs> ParseExpressionHandler { get; } Property Value Type Description System.EventHandler < ParseExpressionEventArgs > | Improve this Doc View Source SyncStructureAfterHandler Declaration public EventHandler<SyncStructureAfterEventArgs> SyncStructureAfterHandler { get; } Property Value Type Description System.EventHandler < SyncStructureAfterEventArgs > | Improve this Doc View Source SyncStructureBeforeHandler Declaration public EventHandler<SyncStructureBeforeEventArgs> SyncStructureBeforeHandler { get; } Property Value Type Description System.EventHandler < SyncStructureBeforeEventArgs > | Improve this Doc View Source TraceAfterHandler Declaration public EventHandler<TraceAfterEventArgs> TraceAfterHandler { get; } Property Value Type Description System.EventHandler < TraceAfterEventArgs > | Improve this Doc View Source TraceBeforeHandler Declaration public EventHandler<TraceBeforeEventArgs> TraceBeforeHandler { get; } Property Value Type Description System.EventHandler < TraceBeforeEventArgs > Events | Improve this Doc View Source AuditDataReader Declaration public event EventHandler<AuditDataReaderEventArgs> AuditDataReader Event Type Type Description System.EventHandler < AuditDataReaderEventArgs > | Improve this Doc View Source AuditValue Declaration public event EventHandler<AuditValueEventArgs> AuditValue Event Type Type Description System.EventHandler < AuditValueEventArgs > | Improve this Doc View Source CommandAfter Declaration public event EventHandler<CommandAfterEventArgs> CommandAfter Event Type Type Description System.EventHandler < CommandAfterEventArgs > | Improve this Doc View Source CommandBefore Declaration public event EventHandler<CommandBeforeEventArgs> CommandBefore Event Type Type Description System.EventHandler < CommandBeforeEventArgs > | Improve this Doc View Source ConfigEntity Declaration public event EventHandler<ConfigEntityEventArgs> ConfigEntity Event Type Type Description System.EventHandler < ConfigEntityEventArgs > | Improve this Doc View Source ConfigEntityProperty Declaration public event EventHandler<ConfigEntityPropertyEventArgs> ConfigEntityProperty Event Type Type Description System.EventHandler < ConfigEntityPropertyEventArgs > | Improve this Doc View Source CurdAfter Declaration public event EventHandler<CurdAfterEventArgs> CurdAfter Event Type Type Description System.EventHandler < CurdAfterEventArgs > | Improve this Doc View Source CurdBefore Declaration public event EventHandler<CurdBeforeEventArgs> CurdBefore Event Type Type Description System.EventHandler < CurdBeforeEventArgs > | Improve this Doc View Source ParseExpression Declaration public event EventHandler<ParseExpressionEventArgs> ParseExpression Event Type Type Description System.EventHandler < ParseExpressionEventArgs > | Improve this Doc View Source SyncStructureAfter Declaration public event EventHandler<SyncStructureAfterEventArgs> SyncStructureAfter Event Type Type Description System.EventHandler < SyncStructureAfterEventArgs > | Improve this Doc View Source SyncStructureBefore Declaration public event EventHandler<SyncStructureBeforeEventArgs> SyncStructureBefore Event Type Type Description System.EventHandler < SyncStructureBeforeEventArgs > | Improve this Doc View Source TraceAfter Declaration public event EventHandler<TraceAfterEventArgs> TraceAfter Event Type Type Description System.EventHandler < TraceAfterEventArgs > | Improve this Doc View Source TraceBefore Declaration public event EventHandler<TraceBeforeEventArgs> TraceBefore Event Type Type Description System.EventHandler < TraceBeforeEventArgs > Implements IAop"
  },
  "api/FreeSql.Internal.CommonProvider.BaseDbProvider.html": {
    "href": "api/FreeSql.Internal.CommonProvider.BaseDbProvider.html",
    "title": "Class BaseDbProvider | FreeSql API Docs",
    "keywords": "Class BaseDbProvider Inheritance System.Object BaseDbProvider Implements IFreeSql System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class BaseDbProvider : IFreeSql, IDisposable Properties | Improve this Doc View Source Ado Declaration public virtual IAdo Ado { get; protected set; } Property Value Type Description IAdo | Improve this Doc View Source Aop Declaration public virtual IAop Aop { get; protected set; } Property Value Type Description IAop | Improve this Doc View Source CodeFirst Declaration public virtual ICodeFirst CodeFirst { get; protected set; } Property Value Type Description ICodeFirst | Improve this Doc View Source DbFirst Declaration public virtual IDbFirst DbFirst { get; protected set; } Property Value Type Description IDbFirst | Improve this Doc View Source GlobalFilter Declaration public virtual GlobalFilter GlobalFilter { get; } Property Value Type Description GlobalFilter | Improve this Doc View Source InternalCommonExpression Declaration public virtual CommonExpression InternalCommonExpression { get; protected set; } Property Value Type Description CommonExpression | Improve this Doc View Source InternalCommonUtils Declaration public virtual CommonUtils InternalCommonUtils { get; protected set; } Property Value Type Description CommonUtils Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public abstract IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public abstract IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public abstract IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public abstract ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public abstract IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source Delete<T1>() Declaration public IDelete<T1> Delete<T1>() where T1 : class Returns Type Description IDelete <T1> Type Parameters Name Description T1 | Improve this Doc View Source Delete<T1>(Object) Declaration public IDelete<T1> Delete<T1>(object dywhere) where T1 : class Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 | Improve this Doc View Source Dispose() Declaration public abstract void Dispose() | Improve this Doc View Source Insert<T1>() Declaration public IInsert<T1> Insert<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(T1) Declaration public IInsert<T1> Insert<T1>(T1 source) where T1 : class Parameters Type Name Description T1 source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(T1[]) Declaration public IInsert<T1> Insert<T1>(T1[] source) where T1 : class Parameters Type Name Description T1[] source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(IEnumerable<T1>) Declaration public IInsert<T1> Insert<T1>(IEnumerable<T1> source) where T1 : class Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source Insert<T1>(List<T1>) Declaration public IInsert<T1> Insert<T1>(List<T1> source) where T1 : class Parameters Type Name Description System.Collections.Generic.List <T1> source Returns Type Description IInsert <T1> Type Parameters Name Description T1 | Improve this Doc View Source InsertOrUpdate<T1>() Declaration public IInsertOrUpdate<T1> InsertOrUpdate<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source Select<T1>() Declaration public ISelect<T1> Select<T1>() where T1 : class Returns Type Description ISelect <T1> Type Parameters Name Description T1 | Improve this Doc View Source Select<T1>(Object) Declaration public ISelect<T1> Select<T1>(object dywhere) where T1 : class Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 | Improve this Doc View Source Transaction(Action) Declaration public void Transaction(Action handler) Parameters Type Name Description System.Action handler | Improve this Doc View Source Transaction(IsolationLevel, Action) Declaration public void Transaction(IsolationLevel isolationLevel, Action handler) Parameters Type Name Description System.Data.IsolationLevel isolationLevel System.Action handler | Improve this Doc View Source Update<T1>() Declaration public IUpdate<T1> Update<T1>() where T1 : class Returns Type Description IUpdate <T1> Type Parameters Name Description T1 | Improve this Doc View Source Update<T1>(Object) Declaration public IUpdate<T1> Update<T1>(object dywhere) where T1 : class Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Implements IFreeSql System.IDisposable Extension Methods FreeSqlGlobalExtensions.Queryable<T>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(IFreeSql) FreeSqlGlobalExtensions.Select<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(IFreeSql) EntityUtilExtensions.GetEntityKeyString(IFreeSql, Type, Object, Boolean, String) EntityUtilExtensions.GetEntityKeyValues(IFreeSql, Type, Object) EntityUtilExtensions.GetEntityValueWithPropertyName(IFreeSql, Type, Object, String) EntityUtilExtensions.GetEntityString(IFreeSql, Type, Object) EntityUtilExtensions.MapEntityValue(IFreeSql, Type, Object, Object) EntityUtilExtensions.MapEntityKeyValue(IFreeSql, Type, Object, Object) EntityUtilExtensions.SetEntityIdentityValueWithPrimary(IFreeSql, Type, Object, Int64) EntityUtilExtensions.GetEntityIdentityValueWithPrimary(IFreeSql, Type, Object) EntityUtilExtensions.ClearEntityPrimaryValueWithIdentityAndGuid(IFreeSql, Type, Object) EntityUtilExtensions.ClearEntityPrimaryValueWithIdentity(IFreeSql, Type, Object) EntityUtilExtensions.CompareEntityValueReturnColumns(IFreeSql, Type, Object, Object, Boolean) EntityUtilExtensions.SetEntityIncrByWithPropertyName(IFreeSql, Type, Object, String, Int32) EntityUtilExtensions.SetEntityValueWithPropertyName(IFreeSql, Type, Object, String, Object)"
  },
  "api/FreeSql.Internal.CommonProvider.CodeFirstProvider.html": {
    "href": "api/FreeSql.Internal.CommonProvider.CodeFirstProvider.html",
    "title": "Class CodeFirstProvider | FreeSql API Docs",
    "keywords": "Class CodeFirstProvider Inheritance System.Object CodeFirstProvider Implements ICodeFirst Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class CodeFirstProvider : ICodeFirst Constructors | Improve this Doc View Source CodeFirstProvider(IFreeSql, CommonUtils, CommonExpression) Declaration public CodeFirstProvider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression Fields | Improve this Doc View Source _commonExpression Declaration public CommonExpression _commonExpression Field Value Type Description CommonExpression | Improve this Doc View Source _commonUtils Declaration public CommonUtils _commonUtils Field Value Type Description CommonUtils | Improve this Doc View Source _dicSynced Declaration public ConcurrentDictionary<Type, ConcurrentDictionary<string, bool>> _dicSynced Field Value Type Description System.Collections.Concurrent.ConcurrentDictionary < System.Type , System.Collections.Concurrent.ConcurrentDictionary < System.String , System.Boolean >> | Improve this Doc View Source _orm Declaration public IFreeSql _orm Field Value Type Description IFreeSql Properties | Improve this Doc View Source IsAutoSyncStructure Declaration public virtual bool IsAutoSyncStructure { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsConfigEntityFromDbFirst Declaration public bool IsConfigEntityFromDbFirst { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGenerateCommandParameterWithLambda Declaration public virtual bool IsGenerateCommandParameterWithLambda { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLazyLoading Declaration public bool IsLazyLoading { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNoneCommandParameter Declaration public virtual bool IsNoneCommandParameter { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSyncStructureToLower Declaration public bool IsSyncStructureToLower { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSyncStructureToUpper Declaration public bool IsSyncStructureToUpper { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source _dicSycedTryAdd(Type, String) Declaration public void _dicSycedTryAdd(Type entityType, string tableName = null) Parameters Type Name Description System.Type entityType System.String tableName | Improve this Doc View Source ConfigEntity(Type, Action<TableFluent>) Declaration public ICodeFirst ConfigEntity(Type type, Action<TableFluent> entity) Parameters Type Name Description System.Type type System.Action < TableFluent > entity Returns Type Description ICodeFirst | Improve this Doc View Source ConfigEntity<T>(Action<TableFluent<T>>) Declaration public ICodeFirst ConfigEntity<T>(Action<TableFluent<T>> entity) Parameters Type Name Description System.Action < TableFluent <T>> entity Returns Type Description ICodeFirst Type Parameters Name Description T | Improve this Doc View Source ExecuteDDLStatements(String) Declaration public virtual int ExecuteDDLStatements(string ddl) Parameters Type Name Description System.String ddl Returns Type Description System.Int32 | Improve this Doc View Source GetComparisonDDLStatements(CodeFirstProvider.TypeAndName[]) Declaration protected abstract string GetComparisonDDLStatements(params CodeFirstProvider.TypeAndName[] objects) Parameters Type Name Description CodeFirstProvider.TypeAndName [] objects Returns Type Description System.String | Improve this Doc View Source GetComparisonDDLStatements(Type, String) Declaration public string GetComparisonDDLStatements(Type entityType, string tableName) Parameters Type Name Description System.Type entityType System.String tableName Returns Type Description System.String | Improve this Doc View Source GetComparisonDDLStatements(Type[]) Declaration public string GetComparisonDDLStatements(params Type[] entityTypes) Parameters Type Name Description System.Type [] entityTypes Returns Type Description System.String | Improve this Doc View Source GetComparisonDDLStatements<TEntity>() Declaration public string GetComparisonDDLStatements<TEntity>() Returns Type Description System.String Type Parameters Name Description TEntity | Improve this Doc View Source GetConfigEntity(Type) Declaration public TableAttribute GetConfigEntity(Type type) Parameters Type Name Description System.Type type Returns Type Description TableAttribute | Improve this Doc View Source GetDbInfo(Type) Declaration public abstract DbInfoResult GetDbInfo(Type type) Parameters Type Name Description System.Type type Returns Type Description DbInfoResult | Improve this Doc View Source GetTableByEntity(Type) Declaration public TableInfo GetTableByEntity(Type type) Parameters Type Name Description System.Type type Returns Type Description TableInfo | Improve this Doc View Source GetTableNameLowerOrUpper(String) Declaration protected string GetTableNameLowerOrUpper(string tableName) Parameters Type Name Description System.String tableName Returns Type Description System.String | Improve this Doc View Source ReplaceIndexName(String, String) Declaration public static string ReplaceIndexName(string indexName, string tbname) Parameters Type Name Description System.String indexName System.String tbname Returns Type Description System.String | Improve this Doc View Source SyncStructure(CodeFirstProvider.TypeAndName[]) Declaration protected void SyncStructure(params CodeFirstProvider.TypeAndName[] objects) Parameters Type Name Description CodeFirstProvider.TypeAndName [] objects | Improve this Doc View Source SyncStructure(Type, String, Boolean) Declaration public void SyncStructure(Type entityType, string tableName, bool isForceSync) Parameters Type Name Description System.Type entityType System.String tableName System.Boolean isForceSync | Improve this Doc View Source SyncStructure(Type[]) Declaration public void SyncStructure(params Type[] entityTypes) Parameters Type Name Description System.Type [] entityTypes | Improve this Doc View Source SyncStructure<TEntity>() Declaration public void SyncStructure<TEntity>() Type Parameters Name Description TEntity Implements ICodeFirst"
  },
  "api/FreeSql.Internal.CommonProvider.CodeFirstProvider.TypeAndName.html": {
    "href": "api/FreeSql.Internal.CommonProvider.CodeFirstProvider.TypeAndName.html",
    "title": "Class CodeFirstProvider.TypeAndName | FreeSql API Docs",
    "keywords": "Class CodeFirstProvider.TypeAndName Inheritance System.Object CodeFirstProvider.TypeAndName Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public class TypeAndName Constructors | Improve this Doc View Source TypeAndName(Type, String) Declaration public TypeAndName(Type entityType, string tableName) Parameters Type Name Description System.Type entityType System.String tableName Properties | Improve this Doc View Source entityType Declaration public Type entityType { get; } Property Value Type Description System.Type | Improve this Doc View Source tableName Declaration public string tableName { get; } Property Value Type Description System.String"
  },
  "api/FreeSql.Internal.CommonProvider.DbConnectionPool.html": {
    "href": "api/FreeSql.Internal.CommonProvider.DbConnectionPool.html",
    "title": "Class DbConnectionPool | FreeSql API Docs",
    "keywords": "Class DbConnectionPool Inheritance System.Object DbConnectionPool Implements IObjectPool < System.Data.Common.DbConnection > System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public class DbConnectionPool : IObjectPool<DbConnection>, IDisposable Constructors | Improve this Doc View Source DbConnectionPool(DataType, Func<DbConnection>) Declaration public DbConnectionPool(DataType dataType, Func<DbConnection> connectionFactory) Parameters Type Name Description DataType dataType System.Func < System.Data.Common.DbConnection > connectionFactory Properties | Improve this Doc View Source IsAvailable Declaration public bool IsAvailable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSingletonConnection Declaration public bool IsSingletonConnection { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Policy Declaration public IPolicy<DbConnection> Policy { get; } Property Value Type Description IPolicy < System.Data.Common.DbConnection > | Improve this Doc View Source Statistics Declaration public string Statistics { get; } Property Value Type Description System.String | Improve this Doc View Source StatisticsFullily Declaration public string StatisticsFullily { get; } Property Value Type Description System.String | Improve this Doc View Source TestConnection Declaration public DbConnection TestConnection { get; } Property Value Type Description System.Data.Common.DbConnection | Improve this Doc View Source UnavailableException Declaration public Exception UnavailableException { get; } Property Value Type Description System.Exception | Improve this Doc View Source UnavailableTime Declaration public DateTime? UnavailableTime { get; } Property Value Type Description System.Nullable < System.DateTime > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Get(Nullable<TimeSpan>) Declaration public Object<DbConnection> Get(TimeSpan? timeout = default(TimeSpan? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout Returns Type Description Object < System.Data.Common.DbConnection > | Improve this Doc View Source GetAsync() Declaration public Task<Object<DbConnection>> GetAsync() Returns Type Description System.Threading.Tasks.Task < Object < System.Data.Common.DbConnection >> | Improve this Doc View Source Return(Object<DbConnection>, Boolean) Declaration public void Return(Object<DbConnection> obj, bool isReset = false) Parameters Type Name Description Object < System.Data.Common.DbConnection > obj System.Boolean isReset | Improve this Doc View Source SetUnavailable(Exception) Declaration public bool SetUnavailable(Exception exception) Parameters Type Name Description System.Exception exception Returns Type Description System.Boolean Implements IObjectPool<T> System.IDisposable"
  },
  "api/FreeSql.Internal.CommonProvider.DeleteProvider-1.html": {
    "href": "api/FreeSql.Internal.CommonProvider.DeleteProvider-1.html",
    "title": "Class DeleteProvider<T1> | FreeSql API Docs",
    "keywords": "Class DeleteProvider<T1> Inheritance System.Object DeleteProvider<T1> Implements IDelete <T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class DeleteProvider<T1> : IDelete<T1> Type Parameters Name Description T1 Constructors | Improve this Doc View Source DeleteProvider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public DeleteProvider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Fields | Improve this Doc View Source _commandTimeout Declaration public int _commandTimeout Field Value Type Description System.Int32 | Improve this Doc View Source _commonExpression Declaration public CommonExpression _commonExpression Field Value Type Description CommonExpression | Improve this Doc View Source _commonUtils Declaration public CommonUtils _commonUtils Field Value Type Description CommonUtils | Improve this Doc View Source _connection Declaration public DbConnection _connection Field Value Type Description System.Data.Common.DbConnection | Improve this Doc View Source _interceptSql Declaration public Action<StringBuilder> _interceptSql Field Value Type Description System.Action < System.Text.StringBuilder > | Improve this Doc View Source _orm Declaration public IFreeSql _orm Field Value Type Description IFreeSql | Improve this Doc View Source _params Declaration public List<DbParameter> _params Field Value Type Description System.Collections.Generic.List < System.Data.Common.DbParameter > | Improve this Doc View Source _table Declaration public TableInfo _table Field Value Type Description TableInfo | Improve this Doc View Source _tableRule Declaration public Func<string, string> _tableRule Field Value Type Description System.Func < System.String , System.String > | Improve this Doc View Source _transaction Declaration public DbTransaction _transaction Field Value Type Description System.Data.Common.DbTransaction | Improve this Doc View Source _where Declaration public StringBuilder _where Field Value Type Description System.Text.StringBuilder | Improve this Doc View Source _whereGlobalFilter Declaration public List<GlobalFilter.Item> _whereGlobalFilter Field Value Type Description System.Collections.Generic.List < GlobalFilter.Item > | Improve this Doc View Source _whereTimes Declaration public int _whereTimes Field Value Type Description System.Int32 Methods | Improve this Doc View Source AsTable(Func<String, String>) Declaration public IDelete<T1> AsTable(Func<string, string> tableRule) Parameters Type Name Description System.Func < System.String , System.String > tableRule Returns Type Description IDelete <T1> | Improve this Doc View Source AsType(Type) Declaration public IDelete<T1> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IDelete <T1> | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source CommandTimeout(Int32) Declaration public IDelete<T1> CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description IDelete <T1> | Improve this Doc View Source DisableGlobalFilter(String[]) Declaration public IDelete<T1> DisableGlobalFilter(params string[] name) Parameters Type Name Description System.String [] name Returns Type Description IDelete <T1> | Improve this Doc View Source ExecuteAffrows() Declaration public int ExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public Task<int> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteDeleted() Declaration public abstract List<T1> ExecuteDeleted() Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source ExecuteDeletedAsync(CancellationToken) Declaration public abstract Task<List<T1>> ExecuteDeletedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source TableRuleInvoke() Declaration protected string TableRuleInvoke() Returns Type Description System.String | Improve this Doc View Source ToSql() Declaration public string ToSql() Returns Type Description System.String | Improve this Doc View Source Where(T1) Declaration public IDelete<T1> Where(T1 item) Parameters Type Name Description T1 item Returns Type Description IDelete <T1> | Improve this Doc View Source Where(IEnumerable<T1>) Declaration public IDelete<T1> Where(IEnumerable<T1> items) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> items Returns Type Description IDelete <T1> | Improve this Doc View Source Where(Expression<Func<T1, Boolean>>) Declaration public IDelete<T1> Where(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description IDelete <T1> | Improve this Doc View Source Where(String, Object) Declaration public IDelete<T1> Where(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description IDelete <T1> | Improve this Doc View Source WhereDynamic(Object, Boolean) Declaration public IDelete<T1> WhereDynamic(object dywhere, bool not = false) Parameters Type Name Description System.Object dywhere System.Boolean not Returns Type Description IDelete <T1> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, Boolean>>) Declaration public IDelete<T1> WhereIf(bool condition, Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description IDelete <T1> | Improve this Doc View Source WhereIf(Boolean, String, Object) Declaration public IDelete<T1> WhereIf(bool condition, string sql, object parms = null) Parameters Type Name Description System.Boolean condition System.String sql System.Object parms Returns Type Description IDelete <T1> | Improve this Doc View Source WithConnection(DbConnection) Declaration public IDelete<T1> WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description IDelete <T1> | Improve this Doc View Source WithTransaction(DbTransaction) Declaration public IDelete<T1> WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description IDelete <T1> Implements IDelete<T1>"
  },
  "api/FreeSql.Internal.CommonProvider.html": {
    "href": "api/FreeSql.Internal.CommonProvider.html",
    "title": "Namespace FreeSql.Internal.CommonProvider | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Internal.CommonProvider Classes AdoProvider AopProvider BaseDbProvider CodeFirstProvider CodeFirstProvider.TypeAndName DbConnectionPool DeleteProvider<T1> InsertOrUpdateProvider<T1> InsertProvider<T1> Select0Provider Select0Provider<TSelect, T1> Select0Provider<TSelect, T1>.GetAllFieldExpressionTreeInfo Select10Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Select11Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Select12Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Select13Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Select14Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Select15Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Select16Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Select1Provider<T1> Select2Provider<T1, T2> Select3Provider<T1, T2, T3> Select4Provider<T1, T2, T3, T4> Select5Provider<T1, T2, T3, T4, T5> Select6Provider<T1, T2, T3, T4, T5, T6> Select7Provider<T1, T2, T3, T4, T5, T6, T7> Select8Provider<T1, T2, T3, T4, T5, T6, T7, T8> Select9Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9> SelectGroupingProvider SelectGroupingProvider<TKey, TValue> UpdateProvider<T1>"
  },
  "api/FreeSql.Internal.CommonProvider.InsertOrUpdateProvider-1.html": {
    "href": "api/FreeSql.Internal.CommonProvider.InsertOrUpdateProvider-1.html",
    "title": "Class InsertOrUpdateProvider<T1> | FreeSql API Docs",
    "keywords": "Class InsertOrUpdateProvider<T1> Inheritance System.Object InsertOrUpdateProvider<T1> Implements IInsertOrUpdate <T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class InsertOrUpdateProvider<T1> : IInsertOrUpdate<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source InsertOrUpdateProvider(IFreeSql, CommonUtils, CommonExpression) Declaration public InsertOrUpdateProvider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression Fields | Improve this Doc View Source _auditValueChangedDict Declaration public Dictionary<string, bool> _auditValueChangedDict Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Boolean > | Improve this Doc View Source _commandTimeout Declaration public int _commandTimeout Field Value Type Description System.Int32 | Improve this Doc View Source _commonExpression Declaration public CommonExpression _commonExpression Field Value Type Description CommonExpression | Improve this Doc View Source _commonUtils Declaration public CommonUtils _commonUtils Field Value Type Description CommonUtils | Improve this Doc View Source _connection Declaration public DbConnection _connection Field Value Type Description System.Data.Common.DbConnection | Improve this Doc View Source _doNothing Declaration public bool _doNothing Field Value Type Description System.Boolean | Improve this Doc View Source _orm Declaration public IFreeSql _orm Field Value Type Description IFreeSql | Improve this Doc View Source _params Declaration public DbParameter[] _params Field Value Type Description System.Data.Common.DbParameter [] | Improve this Doc View Source _source Declaration public List<T1> _source Field Value Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source _table Declaration public TableInfo _table Field Value Type Description TableInfo | Improve this Doc View Source _tableRule Declaration public Func<string, string> _tableRule Field Value Type Description System.Func < System.String , System.String > | Improve this Doc View Source _transaction Declaration public DbTransaction _transaction Field Value Type Description System.Data.Common.DbTransaction | Improve this Doc View Source _updateIgnore Declaration public Dictionary<string, bool> _updateIgnore Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Boolean > Properties | Improve this Doc View Source IdentityColumn Declaration public ColumnInfo IdentityColumn { get; } Property Value Type Description ColumnInfo Methods | Improve this Doc View Source AsTable(Func<String, String>) Declaration public IInsertOrUpdate<T1> AsTable(Func<string, string> tableRule) Parameters Type Name Description System.Func < System.String , System.String > tableRule Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source AsType(Type) Declaration public IInsertOrUpdate<T1> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source AuditDataValue(Object, T1, IFreeSql, TableInfo, Dictionary<String, Boolean>) Declaration public static void AuditDataValue(object sender, T1 data, IFreeSql orm, TableInfo table, Dictionary<string, bool> changedDict) Parameters Type Name Description System.Object sender T1 data IFreeSql orm TableInfo table System.Collections.Generic.Dictionary < System.String , System.Boolean > changedDict | Improve this Doc View Source AuditDataValue(Object, IEnumerable<T1>, IFreeSql, TableInfo, Dictionary<String, Boolean>) Declaration public static void AuditDataValue(object sender, IEnumerable<T1> data, IFreeSql orm, TableInfo table, Dictionary<string, bool> changedDict) Parameters Type Name Description System.Object sender System.Collections.Generic.IEnumerable <T1> data IFreeSql orm TableInfo table System.Collections.Generic.Dictionary < System.String , System.Boolean > changedDict | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source CommandTimeout(Int32) Declaration public IInsertOrUpdate<T1> CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source ExecuteAffrows() Declaration public int ExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public Task<int> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source IfExistsDoNothing() Declaration public IInsertOrUpdate<T1> IfExistsDoNothing() Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source RawExecuteAffrows() Declaration public int RawExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source RawExecuteAffrowsAsync(CancellationToken) Declaration public Task<int> RawExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source SetSource(T1) Declaration public IInsertOrUpdate<T1> SetSource(T1 source) Parameters Type Name Description T1 source Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source SetSource(IEnumerable<T1>) Declaration public IInsertOrUpdate<T1> SetSource(IEnumerable<T1> source) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> source Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source SplitSourceByIdentityValueIsNull(List<T1>) 如果实体类有自增属性，分成两个 List，有值的Item1 merge，无值的Item2 insert Declaration public NativeTuple<List<T1>, List<T1>> SplitSourceByIdentityValueIsNull(List<T1> source) Parameters Type Name Description System.Collections.Generic.List <T1> source Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T1>> | Improve this Doc View Source TableRuleInvoke() Declaration protected string TableRuleInvoke() Returns Type Description System.String | Improve this Doc View Source ToSql() Declaration public abstract string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) Declaration public IInsertOrUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) Declaration public IInsertOrUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source WithConnection(DbConnection) Declaration public IInsertOrUpdate<T1> WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source WithTransaction(DbTransaction) Declaration public IInsertOrUpdate<T1> WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description IInsertOrUpdate <T1> | Improve this Doc View Source WriteSourceSelectUnionAll(List<T1>, StringBuilder, List<DbParameter>) Declaration public void WriteSourceSelectUnionAll(List<T1> source, StringBuilder sb, List<DbParameter> dbParams) Parameters Type Name Description System.Collections.Generic.List <T1> source System.Text.StringBuilder sb System.Collections.Generic.List < System.Data.Common.DbParameter > dbParams Implements IInsertOrUpdate<T1>"
  },
  "api/FreeSql.Internal.CommonProvider.InsertProvider-1.html": {
    "href": "api/FreeSql.Internal.CommonProvider.InsertProvider-1.html",
    "title": "Class InsertProvider<T1> | FreeSql API Docs",
    "keywords": "Class InsertProvider<T1> Inheritance System.Object InsertProvider<T1> Implements IInsert <T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class InsertProvider<T1> : IInsert<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source InsertProvider(IFreeSql, CommonUtils, CommonExpression) Declaration public InsertProvider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression Fields | Improve this Doc View Source _auditValueChangedDict Declaration public Dictionary<string, bool> _auditValueChangedDict Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Boolean > | Improve this Doc View Source _batchAutoTransaction Declaration public bool _batchAutoTransaction Field Value Type Description System.Boolean | Improve this Doc View Source _batchParameterLimit Declaration public int _batchParameterLimit Field Value Type Description System.Int32 | Improve this Doc View Source _batchProgress Declaration public Action<BatchProgressStatus<T1>> _batchProgress Field Value Type Description System.Action < BatchProgressStatus <T1>> | Improve this Doc View Source _batchValuesLimit Declaration public int _batchValuesLimit Field Value Type Description System.Int32 | Improve this Doc View Source _commandTimeout Declaration public int _commandTimeout Field Value Type Description System.Int32 | Improve this Doc View Source _commonExpression Declaration public CommonExpression _commonExpression Field Value Type Description CommonExpression | Improve this Doc View Source _commonUtils Declaration public CommonUtils _commonUtils Field Value Type Description CommonUtils | Improve this Doc View Source _connection Declaration public DbConnection _connection Field Value Type Description System.Data.Common.DbConnection | Improve this Doc View Source _ignore Declaration public Dictionary<string, bool> _ignore Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Boolean > | Improve this Doc View Source _insertIdentity Declaration public bool _insertIdentity Field Value Type Description System.Boolean | Improve this Doc View Source _noneParameter Declaration public bool _noneParameter Field Value Type Description System.Boolean | Improve this Doc View Source _noneParameterFlag Declaration public string _noneParameterFlag Field Value Type Description System.String | Improve this Doc View Source _orm Declaration public IFreeSql _orm Field Value Type Description IFreeSql | Improve this Doc View Source _params Declaration public DbParameter[] _params Field Value Type Description System.Data.Common.DbParameter [] | Improve this Doc View Source _source Declaration public List<T1> _source Field Value Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source _table Declaration public TableInfo _table Field Value Type Description TableInfo | Improve this Doc View Source _tableRule Declaration public Func<string, string> _tableRule Field Value Type Description System.Func < System.String , System.String > | Improve this Doc View Source _transaction Declaration public DbTransaction _transaction Field Value Type Description System.Data.Common.DbTransaction Methods | Improve this Doc View Source AppendData(T1) Declaration public IInsert<T1> AppendData(T1 source) Parameters Type Name Description T1 source Returns Type Description IInsert <T1> | Improve this Doc View Source AppendData(T1[]) Declaration public IInsert<T1> AppendData(T1[] source) Parameters Type Name Description T1[] source Returns Type Description IInsert <T1> | Improve this Doc View Source AppendData(IEnumerable<T1>) Declaration public IInsert<T1> AppendData(IEnumerable<T1> source) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> source Returns Type Description IInsert <T1> | Improve this Doc View Source AsTable(Func<String, String>) Declaration public IInsert<T1> AsTable(Func<string, string> tableRule) Parameters Type Name Description System.Func < System.String , System.String > tableRule Returns Type Description IInsert <T1> | Improve this Doc View Source AsType(Type) Declaration public IInsert<T1> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IInsert <T1> | Improve this Doc View Source AuditDataValue(Object, T1, IFreeSql, TableInfo, Dictionary<String, Boolean>) Declaration public static void AuditDataValue(object sender, T1 data, IFreeSql orm, TableInfo table, Dictionary<string, bool> changedDict) Parameters Type Name Description System.Object sender T1 data IFreeSql orm TableInfo table System.Collections.Generic.Dictionary < System.String , System.Boolean > changedDict | Improve this Doc View Source AuditDataValue(Object, IEnumerable<T1>, IFreeSql, TableInfo, Dictionary<String, Boolean>) Declaration public static void AuditDataValue(object sender, IEnumerable<T1> data, IFreeSql orm, TableInfo table, Dictionary<string, bool> changedDict) Parameters Type Name Description System.Object sender System.Collections.Generic.IEnumerable <T1> data IFreeSql orm TableInfo table System.Collections.Generic.Dictionary < System.String , System.Boolean > changedDict | Improve this Doc View Source BatchOptions(Int32, Int32, Boolean) Declaration public virtual IInsert<T1> BatchOptions(int valuesLimit, int parameterLimit, bool autoTransaction = true) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit System.Boolean autoTransaction Returns Type Description IInsert <T1> | Improve this Doc View Source BatchProgress(Action<BatchProgressStatus<T1>>) Declaration public IInsert<T1> BatchProgress(Action<BatchProgressStatus<T1>> callback) Parameters Type Name Description System.Action < BatchProgressStatus <T1>> callback Returns Type Description IInsert <T1> | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source CommandTimeout(Int32) Declaration public IInsert<T1> CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description IInsert <T1> | Improve this Doc View Source ExecuteAffrows() Declaration public abstract int ExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public abstract Task<int> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteIdentity() Declaration public abstract long ExecuteIdentity() Returns Type Description System.Int64 | Improve this Doc View Source ExecuteIdentityAsync(CancellationToken) Declaration public abstract Task<long> ExecuteIdentityAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source ExecuteInserted() Declaration public abstract List<T1> ExecuteInserted() Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source ExecuteInsertedAsync(CancellationToken) Declaration public abstract Task<List<T1>> ExecuteInsertedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source IgnoreCanInsert() AsType, Ctor, ClearData 三处地方需要重新加载 Declaration protected void IgnoreCanInsert() | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) Declaration public IInsert<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description IInsert <T1> | Improve this Doc View Source IgnoreColumns(String[]) Declaration public IInsert<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description IInsert <T1> | Improve this Doc View Source InsertColumns(Expression<Func<T1, Object>>) Declaration public IInsert<T1> InsertColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description IInsert <T1> | Improve this Doc View Source InsertColumns(String[]) Declaration public IInsert<T1> InsertColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description IInsert <T1> | Improve this Doc View Source InsertIdentity() Declaration public IInsert<T1> InsertIdentity() Returns Type Description IInsert <T1> | Improve this Doc View Source NoneParameter(Boolean) Declaration public IInsert<T1> NoneParameter(bool isNotCommandParameter = true) Parameters Type Name Description System.Boolean isNotCommandParameter Returns Type Description IInsert <T1> | Improve this Doc View Source RawExecuteAffrows() Declaration protected virtual int RawExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source RawExecuteAffrowsAsync(CancellationToken) Declaration protected virtual Task<int> RawExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source RawExecuteIdentity() Declaration protected abstract long RawExecuteIdentity() Returns Type Description System.Int64 | Improve this Doc View Source RawExecuteIdentityAsync(CancellationToken) Declaration protected abstract Task<long> RawExecuteIdentityAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source RawExecuteInserted() Declaration protected abstract List<T1> RawExecuteInserted() Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source RawExecuteInsertedAsync(CancellationToken) Declaration protected abstract Task<List<T1>> RawExecuteInsertedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source SplitExecuteAffrows(Int32, Int32) Declaration protected int SplitExecuteAffrows(int valuesLimit, int parameterLimit) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit Returns Type Description System.Int32 | Improve this Doc View Source SplitExecuteAffrowsAsync(Int32, Int32, CancellationToken) Declaration protected Task<int> SplitExecuteAffrowsAsync(int valuesLimit, int parameterLimit, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source SplitExecuteIdentity(Int32, Int32) Declaration protected long SplitExecuteIdentity(int valuesLimit, int parameterLimit) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit Returns Type Description System.Int64 | Improve this Doc View Source SplitExecuteIdentityAsync(Int32, Int32, CancellationToken) Declaration protected Task<long> SplitExecuteIdentityAsync(int valuesLimit, int parameterLimit, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source SplitExecuteInserted(Int32, Int32) Declaration protected List<T1> SplitExecuteInserted(int valuesLimit, int parameterLimit) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source SplitExecuteInsertedAsync(Int32, Int32, CancellationToken) Declaration protected Task<List<T1>> SplitExecuteInsertedAsync(int valuesLimit, int parameterLimit, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source SplitSource(Int32, Int32) Declaration protected List<T1>[] SplitSource(int valuesLimit, int parameterLimit) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit Returns Type Description System.Collections.Generic.List <T1>[] | Improve this Doc View Source TableRuleInvoke() Declaration protected string TableRuleInvoke() Returns Type Description System.String | Improve this Doc View Source ToDataTable() Declaration public DataTable ToDataTable() Returns Type Description System.Data.DataTable | Improve this Doc View Source ToSql() Declaration public virtual string ToSql() Returns Type Description System.String | Improve this Doc View Source ToSqlValuesOrSelectUnionAll(Boolean) Declaration public string ToSqlValuesOrSelectUnionAll(bool isValues = true) Parameters Type Name Description System.Boolean isValues Returns Type Description System.String | Improve this Doc View Source ToSqlValuesOrSelectUnionAllExtension101(Boolean, Action<Object, Int32, StringBuilder>) Declaration public string ToSqlValuesOrSelectUnionAllExtension101(bool isValues, Action<object, int, StringBuilder> onrow) Parameters Type Name Description System.Boolean isValues System.Action < System.Object , System.Int32 , System.Text.StringBuilder > onrow Returns Type Description System.String | Improve this Doc View Source ToSqlValuesOrSelectUnionAllExtension102(Boolean, Action<Object, Int32, StringBuilder>, Action<Object, Int32, StringBuilder>) Declaration public string ToSqlValuesOrSelectUnionAllExtension102(bool isValues, Action<object, int, StringBuilder> onrowPre, Action<object, int, StringBuilder> onrow) Parameters Type Name Description System.Boolean isValues System.Action < System.Object , System.Int32 , System.Text.StringBuilder > onrowPre System.Action < System.Object , System.Int32 , System.Text.StringBuilder > onrow Returns Type Description System.String | Improve this Doc View Source WithConnection(DbConnection) Declaration public IInsert<T1> WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description IInsert <T1> | Improve this Doc View Source WithTransaction(DbTransaction) Declaration public IInsert<T1> WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description IInsert <T1> Implements IInsert<T1>"
  },
  "api/FreeSql.Internal.CommonProvider.Select0Provider.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select0Provider.html",
    "title": "Class Select0Provider | FreeSql API Docs",
    "keywords": "Class Select0Provider Inheritance System.Object Select0Provider Select0Provider<TSelect, T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select0Provider Fields | Improve this Doc View Source _aliasRule Declaration public Func<Type, string, string> _aliasRule Field Value Type Description System.Func < System.Type , System.String , System.String > | Improve this Doc View Source _cancel Declaration public Func<bool> _cancel Field Value Type Description System.Func < System.Boolean > | Improve this Doc View Source _commandTimeout Declaration public int _commandTimeout Field Value Type Description System.Int32 | Improve this Doc View Source _commonExpression Declaration public CommonExpression _commonExpression Field Value Type Description CommonExpression | Improve this Doc View Source _commonUtils Declaration public CommonUtils _commonUtils Field Value Type Description CommonUtils | Improve this Doc View Source _connection Declaration public DbConnection _connection Field Value Type Description System.Data.Common.DbConnection | Improve this Doc View Source _distinct Declaration public bool _distinct Field Value Type Description System.Boolean | Improve this Doc View Source _groupby Declaration public string _groupby Field Value Type Description System.String | Improve this Doc View Source _having Declaration public string _having Field Value Type Description System.String | Improve this Doc View Source _includeInfo Declaration public Dictionary<string, MemberExpression[]> _includeInfo Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Linq.Expressions.MemberExpression []> | Improve this Doc View Source _includeToList Declaration public List<Action<object>> _includeToList Field Value Type Description System.Collections.Generic.List < System.Action < System.Object >> | Improve this Doc View Source _includeToListAsync Declaration public List<Func<object, CancellationToken, Task>> _includeToListAsync Field Value Type Description System.Collections.Generic.List < System.Func < System.Object , System.Threading.CancellationToken , System.Threading.Tasks.Task >> | Improve this Doc View Source _join Declaration public StringBuilder _join Field Value Type Description System.Text.StringBuilder | Improve this Doc View Source _limit Declaration public int _limit Field Value Type Description System.Int32 | Improve this Doc View Source _orderby Declaration public string _orderby Field Value Type Description System.String | Improve this Doc View Source _orm Declaration public IFreeSql _orm Field Value Type Description IFreeSql | Improve this Doc View Source _params Declaration public List<DbParameter> _params Field Value Type Description System.Collections.Generic.List < System.Data.Common.DbParameter > | Improve this Doc View Source _select Declaration public string _select Field Value Type Description System.String | Improve this Doc View Source _selectExpression Declaration public Expression _selectExpression Field Value Type Description System.Linq.Expressions.Expression | Improve this Doc View Source _skip Declaration public int _skip Field Value Type Description System.Int32 | Improve this Doc View Source _tableRules Declaration public List<Func<Type, string, string>> _tableRules Field Value Type Description System.Collections.Generic.List < System.Func < System.Type , System.String , System.String >> | Improve this Doc View Source _tables Declaration public List<SelectTableInfo> _tables Field Value Type Description System.Collections.Generic.List < SelectTableInfo > | Improve this Doc View Source _tosqlAppendContent Declaration public string _tosqlAppendContent Field Value Type Description System.String | Improve this Doc View Source _trackToList Declaration public Action<object> _trackToList Field Value Type Description System.Action < System.Object > | Improve this Doc View Source _transaction Declaration public DbTransaction _transaction Field Value Type Description System.Data.Common.DbTransaction | Improve this Doc View Source _where Declaration public StringBuilder _where Field Value Type Description System.Text.StringBuilder | Improve this Doc View Source _whereGlobalFilter Declaration public List<GlobalFilter.Item> _whereGlobalFilter Field Value Type Description System.Collections.Generic.List < GlobalFilter.Item > Methods | Improve this Doc View Source ConvertStringPropertyToExpression(String, Boolean) Declaration public Expression ConvertStringPropertyToExpression(string property, bool fromFirstTable = false) Parameters Type Name Description System.String property System.Boolean fromFirstTable Returns Type Description System.Linq.Expressions.Expression | Improve this Doc View Source CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Declaration public static void CopyData(Select0Provider from, Select0Provider to, ReadOnlyCollection<ParameterExpression> lambParms) Parameters Type Name Description Select0Provider from Select0Provider to System.Collections.ObjectModel.ReadOnlyCollection < System.Linq.Expressions.ParameterExpression > lambParms | Improve this Doc View Source Finalize() Declaration protected void Finalize()"
  },
  "api/FreeSql.Internal.CommonProvider.Select0Provider-2.GetAllFieldExpressionTreeInfo.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select0Provider-2.GetAllFieldExpressionTreeInfo.html",
    "title": "Class Select0Provider<TSelect, T1>.GetAllFieldExpressionTreeInfo | FreeSql API Docs",
    "keywords": "Class Select0Provider<TSelect, T1>.GetAllFieldExpressionTreeInfo Inheritance System.Object Select0Provider<TSelect, T1>.GetAllFieldExpressionTreeInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public class GetAllFieldExpressionTreeInfo Properties | Improve this Doc View Source Field Declaration public string Field { get; set; } Property Value Type Description System.String | Improve this Doc View Source FieldCount Declaration public int FieldCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Read Declaration public Func<IFreeSql, DbDataReader, T1> Read { get; set; } Property Value Type Description System.Func < IFreeSql , System.Data.Common.DbDataReader , T1>"
  },
  "api/FreeSql.Internal.CommonProvider.Select0Provider-2.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select0Provider-2.html",
    "title": "Class Select0Provider<TSelect, T1> | FreeSql API Docs",
    "keywords": "Class Select0Provider<TSelect, T1> Inheritance System.Object Select0Provider Select0Provider<TSelect, T1> Select10Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Select11Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Select12Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Select13Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Select14Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Select15Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Select16Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Select1Provider<T1> Select2Provider<T1, T2> Select3Provider<T1, T2, T3> Select4Provider<T1, T2, T3, T4> Select5Provider<T1, T2, T3, T4, T5> Select6Provider<T1, T2, T3, T4, T5, T6> Select7Provider<T1, T2, T3, T4, T5, T6, T7> Select8Provider<T1, T2, T3, T4, T5, T6, T7, T8> Select9Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9> Implements ISelect0 <TSelect, T1> ISelect0 Inherited Members Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select0Provider<TSelect, T1> : Select0Provider, ISelect0<TSelect, T1>, ISelect0 where TSelect : class Type Parameters Name Description TSelect T1 Constructors | Improve this Doc View Source Select0Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select0Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source Any() Declaration public bool Any() Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(CancellationToken) Declaration public Task<bool> AnyAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AsAlias(Func<Type, String, String>) Declaration public TSelect AsAlias(Func<Type, string, string> aliasRule) Parameters Type Name Description System.Func < System.Type , System.String , System.String > aliasRule Returns Type Description TSelect | Improve this Doc View Source AsTable(Func<Type, String, String>) Declaration public TSelect AsTable(Func<Type, string, string> tableRule) Parameters Type Name Description System.Func < System.Type , System.String , System.String > tableRule Returns Type Description TSelect | Improve this Doc View Source AsType(Type) Declaration public TSelect AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description TSelect | Improve this Doc View Source Cancel(Func<Boolean>) Declaration public TSelect Cancel(Func<bool> cancel) Parameters Type Name Description System.Func < System.Boolean > cancel Returns Type Description TSelect | Improve this Doc View Source CommandTimeout(Int32) Declaration public TSelect CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description TSelect | Improve this Doc View Source Count() Declaration public long Count() Returns Type Description System.Int64 | Improve this Doc View Source Count(out Int64) Declaration public TSelect Count(out long count) Parameters Type Name Description System.Int64 count Returns Type Description TSelect | Improve this Doc View Source CountAsync(CancellationToken) Declaration public Task<long> CountAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source DisableGlobalFilter(String[]) Declaration public TSelect DisableGlobalFilter(params string[] name) Parameters Type Name Description System.String [] name Returns Type Description TSelect | Improve this Doc View Source Distinct() Declaration public TSelect Distinct() Returns Type Description TSelect | Improve this Doc View Source First() Declaration public T1 First() Returns Type Description T1 | Improve this Doc View Source FirstAsync(CancellationToken) Declaration public Task<T1> FirstAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T1> | Improve this Doc View Source ForUpdate(Boolean) Declaration public TSelect ForUpdate(bool noawait = false) Parameters Type Name Description System.Boolean noawait Returns Type Description TSelect | Improve this Doc View Source GetAllFieldExpressionTreeLevel2() Declaration public Select0Provider<TSelect, T1>.GetAllFieldExpressionTreeInfo GetAllFieldExpressionTreeLevel2() Returns Type Description Select0Provider.GetAllFieldExpressionTreeInfo <> | Improve this Doc View Source GetAllFieldExpressionTreeLevelAll() Declaration public Select0Provider<TSelect, T1>.GetAllFieldExpressionTreeInfo GetAllFieldExpressionTreeLevelAll() Returns Type Description Select0Provider.GetAllFieldExpressionTreeInfo <> | Improve this Doc View Source GetExpressionField(Expression, FieldAliasOptions) Declaration protected ReadAnonymousTypeAfInfo GetExpressionField(Expression newexp, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression newexp FieldAliasOptions fieldAlias Returns Type Description ReadAnonymousTypeAfInfo | Improve this Doc View Source GetTableRuleUnions() Declaration protected List<Dictionary<Type, string>> GetTableRuleUnions() Returns Type Description System.Collections.Generic.List < System.Collections.Generic.Dictionary < System.Type , System.String >> | Improve this Doc View Source GroupBy(String, Object) Declaration public TSelect GroupBy(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source Having(String, Object) Declaration public TSelect Having(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source InnerJoin(Expression<Func<T1, Boolean>>) Declaration public TSelect InnerJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description TSelect | Improve this Doc View Source InnerJoin(String, Object) Declaration public TSelect InnerJoin(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Declaration public TSelect InnerJoin<T2>(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description TSelect Type Parameters Name Description T2 | Improve this Doc View Source InternalAvg(Expression) Declaration protected double InternalAvg(Expression exp) Parameters Type Name Description System.Linq.Expressions.Expression exp Returns Type Description System.Double | Improve this Doc View Source InternalAvgAsync(Expression, CancellationToken) Declaration protected Task<double> InternalAvgAsync(Expression exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > | Improve this Doc View Source InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Declaration protected string InternalGetInsertIntoToSql<TTargetEntity>(string tableName, Expression select) Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression select Returns Type Description System.String Type Parameters Name Description TTargetEntity | Improve this Doc View Source InternalGroupBy<TKey, TValue>(Expression) Declaration public ISelectGrouping<TKey, TValue> InternalGroupBy<TKey, TValue>(Expression columns) Parameters Type Name Description System.Linq.Expressions.Expression columns Returns Type Description ISelectGrouping <TKey, TValue> Type Parameters Name Description TKey TValue | Improve this Doc View Source InternalInsertInto<TTargetEntity>(String, Expression) Declaration public int InternalInsertInto<TTargetEntity>(string tableName, Expression select) Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Declaration public Task<int> InternalInsertIntoAsync<TTargetEntity>(string tableName, Expression select, CancellationToken cancellationToken) Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InternalJoin(Expression, SelectTableInfoType) Declaration public TSelect InternalJoin(Expression exp, SelectTableInfoType joinType) Parameters Type Name Description System.Linq.Expressions.Expression exp SelectTableInfoType joinType Returns Type Description TSelect | Improve this Doc View Source InternalJoin<T2>(Expression, SelectTableInfoType) Declaration protected TSelect InternalJoin<T2>(Expression exp, SelectTableInfoType joinType) Parameters Type Name Description System.Linq.Expressions.Expression exp SelectTableInfoType joinType Returns Type Description TSelect Type Parameters Name Description T2 | Improve this Doc View Source InternalMax<TMember>(Expression) Declaration protected TMember InternalMax<TMember>(Expression exp) Parameters Type Name Description System.Linq.Expressions.Expression exp Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source InternalMaxAsync<TMember>(Expression, CancellationToken) Declaration protected Task<TMember> InternalMaxAsync<TMember>(Expression exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source InternalMin<TMember>(Expression) Declaration protected TMember InternalMin<TMember>(Expression exp) Parameters Type Name Description System.Linq.Expressions.Expression exp Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source InternalMinAsync<TMember>(Expression, CancellationToken) Declaration protected Task<TMember> InternalMinAsync<TMember>(Expression exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source InternalOrderBy(Expression) Declaration protected TSelect InternalOrderBy(Expression column) Parameters Type Name Description System.Linq.Expressions.Expression column Returns Type Description TSelect | Improve this Doc View Source InternalOrderByDescending(Expression) Declaration protected TSelect InternalOrderByDescending(Expression column) Parameters Type Name Description System.Linq.Expressions.Expression column Returns Type Description TSelect | Improve this Doc View Source InternalSum(Expression) Declaration protected decimal InternalSum(Expression exp) Parameters Type Name Description System.Linq.Expressions.Expression exp Returns Type Description System.Decimal | Improve this Doc View Source InternalSumAsync(Expression, CancellationToken) Declaration protected Task<decimal> InternalSumAsync(Expression exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > | Improve this Doc View Source InternalToAggregate<TReturn>(Expression) Declaration protected TReturn InternalToAggregate<TReturn>(Expression select) Parameters Type Name Description System.Linq.Expressions.Expression select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Declaration protected Task<TReturn> InternalToAggregateAsync<TReturn>(Expression select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void InternalToChunk<TReturn>(Expression select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source InternalToDataTable(Expression) Declaration protected DataTable InternalToDataTable(Expression select) Parameters Type Name Description System.Linq.Expressions.Expression select Returns Type Description System.Data.DataTable | Improve this Doc View Source InternalToDataTableAsync(Expression, CancellationToken) Declaration protected Task<DataTable> InternalToDataTableAsync(Expression select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source InternalToList<TReturn>(Expression) Declaration public List<TReturn> InternalToList<TReturn>(Expression select) Parameters Type Name Description System.Linq.Expressions.Expression select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source InternalToListAsync<TReturn>(Expression, CancellationToken) Declaration protected Task<List<TReturn>> InternalToListAsync<TReturn>(Expression select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source InternalToSql<TReturn>(Expression, FieldAliasOptions) Declaration protected string InternalToSql<TReturn>(Expression select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source InternalWhere(Expression) Declaration public TSelect InternalWhere(Expression exp) Parameters Type Name Description System.Linq.Expressions.Expression exp Returns Type Description TSelect | Improve this Doc View Source LeftJoin(Expression<Func<T1, Boolean>>) Declaration public TSelect LeftJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description TSelect | Improve this Doc View Source LeftJoin(String, Object) Declaration public TSelect LeftJoin(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Declaration public TSelect LeftJoin<T2>(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description TSelect Type Parameters Name Description T2 | Improve this Doc View Source Limit(Int32) Declaration public TSelect Limit(int limit) Parameters Type Name Description System.Int32 limit Returns Type Description TSelect | Improve this Doc View Source Master() Declaration public TSelect Master() Returns Type Description TSelect | Improve this Doc View Source Offset(Int32) Declaration public TSelect Offset(int offset) Parameters Type Name Description System.Int32 offset Returns Type Description TSelect | Improve this Doc View Source OrderBy(Boolean, String, Object) Declaration public TSelect OrderBy(bool condition, string sql, object parms = null) Parameters Type Name Description System.Boolean condition System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source OrderBy(String, Object) Declaration public TSelect OrderBy(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source OrderByPropertyName(String, Boolean) Declaration public TSelect OrderByPropertyName(string property, bool isAscending = true) Parameters Type Name Description System.String property System.Boolean isAscending Returns Type Description TSelect | Improve this Doc View Source OrderByPropertyNameIf(Boolean, String, Boolean) Declaration public TSelect OrderByPropertyNameIf(bool condition, string property, bool isAscending = true) Parameters Type Name Description System.Boolean condition System.String property System.Boolean isAscending Returns Type Description TSelect | Improve this Doc View Source Page(BasePagingInfo) Declaration public TSelect Page(BasePagingInfo pagingInfo) Parameters Type Name Description BasePagingInfo pagingInfo Returns Type Description TSelect | Improve this Doc View Source Page(Int32, Int32) Declaration public TSelect Page(int pageNumber, int pageSize) Parameters Type Name Description System.Int32 pageNumber System.Int32 pageSize Returns Type Description TSelect | Improve this Doc View Source RawJoin(String) Declaration public TSelect RawJoin(string sql) Parameters Type Name Description System.String sql Returns Type Description TSelect | Improve this Doc View Source RightJoin(Expression<Func<T1, Boolean>>) Declaration public TSelect RightJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description TSelect | Improve this Doc View Source RightJoin(String, Object) Declaration public TSelect RightJoin(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Declaration public TSelect RightJoin<T2>(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description TSelect Type Parameters Name Description T2 | Improve this Doc View Source Skip(Int32) Declaration public TSelect Skip(int offset) Parameters Type Name Description System.Int32 offset Returns Type Description TSelect | Improve this Doc View Source Take(Int32) Declaration public TSelect Take(int limit) Parameters Type Name Description System.Int32 limit Returns Type Description TSelect | Improve this Doc View Source ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Declaration public void ToChunk(int size, Action<FetchCallbackArgs<List<T1>>> done, bool includeNestedMembers = false) Parameters Type Name Description System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <T1>>> done System.Boolean includeNestedMembers | Improve this Doc View Source ToDataTable(String) Declaration public DataTable ToDataTable(string field = null) Parameters Type Name Description System.String field Returns Type Description System.Data.DataTable | Improve this Doc View Source ToDataTableAsync(String, CancellationToken) Declaration public Task<DataTable> ToDataTableAsync(string field, CancellationToken cancellationToken) Parameters Type Name Description System.String field System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ToDelete() Declaration public IDelete<T1> ToDelete() Returns Type Description IDelete <T1> | Improve this Doc View Source ToDictionary<TKey>(Func<T1, TKey>) Declaration public Dictionary<TKey, T1> ToDictionary<TKey>(Func<T1, TKey> keySelector) Parameters Type Name Description System.Func <T1, TKey> keySelector Returns Type Description System.Collections.Generic.Dictionary <TKey, T1> Type Parameters Name Description TKey | Improve this Doc View Source ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Declaration public Dictionary<TKey, TElement> ToDictionary<TKey, TElement>(Func<T1, TKey> keySelector, Func<T1, TElement> elementSelector) Parameters Type Name Description System.Func <T1, TKey> keySelector System.Func <T1, TElement> elementSelector Returns Type Description System.Collections.Generic.Dictionary <TKey, TElement> Type Parameters Name Description TKey TElement | Improve this Doc View Source ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Declaration public Task<Dictionary<TKey, T1>> ToDictionaryAsync<TKey>(Func<T1, TKey> keySelector, CancellationToken cancellationToken) Parameters Type Name Description System.Func <T1, TKey> keySelector System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary <TKey, T1>> Type Parameters Name Description TKey | Improve this Doc View Source ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Declaration public Task<Dictionary<TKey, TElement>> ToDictionaryAsync<TKey, TElement>(Func<T1, TKey> keySelector, Func<T1, TElement> elementSelector, CancellationToken cancellationToken) Parameters Type Name Description System.Func <T1, TKey> keySelector System.Func <T1, TElement> elementSelector System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary <TKey, TElement>> Type Parameters Name Description TKey TElement | Improve this Doc View Source ToList(Boolean) Declaration public virtual List<T1> ToList(bool includeNestedMembers = false) Parameters Type Name Description System.Boolean includeNestedMembers Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source ToList<TTuple>(String) Declaration public List<TTuple> ToList<TTuple>(string field) Parameters Type Name Description System.String field Returns Type Description System.Collections.Generic.List <TTuple> Type Parameters Name Description TTuple | Improve this Doc View Source ToListAsync(Boolean, CancellationToken) Declaration public virtual Task<List<T1>> ToListAsync(bool includeNestedMembers = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Boolean includeNestedMembers System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source ToListAsync<TTuple>(String, CancellationToken) Declaration public Task<List<TTuple>> ToListAsync<TTuple>(string field, CancellationToken cancellationToken) Parameters Type Name Description System.String field System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TTuple>> Type Parameters Name Description TTuple | Improve this Doc View Source ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Declaration protected List<TReturn> ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo af) Parameters Type Name Description ReadAnonymousTypeAfInfo af Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Declaration protected Task<List<TReturn>> ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo af, CancellationToken cancellationToken) Parameters Type Name Description ReadAnonymousTypeAfInfo af System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToOne() Declaration public T1 ToOne() Returns Type Description T1 | Improve this Doc View Source ToOneAsync(CancellationToken) Declaration public Task<T1> ToOneAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T1> | Improve this Doc View Source ToSql(String) Declaration public abstract string ToSql(string field = null) Parameters Type Name Description System.String field Returns Type Description System.String | Improve this Doc View Source ToUpdate() Declaration public IUpdate<T1> ToUpdate() Returns Type Description IUpdate <T1> | Improve this Doc View Source TrackToList(Action<Object>) Declaration public TSelect TrackToList(Action<object> track) Parameters Type Name Description System.Action < System.Object > track Returns Type Description TSelect | Improve this Doc View Source Where(String, Object) Declaration public TSelect Where(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source WhereDynamicFilter(DynamicFilterInfo) Declaration public TSelect WhereDynamicFilter(DynamicFilterInfo filter) Parameters Type Name Description DynamicFilterInfo filter Returns Type Description TSelect | Improve this Doc View Source WhereIf(Boolean, String, Object) Declaration public TSelect WhereIf(bool condition, string sql, object parms = null) Parameters Type Name Description System.Boolean condition System.String sql System.Object parms Returns Type Description TSelect | Improve this Doc View Source WithConnection(DbConnection) Declaration public TSelect WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description TSelect | Improve this Doc View Source WithTransaction(DbTransaction) Declaration public TSelect WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description TSelect Implements ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select10Provider-10.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select10Provider-10.html",
    "title": "Class Select10Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | FreeSql API Docs",
    "keywords": "Class Select10Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1> Select10Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select10Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 Constructors | Improve this Doc View Source Select10Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select10Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.WithSql(String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select11Provider-11.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select11Provider-11.html",
    "title": "Class Select11Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | FreeSql API Docs",
    "keywords": "Class Select11Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1> Select11Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select11Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 Constructors | Improve this Doc View Source Select11Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select11Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.WithSql(String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select12Provider-12.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select12Provider-12.html",
    "title": "Class Select12Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | FreeSql API Docs",
    "keywords": "Class Select12Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1> Select12Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select12Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 Constructors | Improve this Doc View Source Select12Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select12Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.WithSql(String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select13Provider-13.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select13Provider-13.html",
    "title": "Class Select13Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | FreeSql API Docs",
    "keywords": "Class Select13Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1> Select13Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select13Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 Constructors | Improve this Doc View Source Select13Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select13Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.WithSql(String, String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, string sqlT13, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.String sqlT13 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select14Provider-14.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select14Provider-14.html",
    "title": "Class Select14Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | FreeSql API Docs",
    "keywords": "Class Select14Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1> Select14Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select14Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 Constructors | Improve this Doc View Source Select14Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select14Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.WithSql(String, String, String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, string sqlT13, string sqlT14, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.String sqlT13 System.String sqlT14 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select15Provider-15.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select15Provider-15.html",
    "title": "Class Select15Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | FreeSql API Docs",
    "keywords": "Class Select15Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1> Select15Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select15Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class where T15 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 Constructors | Improve this Doc View Source Select15Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select15Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.WithSql(String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, string sqlT13, string sqlT14, string sqlT15, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.String sqlT13 System.String sqlT14 System.String sqlT15 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select16Provider-16.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select16Provider-16.html",
    "title": "Class Select16Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | FreeSql API Docs",
    "keywords": "Class Select16Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1> Select16Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select16Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class where T15 : class where T16 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 Constructors | Improve this Doc View Source Select16Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select16Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, ISelectGroupingAggregate <T16>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, ISelectGroupingAggregate <T16>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, ISelectGroupingAggregate <T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.WithSql(String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, string sqlT13, string sqlT14, string sqlT15, string sqlT16, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.String sqlT13 System.String sqlT14 System.String sqlT15 System.String sqlT16 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select1Provider-1.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select1Provider-1.html",
    "title": "Class Select1Provider<T1> | FreeSql API Docs",
    "keywords": "Class Select1Provider<T1> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1>, T1> Select1Provider<T1> Implements ISelect <T1> ISelect0 < ISelect <T1>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1>, T1>.Having(String, Object) Select0Provider<ISelect<T1>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1>, T1>.RawJoin(String) Select0Provider<ISelect<T1>, T1>.Limit(Int32) Select0Provider<ISelect<T1>, T1>.Master() Select0Provider<ISelect<T1>, T1>.Offset(Int32) Select0Provider<ISelect<T1>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1>, T1>.Skip(Int32) Select0Provider<ISelect<T1>, T1>.Take(Int32) Select0Provider<ISelect<T1>, T1>.Distinct() Select0Provider<ISelect<T1>, T1>.ToDelete() Select0Provider<ISelect<T1>, T1>.ToUpdate() Select0Provider<ISelect<T1>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1>, T1>.AsType(Type) Select0Provider<ISelect<T1>, T1>.ToSql(String) Select0Provider<ISelect<T1>, T1>.Where(String, Object) Select0Provider<ISelect<T1>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1>, T1>.Any() Select0Provider<ISelect<T1>, T1>.Count() Select0Provider<ISelect<T1>, T1>.Count(Int64) Select0Provider<ISelect<T1>, T1>.ToList(Boolean) Select0Provider<ISelect<T1>, T1>.ToOne() Select0Provider<ISelect<T1>, T1>.First() Select0Provider<ISelect<T1>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1>, T1>.ToDataTable(String) Select0Provider<ISelect<T1>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select1Provider<T1> : Select0Provider<ISelect<T1>, T1>, ISelect<T1>, ISelect0<ISelect<T1>, T1>, ISelect0 Type Parameters Name Description T1 Constructors | Improve this Doc View Source Select1Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select1Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>>, out TReturn) Declaration public ISelect<T1> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, TReturn>> select TReturn result Returns Type Description ISelect <T1> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, Boolean>>) Declaration public bool Any(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, Boolean>>, CancellationToken) Declaration public Task<bool> AnyAsync(Expression<Func<T1, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source As(String) Declaration public ISelect<T1> As(string alias) Parameters Type Name Description System.String alias Returns Type Description ISelect <T1> | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, TMember>>) Declaration public double Avg<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, TMember>>, CancellationToken) Declaration public Task<double> AvgAsync<TMember>(Expression<Func<T1, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration public TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, TReturn>>) Declaration public TReturn First<TReturn>(Expression<Func<T1, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, TReturn>>, CancellationToken) Declaration public Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration public Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source From<T2>(Expression<Func<ISelectFromExpression<T1>, T2, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2> From<T2>(Expression<Func<ISelectFromExpression<T1>, T2, ISelectFromExpression<T1>>> exp) where T2 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2> Type Parameters Name Description T2 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class where T15 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class where T15 : class where T16 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 | Improve this Doc View Source From<T2, T3>(Expression<Func<ISelectFromExpression<T1>, T2, T3, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3> From<T2, T3>(Expression<Func<ISelectFromExpression<T1>, T2, T3, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description T2 T3 | Improve this Doc View Source From<T2, T3, T4>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4> From<T2, T3, T4>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description T2 T3 T4 | Improve this Doc View Source From<T2, T3, T4, T5>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5> From<T2, T3, T4, T5>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description T2 T3 T4 T5 | Improve this Doc View Source From<T2, T3, T4, T5, T6>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6> From<T2, T3, T4, T5, T6>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description T2 T3 T4 T5 T6 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7> From<T2, T3, T4, T5, T6, T7>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description T2 T3 T4 T5 T6 T7 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8> From<T2, T3, T4, T5, T6, T7, T8>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> From<T2, T3, T4, T5, T6, T7, T8, T9>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, ISelectFromExpression<T1>>>) Declaration public abstract ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> From<T2, T3, T4, T5, T6, T7, T8, T9, T10>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, TKey>>) Declaration public ISelectGrouping<TKey, T1> GroupBy<TKey>(Expression<Func<T1, TKey>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TKey>> columns Returns Type Description ISelectGrouping <TKey, T1> Type Parameters Name Description TKey | Improve this Doc View Source Include<TNavigate>(Expression<Func<T1, TNavigate>>) Declaration public ISelect<T1> Include<TNavigate>(Expression<Func<T1, TNavigate>> navigateSelector) where TNavigate : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TNavigate>> navigateSelector Returns Type Description ISelect <T1> Type Parameters Name Description TNavigate | Improve this Doc View Source IncludeByPropertyName(String) Declaration public ISelect<T1> IncludeByPropertyName(string property) Parameters Type Name Description System.String property Returns Type Description ISelect <T1> | Improve this Doc View Source IncludeByPropertyNameIf(Boolean, String) Declaration public ISelect<T1> IncludeByPropertyNameIf(bool condition, string property) Parameters Type Name Description System.Boolean condition System.String property Returns Type Description ISelect <T1> | Improve this Doc View Source IncludeIf<TNavigate>(Boolean, Expression<Func<T1, TNavigate>>) Declaration public ISelect<T1> IncludeIf<TNavigate>(bool condition, Expression<Func<T1, TNavigate>> navigateSelector) where TNavigate : class Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, TNavigate>> navigateSelector Returns Type Description ISelect <T1> Type Parameters Name Description TNavigate | Improve this Doc View Source IncludeMany<TNavigate>(Expression<Func<T1, IEnumerable<TNavigate>>>, Action<ISelect<TNavigate>>) Declaration public ISelect<T1> IncludeMany<TNavigate>(Expression<Func<T1, IEnumerable<TNavigate>>> navigateSelector, Action<ISelect<TNavigate>> then = null) where TNavigate : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Collections.Generic.IEnumerable <TNavigate>>> navigateSelector System.Action < ISelect <TNavigate>> then Returns Type Description ISelect <T1> Type Parameters Name Description TNavigate | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, TTargetEntity>>) Declaration public int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, TTargetEntity>>, CancellationToken) Declaration public Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InternalFrom(LambdaExpression) Declaration protected ISelect<T1> InternalFrom(LambdaExpression lambdaExp) Parameters Type Name Description System.Linq.Expressions.LambdaExpression lambdaExp Returns Type Description ISelect <T1> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, TMember>>) Declaration public TMember Max<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, TMember>>, CancellationToken) Declaration public Task<TMember> MaxAsync<TMember>(Expression<Func<T1, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, TMember>>) Declaration public TMember Min<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, TMember>>, CancellationToken) Declaration public Task<TMember> MinAsync<TMember>(Expression<Func<T1, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Boolean, Expression<Func<T1, TMember>>) Declaration public ISelect<T1> OrderBy<TMember>(bool condition, Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, TMember>>) Declaration public ISelect<T1> OrderBy<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Boolean, Expression<Func<T1, TMember>>) Declaration public ISelect<T1> OrderByDescending<TMember>(bool condition, Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, TMember>>) Declaration public ISelect<T1> OrderByDescending<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, TMember>>, Boolean) Declaration public ISelect<T1> OrderByIf<TMember>(bool condition, Expression<Func<T1, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Boolean descending Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderByReflection(LambdaExpression, Boolean) Declaration public void OrderByReflection(LambdaExpression column, bool isDescending) Parameters Type Name Description System.Linq.Expressions.LambdaExpression column System.Boolean isDescending | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, TMember>>) Declaration public decimal Sum<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, TMember>>, CancellationToken) Declaration public Task<decimal> SumAsync<TMember>(Expression<Func<T1, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>>) Declaration public TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>>, CancellationToken) Declaration public Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, TReturn>>) Declaration public DataTable ToDataTable<TReturn>(Expression<Func<T1, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, TReturn>>, CancellationToken) Declaration public Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList(Boolean) Declaration public override List<T1> ToList(bool includeNestedMembers = false) Parameters Type Name Description System.Boolean includeNestedMembers Returns Type Description System.Collections.Generic.List <T1> Overrides FreeSql.Internal.CommonProvider.Select0Provider<FreeSql.ISelect<T1>, T1>.ToList(System.Boolean) | Improve this Doc View Source ToList<TDto>() Declaration public List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, TReturn>>) Declaration public List<TReturn> ToList<TReturn>(Expression<Func<T1, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync(Boolean, CancellationToken) Declaration public override Task<List<T1>> ToListAsync(bool includeNestedMembers = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Boolean includeNestedMembers System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> Overrides FreeSql.Internal.CommonProvider.Select0Provider<FreeSql.ISelect<T1>, T1>.ToListAsync(System.Boolean, System.Threading.CancellationToken) | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, TReturn>>, CancellationToken) Declaration public Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration public Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TDto>() Declaration public TDto ToOne<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, TReturn>>) Declaration public TReturn ToOne<TReturn>(Expression<Func<T1, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, TReturn>>, CancellationToken) Declaration public Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TDto>(CancellationToken) Declaration public Task<TDto> ToOneAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, TReturn>>, FieldAliasOptions) Declaration public string ToSql<TReturn>(Expression<Func<T1, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, Boolean>>) Declaration public ISelect<T1> Where(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description ISelect <T1> | Improve this Doc View Source Where<T2>(Expression<Func<T2, Boolean>>) Declaration public ISelect<T1> Where<T2>(Expression<Func<T2, bool>> exp) where T2 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T2, System.Boolean >> exp Returns Type Description ISelect <T1> Type Parameters Name Description T2 | Improve this Doc View Source Where<T2>(Expression<Func<T1, T2, Boolean>>) Declaration public ISelect<T1> Where<T2>(Expression<Func<T1, T2, bool>> exp) where T2 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1> Type Parameters Name Description T2 | Improve this Doc View Source Where<T2, T3>(Expression<Func<T1, T2, T3, Boolean>>) Declaration public ISelect<T1> Where<T2, T3>(Expression<Func<T1, T2, T3, bool>> exp) where T2 : class where T3 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1> Type Parameters Name Description T2 T3 | Improve this Doc View Source Where<T2, T3, T4>(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration public ISelect<T1> Where<T2, T3, T4>(Expression<Func<T1, T2, T3, T4, bool>> exp) where T2 : class where T3 : class where T4 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1> Type Parameters Name Description T2 T3 T4 | Improve this Doc View Source Where<T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration public ISelect<T1> Where<T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) where T2 : class where T3 : class where T4 : class where T5 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1> Type Parameters Name Description T2 T3 T4 T5 | Improve this Doc View Source WhereCascade(Expression<Func<T1, Boolean>>) Declaration public ISelect<T1> WhereCascade(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description ISelect <T1> | Improve this Doc View Source WhereDynamic(Object, Boolean) Declaration public ISelect<T1> WhereDynamic(object dywhere, bool not = false) Parameters Type Name Description System.Object dywhere System.Boolean not Returns Type Description ISelect <T1> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, Boolean>>) Declaration public ISelect<T1> WhereIf(bool condition, Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description ISelect <T1> | Improve this Doc View Source WithSql(String, Object) Declaration public ISelect<T1> WithSql(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description ISelect <T1> Implements ISelect<T1> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select2Provider-2.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select2Provider-2.html",
    "title": "Class Select2Provider<T1, T2> | FreeSql API Docs",
    "keywords": "Class Select2Provider<T1, T2> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2>, T1> Select2Provider<T1, T2> Implements ISelect <T1, T2> ISelect0 < ISelect <T1, T2>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2>, T1>.Master() Select0Provider<ISelect<T1, T2>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2>, T1>.Distinct() Select0Provider<ISelect<T1, T2>, T1>.ToDelete() Select0Provider<ISelect<T1, T2>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2>, T1>.Any() Select0Provider<ISelect<T1, T2>, T1>.Count() Select0Provider<ISelect<T1, T2>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2>, T1>.ToOne() Select0Provider<ISelect<T1, T2>, T1>.First() Select0Provider<ISelect<T1, T2>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select2Provider<T1, T2> : Select0Provider<ISelect<T1, T2>, T1>, ISelect<T1, T2>, ISelect0<ISelect<T1, T2>, T1>, ISelect0 where T2 : class Type Parameters Name Description T1 T2 Constructors | Improve this Doc View Source Select2Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select2Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>>, out TReturn) Declaration ISelect<T1, T2> ISelect<T1, T2>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.Any(Expression<Func<T1, T2, Boolean>>) Declaration bool ISelect<T1, T2>.Any(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2>.Any(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration bool ISelect<T1, T2>.Any(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2>.AnyAsync(Expression<Func<T1, T2, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2>.AnyAsync(Expression<Func<T1, T2, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2>.AnyAsync(Expression<Func<HzyTuple<T1, T2>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2>.AnyAsync(Expression<Func<HzyTuple<T1, T2>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2>.Avg<TMember>(Expression<Func<T1, T2, TMember>>) Declaration double ISelect<T1, T2>.Avg<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration double ISelect<T1, T2>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.AvgAsync<TMember>(Expression<Func<T1, T2, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2>.AvgAsync<TMember>(Expression<Func<T1, T2, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.First<TDto>() Declaration TDto ISelect<T1, T2>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2>.First<TReturn>(Expression<Func<T1, T2, TReturn>>) Declaration TReturn ISelect<T1, T2>.First<TReturn>(Expression<Func<T1, T2, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.First<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>) Declaration TReturn ISelect<T1, T2>.First<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.FirstAsync<TReturn>(Expression<Func<T1, T2, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2>.FirstAsync<TReturn>(Expression<Func<T1, T2, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2>.GroupBy<TKey>(Expression<Func<T1, T2, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2>> ISelect<T1, T2>.GroupBy<TKey>(Expression<Func<T1, T2, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2>> ISelect<T1, T2>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2>.InnerJoin(Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.InnerJoin(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.InnerJoin(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.InnerJoin(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, TTargetEntity>>) Declaration int ISelect<T1, T2>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2>, TTargetEntity>>) Declaration int ISelect<T1, T2>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2>.LeftJoin(Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.LeftJoin(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.LeftJoin(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.LeftJoin(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.Max<TMember>(Expression<Func<T1, T2, TMember>>) Declaration TMember ISelect<T1, T2>.Max<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.Max<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration TMember ISelect<T1, T2>.Max<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.MaxAsync<TMember>(Expression<Func<T1, T2, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2>.MaxAsync<TMember>(Expression<Func<T1, T2, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.Min<TMember>(Expression<Func<T1, T2, TMember>>) Declaration TMember ISelect<T1, T2>.Min<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.Min<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration TMember ISelect<T1, T2>.Min<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.MinAsync<TMember>(Expression<Func<T1, T2, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2>.MinAsync<TMember>(Expression<Func<T1, T2, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.OrderBy<TMember>(Expression<Func<T1, T2, TMember>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.OrderBy<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.OrderByDescending<TMember>(Expression<Func<T1, T2, TMember>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.OrderByDescending<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, TMember>>, Boolean) Declaration ISelect<T1, T2> ISelect<T1, T2>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2>, TMember>>, Boolean) Declaration ISelect<T1, T2> ISelect<T1, T2>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.RightJoin(Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.RightJoin(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.RightJoin(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.RightJoin(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.Sum<TMember>(Expression<Func<T1, T2, TMember>>) Declaration decimal ISelect<T1, T2>.Sum<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration decimal ISelect<T1, T2>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.SumAsync<TMember>(Expression<Func<T1, T2, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2>.SumAsync<TMember>(Expression<Func<T1, T2, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>>) Declaration TReturn ISelect<T1, T2>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToDataTable<TReturn>(Expression<Func<T1, T2, TReturn>>) Declaration DataTable ISelect<T1, T2>.ToDataTable<TReturn>(Expression<Func<T1, T2, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>) Declaration DataTable ISelect<T1, T2>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2>.ToList<TReturn>(Expression<Func<T1, T2, TReturn>>) Declaration List<TReturn> ISelect<T1, T2>.ToList<TReturn>(Expression<Func<T1, T2, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToListAsync<TReturn>(Expression<Func<T1, T2, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2>.ToListAsync<TReturn>(Expression<Func<T1, T2, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2>.ToOne<TReturn>(Expression<Func<T1, T2, TReturn>>) Declaration TReturn ISelect<T1, T2>.ToOne<TReturn>(Expression<Func<T1, T2, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>) Declaration TReturn ISelect<T1, T2>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToOneAsync<TReturn>(Expression<Func<T1, T2, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2>.ToOneAsync<TReturn>(Expression<Func<T1, T2, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToSql<TReturn>(Expression<Func<T1, T2, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2>.ToSql<TReturn>(Expression<Func<T1, T2, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2>.Where(Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.Where(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.Where(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.Where(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.WhereIf(Boolean, Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.WhereIf(bool condition, Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> ISelect<T1, T2>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source ISelect<T1, T2>.WithSql(String, String, Object) Declaration ISelect<T1, T2> ISelect<T1, T2>.WithSql(string sqlT1, string sqlT2, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.Object parms Returns Type Description ISelect <T1, T2> Implements ISelect<T1, T2> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select3Provider-3.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select3Provider-3.html",
    "title": "Class Select3Provider<T1, T2, T3> | FreeSql API Docs",
    "keywords": "Class Select3Provider<T1, T2, T3> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3>, T1> Select3Provider<T1, T2, T3> Implements ISelect <T1, T2, T3> ISelect0 < ISelect <T1, T2, T3>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3>, T1>.Master() Select0Provider<ISelect<T1, T2, T3>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3>, T1>.Any() Select0Provider<ISelect<T1, T2, T3>, T1>.Count() Select0Provider<ISelect<T1, T2, T3>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3>, T1>.First() Select0Provider<ISelect<T1, T2, T3>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select3Provider<T1, T2, T3> : Select0Provider<ISelect<T1, T2, T3>, T1>, ISelect<T1, T2, T3>, ISelect0<ISelect<T1, T2, T3>, T1>, ISelect0 where T2 : class where T3 : class Type Parameters Name Description T1 T2 T3 Constructors | Improve this Doc View Source Select3Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select3Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.Any(Expression<Func<T1, T2, T3, Boolean>>) Declaration bool ISelect<T1, T2, T3>.Any(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3>.Any(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration bool ISelect<T1, T2, T3>.Any(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3>.AnyAsync(Expression<Func<T1, T2, T3, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3>.AnyAsync(Expression<Func<T1, T2, T3, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3>.Avg<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration double ISelect<T1, T2, T3>.Avg<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration double ISelect<T1, T2, T3>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.First<TDto>() Declaration TDto ISelect<T1, T2, T3>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3>.First<TReturn>(Expression<Func<T1, T2, T3, TReturn>>) Declaration TReturn ISelect<T1, T2, T3>.First<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3>.GroupBy<TKey>(Expression<Func<T1, T2, T3, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3>> ISelect<T1, T2, T3>.GroupBy<TKey>(Expression<Func<T1, T2, T3, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3>> ISelect<T1, T2, T3>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3>.InnerJoin(Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.InnerJoin(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, TTargetEntity>>) Declaration int ISelect<T1, T2, T3>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3>.LeftJoin(Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.LeftJoin(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.Max<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration TMember ISelect<T1, T2, T3>.Max<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration TMember ISelect<T1, T2, T3>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.Min<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration TMember ISelect<T1, T2, T3>.Min<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration TMember ISelect<T1, T2, T3>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.MinAsync<TMember>(Expression<Func<T1, T2, T3, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3>.MinAsync<TMember>(Expression<Func<T1, T2, T3, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.OrderBy<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.OrderBy<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, TMember>>, Boolean) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.RightJoin(Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.RightJoin(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.Sum<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration decimal ISelect<T1, T2, T3>.Sum<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration decimal ISelect<T1, T2, T3>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.SumAsync<TMember>(Expression<Func<T1, T2, T3, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3>.SumAsync<TMember>(Expression<Func<T1, T2, T3, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, TReturn>>) Declaration DataTable ISelect<T1, T2, T3>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3>.ToList<TReturn>(Expression<Func<T1, T2, T3, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3>.ToList<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3>.ToOne<TReturn>(Expression<Func<T1, T2, T3, TReturn>>) Declaration TReturn ISelect<T1, T2, T3>.ToOne<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToSql<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3>.ToSql<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3>.Where(Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.Where(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.Where(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.Where(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.WhereIf(Boolean, Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.WhereIf(bool condition, Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source ISelect<T1, T2, T3>.WithSql(String, String, String, Object) Declaration ISelect<T1, T2, T3> ISelect<T1, T2, T3>.WithSql(string sqlT1, string sqlT2, string sqlT3, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.Object parms Returns Type Description ISelect <T1, T2, T3> Implements ISelect<T1, T2, T3> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select4Provider-4.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select4Provider-4.html",
    "title": "Class Select4Provider<T1, T2, T3, T4> | FreeSql API Docs",
    "keywords": "Class Select4Provider<T1, T2, T3, T4> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4>, T1> Select4Provider<T1, T2, T3, T4> Implements ISelect <T1, T2, T3, T4> ISelect0 < ISelect <T1, T2, T3, T4>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select4Provider<T1, T2, T3, T4> : Select0Provider<ISelect<T1, T2, T3, T4>, T1>, ISelect<T1, T2, T3, T4>, ISelect0<ISelect<T1, T2, T3, T4>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class Type Parameters Name Description T1 T2 T3 T4 Constructors | Improve this Doc View Source Select4Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select4Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Any(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4>.Any(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4>.AnyAsync(Expression<Func<T1, T2, T3, T4, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4>.AnyAsync(Expression<Func<T1, T2, T3, T4, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration double ISelect<T1, T2, T3, T4>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration double ISelect<T1, T2, T3, T4>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4>.First<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4>.First<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4>> ISelect<T1, T2, T3, T4>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4>> ISelect<T1, T2, T3, T4>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4>.InnerJoin(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.InnerJoin(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4>.LeftJoin(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.LeftJoin(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Max<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4>.Max<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Min<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4>.Min<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.RightJoin(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.RightJoin(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Where(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.Where(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source ISelect<T1, T2, T3, T4>.WithSql(String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4> ISelect<T1, T2, T3, T4>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4> Implements ISelect<T1, T2, T3, T4> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select5Provider-5.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select5Provider-5.html",
    "title": "Class Select5Provider<T1, T2, T3, T4, T5> | FreeSql API Docs",
    "keywords": "Class Select5Provider<T1, T2, T3, T4, T5> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5>, T1> Select5Provider<T1, T2, T3, T4, T5> Implements ISelect <T1, T2, T3, T4, T5> ISelect0 < ISelect <T1, T2, T3, T4, T5>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select5Provider<T1, T2, T3, T4, T5> : Select0Provider<ISelect<T1, T2, T3, T4, T5>, T1>, ISelect<T1, T2, T3, T4, T5>, ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class Type Parameters Name Description T1 T2 T3 T4 T5 Constructors | Improve this Doc View Source Select5Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select5Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Any(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5>.Any(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5>> ISelect<T1, T2, T3, T4, T5>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5>> ISelect<T1, T2, T3, T4, T5>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Where(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.Where(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5>.WithSql(String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5> ISelect<T1, T2, T3, T4, T5>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5> Implements ISelect<T1, T2, T3, T4, T5> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select6Provider-6.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select6Provider-6.html",
    "title": "Class Select6Provider<T1, T2, T3, T4, T5, T6> | FreeSql API Docs",
    "keywords": "Class Select6Provider<T1, T2, T3, T4, T5, T6> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6>, T1> Select6Provider<T1, T2, T3, T4, T5, T6> Implements ISelect <T1, T2, T3, T4, T5, T6> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select6Provider<T1, T2, T3, T4, T5, T6> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6>, T1>, ISelect<T1, T2, T3, T4, T5, T6>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 Constructors | Improve this Doc View Source Select6Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select6Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6>> ISelect<T1, T2, T3, T4, T5, T6>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6>> ISelect<T1, T2, T3, T4, T5, T6>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6>.WithSql(String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6> ISelect<T1, T2, T3, T4, T5, T6>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Implements ISelect<T1, T2, T3, T4, T5, T6> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select7Provider-7.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select7Provider-7.html",
    "title": "Class Select7Provider<T1, T2, T3, T4, T5, T6, T7> | FreeSql API Docs",
    "keywords": "Class Select7Provider<T1, T2, T3, T4, T5, T6, T7> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7>, T1> Select7Provider<T1, T2, T3, T4, T5, T6, T7> Implements ISelect <T1, T2, T3, T4, T5, T6, T7> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select7Provider<T1, T2, T3, T4, T5, T6, T7> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 Constructors | Improve this Doc View Source Select7Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select7Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7>> ISelect<T1, T2, T3, T4, T5, T6, T7>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7>> ISelect<T1, T2, T3, T4, T5, T6, T7>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7>.WithSql(String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect<T1, T2, T3, T4, T5, T6, T7>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Implements ISelect<T1, T2, T3, T4, T5, T6, T7> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select8Provider-8.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select8Provider-8.html",
    "title": "Class Select8Provider<T1, T2, T3, T4, T5, T6, T7, T8> | FreeSql API Docs",
    "keywords": "Class Select8Provider<T1, T2, T3, T4, T5, T6, T7, T8> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8>, T1> Select8Provider<T1, T2, T3, T4, T5, T6, T7, T8> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select8Provider<T1, T2, T3, T4, T5, T6, T7, T8> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 Constructors | Improve this Doc View Source Select8Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select8Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.WithSql(String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect<T1, T2, T3, T4, T5, T6, T7, T8>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.Select9Provider-9.html": {
    "href": "api/FreeSql.Internal.CommonProvider.Select9Provider-9.html",
    "title": "Class Select9Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9> | FreeSql API Docs",
    "keywords": "Class Select9Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inheritance System.Object Select0Provider Select0Provider < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1> Select9Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9> Implements ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect0 < ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1> ISelect0 Inherited Members Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.TrackToList(Action<Object>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Cancel(Func<Boolean>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.WithTransaction(DbTransaction) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.WithConnection(DbConnection) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.CommandTimeout(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.GroupBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Having(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.RightJoin(Expression<Func<T1, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InnerJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.LeftJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.RightJoin(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.RawJoin(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Limit(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Master() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Offset(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.OrderBy(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.OrderBy(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Page(Int32, Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Page(BasePagingInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Skip(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Take(Int32) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Distinct() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDelete() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToUpdate() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.GetTableRuleUnions() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.AsTable(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.AsAlias(Func<Type, String, String>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.AsType(Type) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToSql(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Where(String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.WhereIf(Boolean, String, Object) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.OrderByPropertyName(String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.WhereDynamicFilter(DynamicFilterInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.DisableGlobalFilter(String[]) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ForUpdate(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Any() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Count() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Count(Int64) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToList(Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToOne() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.First() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.AnyAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.CountAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToListAsync(Boolean, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToOneAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.FirstAsync(CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDataTable(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToList<TTuple>(String) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalToChunk<TReturn>(Expression, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDictionary<TKey>(Func<T1, TKey>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToListMapReader<TReturn>(ReadAnonymousTypeAfInfo) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.GetExpressionField(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.GetAllFieldExpressionTreeLevelAll() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.GetAllFieldExpressionTreeLevel2() Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalAvg(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalMax<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalMin<TMember>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalSum(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalGroupBy<TKey, TValue>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalJoin(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalJoin<T2>(Expression, SelectTableInfoType) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalOrderBy(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalOrderByDescending(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalToList<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalToSql<TReturn>(Expression, FieldAliasOptions) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalGetInsertIntoToSql<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalInsertInto<TTargetEntity>(String, Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalToDataTable(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalToAggregate<TReturn>(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalWhere(Expression) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDataTableAsync(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToListAsync<TTuple>(String, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToListMapReaderAsync<TReturn>(ReadAnonymousTypeAfInfo, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalAvgAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalMaxAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalMinAsync<TMember>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalSumAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalToListAsync<TReturn>(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalInsertIntoAsync<TTargetEntity>(String, Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalToDataTableAsync(Expression, CancellationToken) Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InternalToAggregateAsync<TReturn>(Expression, CancellationToken) Select0Provider._limit Select0Provider._skip Select0Provider._select Select0Provider._orderby Select0Provider._groupby Select0Provider._having Select0Provider._where Select0Provider._params Select0Provider._tables Select0Provider._tableRules Select0Provider._aliasRule Select0Provider._tosqlAppendContent Select0Provider._join Select0Provider._orm Select0Provider._commonUtils Select0Provider._commonExpression Select0Provider._transaction Select0Provider._connection Select0Provider._commandTimeout Select0Provider._trackToList Select0Provider._includeToList Select0Provider._includeToListAsync Select0Provider._includeInfo Select0Provider._distinct Select0Provider._selectExpression Select0Provider._whereGlobalFilter Select0Provider._cancel Select0Provider.CopyData(Select0Provider, Select0Provider, ReadOnlyCollection<ParameterExpression>) Select0Provider.ConvertStringPropertyToExpression(String, Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class Select9Provider<T1, T2, T3, T4, T5, T6, T7, T8, T9> : Select0Provider<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>, ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 Constructors | Improve this Doc View Source Select9Provider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public Select9Provider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Methods | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration public void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn Explicit Interface Implementations | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration bool ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>, CancellationToken) Declaration Task<bool> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration double ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, CancellationToken) Declaration Task<double> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.First<TDto>() Declaration TDto ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.FirstAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>> Type Parameters Name Description TKey | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>>) Declaration int ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>>, CancellationToken) Declaration Task<int> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>> select, CancellationToken cancellationToken) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration TMember ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, CancellationToken) Declaration Task<TMember> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, bool descending) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration decimal ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, CancellationToken) Declaration Task<decimal> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>) Declaration DataTable ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, CancellationToken) Declaration Task<DataTable> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToList<TDto>() Declaration List<TDto> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>) Declaration List<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToListAsync<TDto>(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>) Declaration TReturn ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, CancellationToken) Declaration Task<TReturn> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, CancellationToken cancellationToken) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, FieldAliasOptions) Declaration string ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, FieldAliasOptions fieldAlias) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.WithSql(String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>.WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, object parms) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Implements ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> ISelect0<TSelect, T1> ISelect0 Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.Internal.CommonProvider.SelectGroupingProvider.html": {
    "href": "api/FreeSql.Internal.CommonProvider.SelectGroupingProvider.html",
    "title": "Class SelectGroupingProvider | FreeSql API Docs",
    "keywords": "Class SelectGroupingProvider Inheritance System.Object BaseDiyMemberExpression SelectGroupingProvider SelectGroupingProvider<TKey, TValue> Inherited Members BaseDiyMemberExpression._lambdaParameter BaseDiyMemberExpression._map BaseDiyMemberExpression._field System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public class SelectGroupingProvider : BaseDiyMemberExpression Constructors | Improve this Doc View Source SelectGroupingProvider(IFreeSql, Select0Provider, ReadAnonymousTypeInfo, String, CommonExpression, List<SelectTableInfo>) Declaration public SelectGroupingProvider(IFreeSql orm, Select0Provider select, ReadAnonymousTypeInfo map, string field, CommonExpression comonExp, List<SelectTableInfo> tables) Parameters Type Name Description IFreeSql orm Select0Provider select ReadAnonymousTypeInfo map System.String field CommonExpression comonExp System.Collections.Generic.List < SelectTableInfo > tables Fields | Improve this Doc View Source _comonExp Declaration public CommonExpression _comonExp Field Value Type Description CommonExpression | Improve this Doc View Source _groupByLimit Declaration public int _groupByLimit Field Value Type Description System.Int32 | Improve this Doc View Source _groupBySkip Declaration public int _groupBySkip Field Value Type Description System.Int32 | Improve this Doc View Source _orm Declaration public IFreeSql _orm Field Value Type Description IFreeSql | Improve this Doc View Source _select Declaration public Select0Provider _select Field Value Type Description Select0Provider | Improve this Doc View Source _tables Declaration public List<SelectTableInfo> _tables Field Value Type Description System.Collections.Generic.List < SelectTableInfo > Methods | Improve this Doc View Source InternalHaving(Expression) Declaration public void InternalHaving(Expression exp) Parameters Type Name Description System.Linq.Expressions.Expression exp | Improve this Doc View Source InternalOrderBy(Expression, Boolean) Declaration public void InternalOrderBy(Expression exp, bool isDescending) Parameters Type Name Description System.Linq.Expressions.Expression exp System.Boolean isDescending | Improve this Doc View Source InternalToKeyValuePairs(Expression, Type) Declaration public IEnumerable<KeyValuePair<object, object>> InternalToKeyValuePairs(Expression elementSelector, Type elementType) Parameters Type Name Description System.Linq.Expressions.Expression elementSelector System.Type elementType Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.Object , System.Object >> | Improve this Doc View Source InternalToList(Expression, Type) Declaration public object InternalToList(Expression select, Type elementType) Parameters Type Name Description System.Linq.Expressions.Expression select System.Type elementType Returns Type Description System.Object | Improve this Doc View Source InternalToSql(Expression, FieldAliasOptions) Declaration public string InternalToSql(Expression select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression select FieldAliasOptions fieldAlias Returns Type Description System.String | Improve this Doc View Source InternalToSql(String) Declaration public string InternalToSql(string field) Parameters Type Name Description System.String field Returns Type Description System.String | Improve this Doc View Source ParseExp(Expression[]) Declaration public override string ParseExp(Expression[] members) Parameters Type Name Description System.Linq.Expressions.Expression [] members Returns Type Description System.String Overrides BaseDiyMemberExpression.ParseExp(Expression[])"
  },
  "api/FreeSql.Internal.CommonProvider.SelectGroupingProvider-2.html": {
    "href": "api/FreeSql.Internal.CommonProvider.SelectGroupingProvider-2.html",
    "title": "Class SelectGroupingProvider<TKey, TValue> | FreeSql API Docs",
    "keywords": "Class SelectGroupingProvider<TKey, TValue> Inheritance System.Object BaseDiyMemberExpression SelectGroupingProvider SelectGroupingProvider<TKey, TValue> Implements ISelectGrouping <TKey, TValue> Inherited Members SelectGroupingProvider._orm SelectGroupingProvider._select SelectGroupingProvider._comonExp SelectGroupingProvider._tables SelectGroupingProvider._groupByLimit SelectGroupingProvider._groupBySkip SelectGroupingProvider.ParseExp(Expression[]) SelectGroupingProvider.InternalHaving(Expression) SelectGroupingProvider.InternalOrderBy(Expression, Boolean) SelectGroupingProvider.InternalToList(Expression, Type) SelectGroupingProvider.InternalToKeyValuePairs(Expression, Type) SelectGroupingProvider.InternalToSql(Expression, FieldAliasOptions) SelectGroupingProvider.InternalToSql(String) BaseDiyMemberExpression._lambdaParameter BaseDiyMemberExpression._map BaseDiyMemberExpression._field System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public class SelectGroupingProvider<TKey, TValue> : SelectGroupingProvider, ISelectGrouping<TKey, TValue> Type Parameters Name Description TKey TValue Constructors | Improve this Doc View Source SelectGroupingProvider(IFreeSql, Select0Provider, ReadAnonymousTypeInfo, String, CommonExpression, List<SelectTableInfo>) Declaration public SelectGroupingProvider(IFreeSql orm, Select0Provider select, ReadAnonymousTypeInfo map, string field, CommonExpression comonExp, List<SelectTableInfo> tables) Parameters Type Name Description IFreeSql orm Select0Provider select ReadAnonymousTypeInfo map System.String field CommonExpression comonExp System.Collections.Generic.List < SelectTableInfo > tables Methods | Improve this Doc View Source Count() Declaration public long Count() Returns Type Description System.Int64 | Improve this Doc View Source Count(out Int64) Declaration public ISelectGrouping<TKey, TValue> Count(out long count) Parameters Type Name Description System.Int64 count Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source CountAsync(CancellationToken) Declaration public Task<long> CountAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source Having(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, Boolean>>) Declaration public ISelectGrouping<TKey, TValue> Having(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, System.Boolean >> exp Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Limit(Int32) Declaration public ISelectGrouping<TKey, TValue> Limit(int limit) Parameters Type Name Description System.Int32 limit Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Offset(Int32) Declaration public ISelectGrouping<TKey, TValue> Offset(int offset) Parameters Type Name Description System.Int32 offset Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source OrderBy<TMember>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TMember>>) Declaration public ISelectGrouping<TKey, TValue> OrderBy<TMember>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TMember>> column Returns Type Description ISelectGrouping <TKey, TValue> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TMember>>) Declaration public ISelectGrouping<TKey, TValue> OrderByDescending<TMember>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TMember>> column Returns Type Description ISelectGrouping <TKey, TValue> Type Parameters Name Description TMember | Improve this Doc View Source Page(BasePagingInfo) Declaration public ISelectGrouping<TKey, TValue> Page(BasePagingInfo pagingInfo) Parameters Type Name Description BasePagingInfo pagingInfo Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Page(Int32, Int32) Declaration public ISelectGrouping<TKey, TValue> Page(int pageNumber, int pageSize) Parameters Type Name Description System.Int32 pageNumber System.Int32 pageSize Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Select<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>>) Declaration public List<TReturn> Select<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source Skip(Int32) Declaration public ISelectGrouping<TKey, TValue> Skip(int offset) Parameters Type Name Description System.Int32 offset Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Take(Int32) Declaration public ISelectGrouping<TKey, TValue> Take(int limit) Parameters Type Name Description System.Int32 limit Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source ToDictionary<TElement>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TElement>>) Declaration public Dictionary<TKey, TElement> ToDictionary<TElement>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TElement>> elementSelector) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TElement>> elementSelector Returns Type Description System.Collections.Generic.Dictionary <TKey, TElement> Type Parameters Name Description TElement | Improve this Doc View Source ToDictionaryAsync<TElement>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TElement>>, CancellationToken) Declaration public Task<Dictionary<TKey, TElement>> ToDictionaryAsync<TElement>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TElement>> elementSelector, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TElement>> elementSelector System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary <TKey, TElement>> Type Parameters Name Description TElement | Improve this Doc View Source ToList<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>>) Declaration public List<TReturn> ToList<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>>, CancellationToken) Declaration public Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql(String) Declaration public string ToSql(string field) Parameters Type Name Description System.String field Returns Type Description System.String | Improve this Doc View Source ToSql<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>>, FieldAliasOptions) Declaration public string ToSql<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn Implements ISelectGrouping<TKey, TValue>"
  },
  "api/FreeSql.Internal.CommonProvider.UpdateProvider-1.html": {
    "href": "api/FreeSql.Internal.CommonProvider.UpdateProvider-1.html",
    "title": "Class UpdateProvider<T1> | FreeSql API Docs",
    "keywords": "Class UpdateProvider<T1> Inheritance System.Object UpdateProvider<T1> Implements IUpdate <T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.CommonProvider Assembly : FreeSql.dll Syntax public abstract class UpdateProvider<T1> : IUpdate<T1> Type Parameters Name Description T1 Constructors | Improve this Doc View Source UpdateProvider(IFreeSql, CommonUtils, CommonExpression, Object) Declaration public UpdateProvider(IFreeSql orm, CommonUtils commonUtils, CommonExpression commonExpression, object dywhere) Parameters Type Name Description IFreeSql orm CommonUtils commonUtils CommonExpression commonExpression System.Object dywhere Fields | Improve this Doc View Source _auditValueChangedDict Declaration public Dictionary<string, bool> _auditValueChangedDict Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Boolean > | Improve this Doc View Source _batchAutoTransaction Declaration public bool _batchAutoTransaction Field Value Type Description System.Boolean | Improve this Doc View Source _batchParameterLimit Declaration public int _batchParameterLimit Field Value Type Description System.Int32 | Improve this Doc View Source _batchProgress Declaration public Action<BatchProgressStatus<T1>> _batchProgress Field Value Type Description System.Action < BatchProgressStatus <T1>> | Improve this Doc View Source _batchRowsLimit Declaration public int _batchRowsLimit Field Value Type Description System.Int32 | Improve this Doc View Source _commandTimeout Declaration public int _commandTimeout Field Value Type Description System.Int32 | Improve this Doc View Source _commonExpression Declaration public CommonExpression _commonExpression Field Value Type Description CommonExpression | Improve this Doc View Source _commonUtils Declaration public CommonUtils _commonUtils Field Value Type Description CommonUtils | Improve this Doc View Source _connection Declaration public DbConnection _connection Field Value Type Description System.Data.Common.DbConnection | Improve this Doc View Source _ignore Declaration public Dictionary<string, bool> _ignore Field Value Type Description System.Collections.Generic.Dictionary < System.String , System.Boolean > | Improve this Doc View Source _interceptSql Declaration public Action<StringBuilder> _interceptSql Field Value Type Description System.Action < System.Text.StringBuilder > | Improve this Doc View Source _noneParameter Declaration public bool _noneParameter Field Value Type Description System.Boolean | Improve this Doc View Source _orm Declaration public IFreeSql _orm Field Value Type Description IFreeSql | Improve this Doc View Source _params Declaration public List<DbParameter> _params Field Value Type Description System.Collections.Generic.List < System.Data.Common.DbParameter > | Improve this Doc View Source _paramsSource Declaration public List<DbParameter> _paramsSource Field Value Type Description System.Collections.Generic.List < System.Data.Common.DbParameter > | Improve this Doc View Source _set Declaration public StringBuilder _set Field Value Type Description System.Text.StringBuilder | Improve this Doc View Source _setIncr Declaration public StringBuilder _setIncr Field Value Type Description System.Text.StringBuilder | Improve this Doc View Source _source Declaration public List<T1> _source Field Value Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source _table Declaration public TableInfo _table Field Value Type Description TableInfo | Improve this Doc View Source _tableRule Declaration public Func<string, string> _tableRule Field Value Type Description System.Func < System.String , System.String > | Improve this Doc View Source _tempPrimarys Declaration public ColumnInfo[] _tempPrimarys Field Value Type Description ColumnInfo [] | Improve this Doc View Source _transaction Declaration public DbTransaction _transaction Field Value Type Description System.Data.Common.DbTransaction | Improve this Doc View Source _updateVersionValue Declaration public byte[] _updateVersionValue Field Value Type Description System.Byte [] | Improve this Doc View Source _where Declaration public StringBuilder _where Field Value Type Description System.Text.StringBuilder | Improve this Doc View Source _whereGlobalFilter Declaration public List<GlobalFilter.Item> _whereGlobalFilter Field Value Type Description System.Collections.Generic.List < GlobalFilter.Item > Methods | Improve this Doc View Source AsTable(Func<String, String>) Declaration public IUpdate<T1> AsTable(Func<string, string> tableRule) Parameters Type Name Description System.Func < System.String , System.String > tableRule Returns Type Description IUpdate <T1> | Improve this Doc View Source AsType(Type) Declaration public IUpdate<T1> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IUpdate <T1> | Improve this Doc View Source AuditDataValue(Object, T1, IFreeSql, TableInfo, Dictionary<String, Boolean>) Declaration public static void AuditDataValue(object sender, T1 data, IFreeSql orm, TableInfo table, Dictionary<string, bool> changedDict) Parameters Type Name Description System.Object sender T1 data IFreeSql orm TableInfo table System.Collections.Generic.Dictionary < System.String , System.Boolean > changedDict | Improve this Doc View Source AuditDataValue(Object, IEnumerable<T1>, IFreeSql, TableInfo, Dictionary<String, Boolean>) Declaration public static void AuditDataValue(object sender, IEnumerable<T1> data, IFreeSql orm, TableInfo table, Dictionary<string, bool> changedDict) Parameters Type Name Description System.Object sender System.Collections.Generic.IEnumerable <T1> data IFreeSql orm TableInfo table System.Collections.Generic.Dictionary < System.String , System.Boolean > changedDict | Improve this Doc View Source BatchOptions(Int32, Int32, Boolean) Declaration public virtual IUpdate<T1> BatchOptions(int rowsLimit, int parameterLimit, bool autoTransaction = true) Parameters Type Name Description System.Int32 rowsLimit System.Int32 parameterLimit System.Boolean autoTransaction Returns Type Description IUpdate <T1> | Improve this Doc View Source BatchProgress(Action<BatchProgressStatus<T1>>) Declaration public IUpdate<T1> BatchProgress(Action<BatchProgressStatus<T1>> callback) Parameters Type Name Description System.Action < BatchProgressStatus <T1>> callback Returns Type Description IUpdate <T1> | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source CommandTimeout(Int32) Declaration public IUpdate<T1> CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description IUpdate <T1> | Improve this Doc View Source DisableGlobalFilter(String[]) Declaration public IUpdate<T1> DisableGlobalFilter(params string[] name) Parameters Type Name Description System.String [] name Returns Type Description IUpdate <T1> | Improve this Doc View Source ExecuteAffrows() Declaration public abstract int ExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public abstract Task<int> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteUpdated() Declaration public abstract List<T1> ExecuteUpdated() Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source ExecuteUpdatedAsync(CancellationToken) Declaration public abstract Task<List<T1>> ExecuteUpdatedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source IgnoreCanUpdate() AsType, Ctor, ClearData 三处地方需要重新加载 Declaration protected void IgnoreCanUpdate() | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) Declaration public IUpdate<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description IUpdate <T1> | Improve this Doc View Source IgnoreColumns(String[]) Declaration public IUpdate<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description IUpdate <T1> | Improve this Doc View Source NoneParameter(Boolean) Declaration public IUpdate<T1> NoneParameter(bool isNotCommandParameter = true) Parameters Type Name Description System.Boolean isNotCommandParameter Returns Type Description IUpdate <T1> | Improve this Doc View Source RawExecuteAffrows() Declaration protected int RawExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source RawExecuteAffrowsAsync(CancellationToken) Declaration protected Task<int> RawExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source RawExecuteUpdated() Declaration protected abstract List<T1> RawExecuteUpdated() Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source RawExecuteUpdatedAsync(CancellationToken) Declaration protected abstract Task<List<T1>> RawExecuteUpdatedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>) Declaration public IUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> exp Returns Type Description IUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>, TMember) Declaration public IUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column TMember value Returns Type Description IUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetDto(Object) Declaration public IUpdate<T1> SetDto(object dto) Parameters Type Name Description System.Object dto Returns Type Description IUpdate <T1> | Improve this Doc View Source SetIf<TMember>(Boolean, Expression<Func<T1, TMember>>) Declaration public IUpdate<T1> SetIf<TMember>(bool condition, Expression<Func<T1, TMember>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, TMember>> exp Returns Type Description IUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetIf<TMember>(Boolean, Expression<Func<T1, TMember>>, TMember) Declaration public IUpdate<T1> SetIf<TMember>(bool condition, Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, TMember>> column TMember value Returns Type Description IUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetPriv(ColumnInfo, Object) Declaration protected void SetPriv(ColumnInfo col, object value) Parameters Type Name Description ColumnInfo col System.Object value | Improve this Doc View Source SetRaw(String, Object) Declaration public IUpdate<T1> SetRaw(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description IUpdate <T1> | Improve this Doc View Source SetSource(T1) Declaration public IUpdate<T1> SetSource(T1 source) Parameters Type Name Description T1 source Returns Type Description IUpdate <T1> | Improve this Doc View Source SetSource(IEnumerable<T1>, Expression<Func<T1, Object>>) Declaration public IUpdate<T1> SetSource(IEnumerable<T1> source, Expression<Func<T1, object>> tempPrimarys = null) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> source System.Linq.Expressions.Expression < System.Func <T1, System.Object >> tempPrimarys Returns Type Description IUpdate <T1> | Improve this Doc View Source SetSourceIgnore(T1, Func<Object, Boolean>) Declaration public IUpdate<T1> SetSourceIgnore(T1 source, Func<object, bool> ignore) Parameters Type Name Description T1 source System.Func < System.Object , System.Boolean > ignore Returns Type Description IUpdate <T1> | Improve this Doc View Source SplitExecuteAffrows(Int32, Int32) Declaration protected int SplitExecuteAffrows(int valuesLimit, int parameterLimit) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit Returns Type Description System.Int32 | Improve this Doc View Source SplitExecuteAffrowsAsync(Int32, Int32, CancellationToken) Declaration protected Task<int> SplitExecuteAffrowsAsync(int valuesLimit, int parameterLimit, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source SplitExecuteUpdated(Int32, Int32) Declaration protected List<T1> SplitExecuteUpdated(int valuesLimit, int parameterLimit) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source SplitExecuteUpdatedAsync(Int32, Int32, CancellationToken) Declaration protected Task<List<T1>> SplitExecuteUpdatedAsync(int valuesLimit, int parameterLimit, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 valuesLimit System.Int32 parameterLimit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source TableRuleInvoke() Declaration protected string TableRuleInvoke() Returns Type Description System.String | Improve this Doc View Source ToSql() Declaration public string ToSql() Returns Type Description System.String | Improve this Doc View Source ToSqlCase(StringBuilder, ColumnInfo[]) Declaration protected abstract void ToSqlCase(StringBuilder caseWhen, ColumnInfo[] primarys) Parameters Type Name Description System.Text.StringBuilder caseWhen ColumnInfo [] primarys | Improve this Doc View Source ToSqlCaseWhenEnd(StringBuilder, ColumnInfo) Declaration protected virtual void ToSqlCaseWhenEnd(StringBuilder sb, ColumnInfo col) Parameters Type Name Description System.Text.StringBuilder sb ColumnInfo col | Improve this Doc View Source ToSqlWhen(StringBuilder, ColumnInfo[], Object) Declaration protected abstract void ToSqlWhen(StringBuilder sb, ColumnInfo[] primarys, object d) Parameters Type Name Description System.Text.StringBuilder sb ColumnInfo [] primarys System.Object d | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) Declaration public IUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description IUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) Declaration public IUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description IUpdate <T1> | Improve this Doc View Source ValidateVersionAndThrow(Int32, String, DbParameter[]) Declaration protected void ValidateVersionAndThrow(int affrows, string sql, DbParameter[] dbParms) Parameters Type Name Description System.Int32 affrows System.String sql System.Data.Common.DbParameter [] dbParms | Improve this Doc View Source Where(T1) Declaration public IUpdate<T1> Where(T1 item) Parameters Type Name Description T1 item Returns Type Description IUpdate <T1> | Improve this Doc View Source Where(IEnumerable<T1>) Declaration public IUpdate<T1> Where(IEnumerable<T1> items) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> items Returns Type Description IUpdate <T1> | Improve this Doc View Source Where(Expression<Func<T1, Boolean>>) Declaration public IUpdate<T1> Where(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description IUpdate <T1> | Improve this Doc View Source Where(String, Object) Declaration public IUpdate<T1> Where(string sql, object parms = null) Parameters Type Name Description System.String sql System.Object parms Returns Type Description IUpdate <T1> | Improve this Doc View Source WhereCaseSource(String, Func<String, String>) Declaration protected string WhereCaseSource(string CsName, Func<string, string> thenValue) Parameters Type Name Description System.String CsName System.Func < System.String , System.String > thenValue Returns Type Description System.String | Improve this Doc View Source WhereDynamic(Object, Boolean) Declaration public IUpdate<T1> WhereDynamic(object dywhere, bool not = false) Parameters Type Name Description System.Object dywhere System.Boolean not Returns Type Description IUpdate <T1> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, Boolean>>) Declaration public IUpdate<T1> WhereIf(bool condition, Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description IUpdate <T1> | Improve this Doc View Source WithConnection(DbConnection) Declaration public IUpdate<T1> WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description IUpdate <T1> | Improve this Doc View Source WithTransaction(DbTransaction) Declaration public IUpdate<T1> WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description IUpdate <T1> Implements IUpdate<T1>"
  },
  "api/FreeSql.Internal.CommonUtils.html": {
    "href": "api/FreeSql.Internal.CommonUtils.html",
    "title": "Class CommonUtils | FreeSql API Docs",
    "keywords": "Class CommonUtils Inheritance System.Object CommonUtils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public abstract class CommonUtils Constructors | Improve this Doc View Source CommonUtils(IFreeSql) Declaration public CommonUtils(IFreeSql orm) Parameters Type Name Description IFreeSql orm Fields | Improve this Doc View Source dbTablesLock Declaration public object dbTablesLock Field Value Type Description System.Object Properties | Improve this Doc View Source _orm Declaration public IFreeSql _orm { get; set; } Property Value Type Description IFreeSql | Improve this Doc View Source CodeFirst Declaration public ICodeFirst CodeFirst { get; } Property Value Type Description ICodeFirst | Improve this Doc View Source dbTables Declaration public List<DbTableInfo> dbTables { get; set; } Property Value Type Description System.Collections.Generic.List < DbTableInfo > | Improve this Doc View Source Now Declaration public abstract string Now { get; } Property Value Type Description System.String | Improve this Doc View Source NowUtc Declaration public abstract string NowUtc { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public abstract DbParameter AppendParamter(List<DbParameter> _params, string parameterName, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > _params System.String parameterName ColumnInfo col System.Type type System.Object value Returns Type Description System.Data.Common.DbParameter | Improve this Doc View Source BytesSqlRaw(Byte[]) Declaration public static string BytesSqlRaw(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Returns Type Description System.String | Improve this Doc View Source ConfigEntity(Type, Action<TableFluent>) Declaration public ICodeFirst ConfigEntity(Type type, Action<TableFluent> entity) Parameters Type Name Description System.Type type System.Action < TableFluent > entity Returns Type Description ICodeFirst | Improve this Doc View Source ConfigEntity<T>(Action<TableFluent<T>>) Declaration public ICodeFirst ConfigEntity<T>(Action<TableFluent<T>> entity) Parameters Type Name Description System.Action < TableFluent <T>> entity Returns Type Description ICodeFirst Type Parameters Name Description T | Improve this Doc View Source Div(String, String, Type, Type) Declaration public abstract string Div(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String | Improve this Doc View Source FieldAsAlias(String) Declaration public virtual string FieldAsAlias(string alias) Parameters Type Name Description System.String alias Returns Type Description System.String | Improve this Doc View Source FormatSql(String, Object[]) Declaration public abstract string FormatSql(string sql, params object[] args) Parameters Type Name Description System.String sql System.Object [] args Returns Type Description System.String | Improve this Doc View Source GetConfigEntity(Type) Declaration public TableAttribute GetConfigEntity(Type type) Parameters Type Name Description System.Type type Returns Type Description TableAttribute | Improve this Doc View Source GetDbParamtersByObject(String, Object) Declaration public abstract DbParameter[] GetDbParamtersByObject(string sql, object obj) Parameters Type Name Description System.String sql System.Object obj Returns Type Description System.Data.Common.DbParameter [] | Improve this Doc View Source GetEntityColumnAttribute(Type, PropertyInfo) Declaration public ColumnAttribute GetEntityColumnAttribute(Type type, PropertyInfo proto) Parameters Type Name Description System.Type type System.Reflection.PropertyInfo proto Returns Type Description ColumnAttribute | Improve this Doc View Source GetEntityIndexAttribute(Type) Declaration public IndexAttribute[] GetEntityIndexAttribute(Type type) Parameters Type Name Description System.Type type Returns Type Description IndexAttribute [] | Improve this Doc View Source GetEntityNavigateAttribute(Type, PropertyInfo) Declaration public NavigateAttribute GetEntityNavigateAttribute(Type type, PropertyInfo proto) Parameters Type Name Description System.Type type System.Reflection.PropertyInfo proto Returns Type Description NavigateAttribute | Improve this Doc View Source GetEntityTableAttribute(Type) Declaration public TableAttribute GetEntityTableAttribute(Type type) Parameters Type Name Description System.Type type Returns Type Description TableAttribute | Improve this Doc View Source GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public abstract string GetNoneParamaterSqlValue(List<DbParameter> specialParams, string specialParamFlag, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > specialParams System.String specialParamFlag ColumnInfo col System.Type type System.Object value Returns Type Description System.String | Improve this Doc View Source GetPropertyCommentByDescriptionAttribute(Type) 动态读取 DescriptionAttribute 注释文本 Declaration public static Dictionary<string, string> GetPropertyCommentByDescriptionAttribute(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > | Improve this Doc View Source GetProperyCommentBySummary(Type) 通过属性的注释文本，通过 xml 读取 Declaration public static Dictionary<string, string> GetProperyCommentBySummary(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > Dict：key=属性名，value=注释 | Improve this Doc View Source GetSplitTableNames(String, Char, Char, Int32) Declaration public static string[] GetSplitTableNames(string name, char leftQuote, char rightQuote, int size) Parameters Type Name Description System.String name System.Char leftQuote System.Char rightQuote System.Int32 size Returns Type Description System.String [] | Improve this Doc View Source GetTableByEntity(Type) Declaration public TableInfo GetTableByEntity(Type entity) Parameters Type Name Description System.Type entity Returns Type Description TableInfo | Improve this Doc View Source IIF(String, String, String) Declaration public virtual string IIF(string test, string ifTrue, string ifElse) Parameters Type Name Description System.String test System.String ifTrue System.String ifElse Returns Type Description System.String | Improve this Doc View Source IsNull(String, Object) Declaration public abstract string IsNull(string sql, object value) Parameters Type Name Description System.String sql System.Object value Returns Type Description System.String | Improve this Doc View Source Mod(String, String, Type, Type) Declaration public abstract string Mod(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String | Improve this Doc View Source PrevReheatConnectionPool(ObjectPool<DbConnection>, Int32) Declaration public static void PrevReheatConnectionPool(ObjectPool<DbConnection> pool, int minPoolSize) Parameters Type Name Description ObjectPool < System.Data.Common.DbConnection > pool System.Int32 minPoolSize | Improve this Doc View Source QuoteParamterName(String) Declaration public abstract string QuoteParamterName(string name) Parameters Type Name Description System.String name Returns Type Description System.String | Improve this Doc View Source QuoteReadColumnAdapter(Type, Type, String) Declaration protected abstract string QuoteReadColumnAdapter(Type type, Type mapType, string columnName) Parameters Type Name Description System.Type type System.Type mapType System.String columnName Returns Type Description System.String | Improve this Doc View Source QuoteSqlName(String[]) Declaration public abstract string QuoteSqlName(params string[] name) Parameters Type Name Description System.String [] name Returns Type Description System.String | Improve this Doc View Source QuoteWriteParamterAdapter(Type, String) Declaration public abstract string QuoteWriteParamterAdapter(Type type, string paramterName) Parameters Type Name Description System.Type type System.String paramterName Returns Type Description System.String | Improve this Doc View Source RereadColumn(ColumnInfo, String) Declaration public string RereadColumn(ColumnInfo col, string columnName) Parameters Type Name Description ColumnInfo col System.String columnName Returns Type Description System.String | Improve this Doc View Source RewriteColumn(ColumnInfo, String) Declaration public string RewriteColumn(ColumnInfo col, string sql) Parameters Type Name Description ColumnInfo col System.String sql Returns Type Description System.String | Improve this Doc View Source SplitTableName(String) Declaration public abstract string[] SplitTableName(string name) Parameters Type Name Description System.String name Returns Type Description System.String [] | Improve this Doc View Source StringConcat(String[], Type[]) Declaration public abstract string StringConcat(string[] objs, Type[] types) Parameters Type Name Description System.String [] objs System.Type [] types Returns Type Description System.String | Improve this Doc View Source TrimQuoteSqlName(String) Declaration public abstract string TrimQuoteSqlName(string name) Parameters Type Name Description System.String name Returns Type Description System.String | Improve this Doc View Source WhereItems<TEntity>(ColumnInfo[], String, IEnumerable<TEntity>) Declaration public string WhereItems<TEntity>(ColumnInfo[] primarys, string aliasAndDot, IEnumerable<TEntity> items) Parameters Type Name Description ColumnInfo [] primarys System.String aliasAndDot System.Collections.Generic.IEnumerable <TEntity> items Returns Type Description System.String Type Parameters Name Description TEntity | Improve this Doc View Source WhereObject(TableInfo, String, Object) Declaration public string WhereObject(TableInfo table, string aliasAndDot, object dywhere) Parameters Type Name Description TableInfo table System.String aliasAndDot System.Object dywhere Returns Type Description System.String"
  },
  "api/FreeSql.Internal.DbUpdateVersionException.html": {
    "href": "api/FreeSql.Internal.DbUpdateVersionException.html",
    "title": "Class DbUpdateVersionException | FreeSql API Docs",
    "keywords": "Class DbUpdateVersionException Inheritance System.Object System.Exception DbUpdateVersionException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public class DbUpdateVersionException : Exception, ISerializable Constructors | Improve this Doc View Source DbUpdateVersionException(String, TableInfo, String, DbParameter[], Int32, IEnumerable<Object>) Declaration public DbUpdateVersionException(string message, TableInfo table, string sql, DbParameter[] dbParms, int affrows, IEnumerable<object> source) Parameters Type Name Description System.String message TableInfo table System.String sql System.Data.Common.DbParameter [] dbParms System.Int32 affrows System.Collections.Generic.IEnumerable < System.Object > source Properties | Improve this Doc View Source Affrows 执行更新命令影响的行 Declaration public int Affrows { get; } Property Value Type Description System.Int32 | Improve this Doc View Source DbParams 执行更新命令的参数 Declaration public DbParameter[] DbParams { get; } Property Value Type Description System.Data.Common.DbParameter [] | Improve this Doc View Source EntitySource 更新的实体 Declaration public IEnumerable<object> EntitySource { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Object > | Improve this Doc View Source EntitySourceCount 更新的实体数量 Declaration public int EntitySourceCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Sql 执行更新的 SQL Declaration public string Sql { get; } Property Value Type Description System.String | Improve this Doc View Source Table 更新实体的元数据 Declaration public TableInfo Table { get; } Property Value Type Description TableInfo Implements System.Runtime.Serialization.ISerializable"
  },
  "api/FreeSql.Internal.GlobalFilter.html": {
    "href": "api/FreeSql.Internal.GlobalFilter.html",
    "title": "Class GlobalFilter | FreeSql API Docs",
    "keywords": "Class GlobalFilter Inheritance System.Object GlobalFilter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public class GlobalFilter Methods | Improve this Doc View Source Apply<TEntity>(String, Expression<Func<TEntity, Boolean>>) 创建一个过滤器 提示：在 Lambda 中判断登陆身份，请参考资料 AsyncLocal Declaration public GlobalFilter Apply<TEntity>(string name, Expression<Func<TEntity, bool>> where) Parameters Type Name Description System.String name 名字 System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> where 表达式 Returns Type Description GlobalFilter Type Parameters Name Description TEntity | Improve this Doc View Source ApplyIf<TEntity>(String, Func<Boolean>, Expression<Func<TEntity, Boolean>>) 创建一个动态过滤器，当 condition 返回值为 true 时才生效 场景：当登陆身份是管理员，则过滤条件不生效 提示：在 Lambda 中判断登陆身份，请参考资料 AsyncLocal Declaration public GlobalFilter ApplyIf<TEntity>(string name, Func<bool> condition, Expression<Func<TEntity, bool>> where) Parameters Type Name Description System.String name 名字 System.Func < System.Boolean > condition 委托，返回值为 true 时才生效 System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> where 表达式 Returns Type Description GlobalFilter Type Parameters Name Description TEntity | Improve this Doc View Source ApplyOnly<TEntity>(String, Expression<Func<TEntity, Boolean>>) 创建一个过滤器（实体类型 属于指定 TEntity 才会生效） 提示：在 Lambda 中判断登陆身份，请参考资料 AsyncLocal Declaration public GlobalFilter ApplyOnly<TEntity>(string name, Expression<Func<TEntity, bool>> where) Parameters Type Name Description System.String name 名字 System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> where 表达式 Returns Type Description GlobalFilter Type Parameters Name Description TEntity | Improve this Doc View Source ApplyOnlyIf<TEntity>(String, Func<Boolean>, Expression<Func<TEntity, Boolean>>) 创建一个过滤器（实体类型 属于指定 TEntity 才会生效） 场景：当登陆身份是管理员，则过滤条件不生效 提示：在 Lambda 中判断登陆身份，请参考资料 AsyncLocal Declaration public GlobalFilter ApplyOnlyIf<TEntity>(string name, Func<bool> condition, Expression<Func<TEntity, bool>> where) Parameters Type Name Description System.String name 名字 System.Func < System.Boolean > condition 委托，返回值为 true 时才生效 System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> where 表达式 Returns Type Description GlobalFilter Type Parameters Name Description TEntity | Improve this Doc View Source GetFilters() Declaration public List<GlobalFilter.Item> GetFilters() Returns Type Description System.Collections.Generic.List < GlobalFilter.Item > | Improve this Doc View Source Remove(String) Declaration public void Remove(string name) Parameters Type Name Description System.String name"
  },
  "api/FreeSql.Internal.GlobalFilter.Item.html": {
    "href": "api/FreeSql.Internal.GlobalFilter.Item.html",
    "title": "Class GlobalFilter.Item | FreeSql API Docs",
    "keywords": "Class GlobalFilter.Item Inheritance System.Object GlobalFilter.Item Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public class Item Properties | Improve this Doc View Source Id Declaration public int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Only Declaration public bool Only { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Where Declaration public LambdaExpression Where { get; } Property Value Type Description System.Linq.Expressions.LambdaExpression"
  },
  "api/FreeSql.Internal.html": {
    "href": "api/FreeSql.Internal.html",
    "title": "Namespace FreeSql.Internal | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Internal Classes BaseDiyMemberExpression CommonExpression CommonExpression.ExpTSC CommonExpression.ReadAnonymousDbValueRef CommonExpression.ReplaceHzyTupleToMultiParam CommonExpression.ReplaceParameterVisitor CommonUtils DbUpdateVersionException GlobalFilter GlobalFilter.Item Utils Enums CommonExpression.ExpressionStyle NameConvertType StringConvertType"
  },
  "api/FreeSql.Internal.Model.AdoCommandFluent.html": {
    "href": "api/FreeSql.Internal.Model.AdoCommandFluent.html",
    "title": "Class AdoCommandFluent | FreeSql API Docs",
    "keywords": "Class AdoCommandFluent Inheritance System.Object AdoCommandFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class AdoCommandFluent Constructors | Improve this Doc View Source AdoCommandFluent(AdoProvider, String, Object) Declaration public AdoCommandFluent(AdoProvider ado, string commandText, object parms) Parameters Type Name Description AdoProvider ado System.String commandText System.Object parms Properties | Improve this Doc View Source Ado Declaration protected AdoProvider Ado { get; set; } Property Value Type Description AdoProvider | Improve this Doc View Source CmdParameters Declaration protected List<DbParameter> CmdParameters { get; } Property Value Type Description System.Collections.Generic.List < System.Data.Common.DbParameter > | Improve this Doc View Source CmdText Declaration protected string CmdText { get; set; } Property Value Type Description System.String | Improve this Doc View Source CmdTimeout Declaration protected int CmdTimeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CmdType Declaration protected CommandType CmdType { get; set; } Property Value Type Description System.Data.CommandType | Improve this Doc View Source Connection Declaration protected DbConnection Connection { get; set; } Property Value Type Description System.Data.Common.DbConnection | Improve this Doc View Source Transaction Declaration protected DbTransaction Transaction { get; set; } Property Value Type Description System.Data.Common.DbTransaction Methods | Improve this Doc View Source CommandTimeout(Int32) 设置命令执行超时（秒） Declaration public AdoCommandFluent CommandTimeout(int commandTimeout) Parameters Type Name Description System.Int32 commandTimeout Returns Type Description AdoCommandFluent | Improve this Doc View Source CommandType(CommandType) 设置执行的命令类型，SQL文本、或存储过程 Declaration public AdoCommandFluent CommandType(CommandType commandType) Parameters Type Name Description System.Data.CommandType commandType Returns Type Description AdoCommandFluent | Improve this Doc View Source ExecuteArray() Declaration public object[][] ExecuteArray() Returns Type Description System.Object [][] | Improve this Doc View Source ExecuteArrayAsync(CancellationToken) Declaration public Task<object[][]> ExecuteArrayAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object [][]> | Improve this Doc View Source ExecuteDataSet() Declaration public DataSet ExecuteDataSet() Returns Type Description System.Data.DataSet | Improve this Doc View Source ExecuteDataSetAsync(CancellationToken) Declaration public Task<DataSet> ExecuteDataSetAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataSet > | Improve this Doc View Source ExecuteDataTable() Declaration public DataTable ExecuteDataTable() Returns Type Description System.Data.DataTable | Improve this Doc View Source ExecuteDataTableAsync(CancellationToken) Declaration public Task<DataTable> ExecuteDataTableAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ExecuteNonQuery() Declaration public int ExecuteNonQuery() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteNonQueryAsync(CancellationToken) Declaration public Task<int> ExecuteNonQueryAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteScalar() Declaration public object ExecuteScalar() Returns Type Description System.Object | Improve this Doc View Source ExecuteScalarAsync(CancellationToken) Declaration public Task<object> ExecuteScalarAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Object > | Improve this Doc View Source Query<T>() Declaration public List<T> Query<T>() Returns Type Description System.Collections.Generic.List <T> Type Parameters Name Description T | Improve this Doc View Source Query<T1, T2>() Declaration public NativeTuple<List<T1>, List<T2>> Query<T1, T2>() Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>> Type Parameters Name Description T1 T2 | Improve this Doc View Source Query<T1, T2, T3>() Declaration public NativeTuple<List<T1>, List<T2>, List<T3>> Query<T1, T2, T3>() Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Query<T1, T2, T3, T4>() Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>> Query<T1, T2, T3, T4>() Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Query<T1, T2, T3, T4, T5>() Declaration public NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>> Query<T1, T2, T3, T4, T5>() Returns Type Description NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QueryAsync<T>(CancellationToken) Declaration public Task<List<T>> QueryAsync<T>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T>> Type Parameters Name Description T | Improve this Doc View Source QueryAsync<T1, T2>(CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>>> QueryAsync<T1, T2>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>>> Type Parameters Name Description T1 T2 | Improve this Doc View Source QueryAsync<T1, T2, T3>(CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>>> QueryAsync<T1, T2, T3>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>>> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4>(CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>>> QueryAsync<T1, T2, T3, T4>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>>> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source QueryAsync<T1, T2, T3, T4, T5>(CancellationToken) Declaration public Task<NativeTuple<List<T1>, List<T2>, List<T3>, List<T4>, List<T5>>> QueryAsync<T1, T2, T3, T4, T5>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < NativeTuple < System.Collections.Generic.List <T1>, System.Collections.Generic.List <T2>, System.Collections.Generic.List <T3>, System.Collections.Generic.List <T4>, System.Collections.Generic.List <T5>>> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source QuerySingle<T>() Declaration public T QuerySingle<T>() Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source QuerySingleAsync<T>(CancellationToken) Declaration public Task<T> QuerySingleAsync<T>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T> Type Parameters Name Description T | Improve this Doc View Source WithConnection(DbConnection) 使用指定 DbConnection 连接执行 Declaration public AdoCommandFluent WithConnection(DbConnection conn) Parameters Type Name Description System.Data.Common.DbConnection conn Returns Type Description AdoCommandFluent | Improve this Doc View Source WithParameter(String, Object, Action<DbParameter>) 增加参数化对象 Declaration public AdoCommandFluent WithParameter(string parameterName, object value, Action<DbParameter> modify = null) Parameters Type Name Description System.String parameterName 参数名 System.Object value 参数值 System.Action < System.Data.Common.DbParameter > modify 修改本次创建好的参数化对象，比如将 parameterName 参数修改为 Output 类型 Returns Type Description AdoCommandFluent | Improve this Doc View Source WithTransaction(DbTransaction) 使用指定 DbTransaction 事务执行 Declaration public AdoCommandFluent WithTransaction(DbTransaction tran) Parameters Type Name Description System.Data.Common.DbTransaction tran Returns Type Description AdoCommandFluent"
  },
  "api/FreeSql.Internal.Model.BasePagingInfo.html": {
    "href": "api/FreeSql.Internal.Model.BasePagingInfo.html",
    "title": "Class BasePagingInfo | FreeSql API Docs",
    "keywords": "Class BasePagingInfo 分页信息 Inheritance System.Object BasePagingInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class BasePagingInfo Properties | Improve this Doc View Source Count 查询的记录数量 Declaration public long Count { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source PageNumber 第几页，从1开始 Declaration public int PageNumber { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PageSize 每页多少 Declaration public int PageSize { get; set; } Property Value Type Description System.Int32"
  },
  "api/FreeSql.Internal.Model.BatchProgressStatus-1.html": {
    "href": "api/FreeSql.Internal.Model.BatchProgressStatus-1.html",
    "title": "Class BatchProgressStatus<T1> | FreeSql API Docs",
    "keywords": "Class BatchProgressStatus<T1> Inheritance System.Object BatchProgressStatus<T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class BatchProgressStatus<T1> Type Parameters Name Description T1 Constructors | Improve this Doc View Source BatchProgressStatus(List<T1>, Int32, Int32) Declaration public BatchProgressStatus(List<T1> data, int current, int total) Parameters Type Name Description System.Collections.Generic.List <T1> data System.Int32 current System.Int32 total Properties | Improve this Doc View Source Current 当前批次 Declaration public int Current { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Data 当前操作的数据 Declaration public IEnumerable<T1> Data { get; } Property Value Type Description System.Collections.Generic.IEnumerable <T1> | Improve this Doc View Source Total 总批次数量 Declaration public int Total { get; } Property Value Type Description System.Int32"
  },
  "api/FreeSql.Internal.Model.ColumnInfo.html": {
    "href": "api/FreeSql.Internal.Model.ColumnInfo.html",
    "title": "Class ColumnInfo | FreeSql API Docs",
    "keywords": "Class ColumnInfo Inheritance System.Object ColumnInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class ColumnInfo Properties | Improve this Doc View Source Attribute Declaration public ColumnAttribute Attribute { get; set; } Property Value Type Description ColumnAttribute | Improve this Doc View Source Comment Declaration public string Comment { get; } Property Value Type Description System.String | Improve this Doc View Source CsName Declaration public string CsName { get; set; } Property Value Type Description System.String | Improve this Doc View Source CsType Declaration public Type CsType { get; set; } Property Value Type Description System.Type | Improve this Doc View Source DbDefaultValue Declaration public string DbDefaultValue { get; } Property Value Type Description System.String | Improve this Doc View Source DbInsertValue Declaration public string DbInsertValue { get; } Property Value Type Description System.String | Improve this Doc View Source DbPrecision Declaration public byte DbPrecision { get; } Property Value Type Description System.Byte | Improve this Doc View Source DbScale Declaration public byte DbScale { get; } Property Value Type Description System.Byte | Improve this Doc View Source DbSize Declaration public int DbSize { get; } Property Value Type Description System.Int32 | Improve this Doc View Source DbTypeText Declaration public string DbTypeText { get; } Property Value Type Description System.String | Improve this Doc View Source DbUpdateValue Declaration public string DbUpdateValue { get; } Property Value Type Description System.String | Improve this Doc View Source Table Declaration public TableInfo Table { get; set; } Property Value Type Description TableInfo Methods | Improve this Doc View Source GetDbValue(Object) 获取 obj.CsName 属性值 MapType 之后的数据库值 Declaration public object GetDbValue(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Object | Improve this Doc View Source GetMapValue(Object) Declaration [Obsolete(\"请使用 GetDbValue 或者 GetValue\")] public object GetMapValue(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Object | Improve this Doc View Source GetValue(Object) 获取 obj.CsName 属性原始值（不经过 MapType） Declaration public object GetValue(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Object | Improve this Doc View Source SetMapValue(Object, Object) Declaration [Obsolete(\"请使用 SetValue\")] public void SetMapValue(object obj, object val) Parameters Type Name Description System.Object obj System.Object val | Improve this Doc View Source SetValue(Object, Object) 设置 obj.CsName 属性值 Declaration public void SetValue(object obj, object val) Parameters Type Name Description System.Object obj System.Object val"
  },
  "api/FreeSql.Internal.Model.CsToDb.html": {
    "href": "api/FreeSql.Internal.Model.CsToDb.html",
    "title": "Class CsToDb | FreeSql API Docs",
    "keywords": "Class CsToDb Inheritance System.Object CsToDb Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public static class CsToDb Methods | Improve this Doc View Source New<T>(T, String, String, Nullable<Boolean>, Nullable<Boolean>, Object) Declaration public static CsToDb<T> New<T>(T type, string dbtype, string dbtypeFull, bool? isUnsigned, bool? isnullable, object defaultValue) Parameters Type Name Description T type System.String dbtype System.String dbtypeFull System.Nullable < System.Boolean > isUnsigned System.Nullable < System.Boolean > isnullable System.Object defaultValue Returns Type Description CsToDb <T> Type Parameters Name Description T"
  },
  "api/FreeSql.Internal.Model.CsToDb-1.html": {
    "href": "api/FreeSql.Internal.Model.CsToDb-1.html",
    "title": "Class CsToDb<T> | FreeSql API Docs",
    "keywords": "Class CsToDb<T> Inheritance System.Object CsToDb<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class CsToDb<T> Type Parameters Name Description T Constructors | Improve this Doc View Source CsToDb(T, String, String, Nullable<Boolean>, Nullable<Boolean>, Object) Declaration public CsToDb(T type, string dbtype, string dbtypeFull, bool? isUnsigned, bool? isnullable, object defaultValue) Parameters Type Name Description T type System.String dbtype System.String dbtypeFull System.Nullable < System.Boolean > isUnsigned System.Nullable < System.Boolean > isnullable System.Object defaultValue Properties | Improve this Doc View Source dbtype Declaration public string dbtype { get; } Property Value Type Description System.String | Improve this Doc View Source dbtypeFull Declaration public string dbtypeFull { get; } Property Value Type Description System.String | Improve this Doc View Source defaultValue Declaration public object defaultValue { get; } Property Value Type Description System.Object | Improve this Doc View Source isnullable Declaration public bool? isnullable { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source isUnsigned Declaration public bool? isUnsigned { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source type Declaration public T type { get; } Property Value Type Description T"
  },
  "api/FreeSql.Internal.Model.DbInfoResult.html": {
    "href": "api/FreeSql.Internal.Model.DbInfoResult.html",
    "title": "Class DbInfoResult | FreeSql API Docs",
    "keywords": "Class DbInfoResult Inheritance System.Object DbInfoResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class DbInfoResult Constructors | Improve this Doc View Source DbInfoResult(Int32, String, String, Nullable<Boolean>, Object) Declaration public DbInfoResult(int type, string dbtype, string dbtypeFull, bool? isnullable, object defaultValue) Parameters Type Name Description System.Int32 type System.String dbtype System.String dbtypeFull System.Nullable < System.Boolean > isnullable System.Object defaultValue Properties | Improve this Doc View Source dbtype Declaration public string dbtype { get; } Property Value Type Description System.String | Improve this Doc View Source dbtypeFull Declaration public string dbtypeFull { get; } Property Value Type Description System.String | Improve this Doc View Source defaultValue Declaration public object defaultValue { get; } Property Value Type Description System.Object | Improve this Doc View Source isnullable Declaration public bool? isnullable { get; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source type Declaration public int type { get; } Property Value Type Description System.Int32"
  },
  "api/FreeSql.Internal.Model.DbToCs.html": {
    "href": "api/FreeSql.Internal.Model.DbToCs.html",
    "title": "Class DbToCs | FreeSql API Docs",
    "keywords": "Class DbToCs Inheritance System.Object DbToCs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class DbToCs Constructors | Improve this Doc View Source DbToCs(String, String, String, String, Type, Type, String, String) Declaration public DbToCs(string csConvert, string csParse, string csStringify, string csType, Type csTypeInfo, Type csNullableTypeInfo, string csTypeValue, string dataReaderMethod) Parameters Type Name Description System.String csConvert System.String csParse System.String csStringify System.String csType System.Type csTypeInfo System.Type csNullableTypeInfo System.String csTypeValue System.String dataReaderMethod Properties | Improve this Doc View Source csConvert Declaration public string csConvert { get; } Property Value Type Description System.String | Improve this Doc View Source csNullableTypeInfo Declaration public Type csNullableTypeInfo { get; } Property Value Type Description System.Type | Improve this Doc View Source csParse Declaration public string csParse { get; } Property Value Type Description System.String | Improve this Doc View Source csStringify Declaration public string csStringify { get; } Property Value Type Description System.String | Improve this Doc View Source csType Declaration public string csType { get; } Property Value Type Description System.String | Improve this Doc View Source csTypeInfo Declaration public Type csTypeInfo { get; } Property Value Type Description System.Type | Improve this Doc View Source csTypeValue Declaration public string csTypeValue { get; } Property Value Type Description System.String | Improve this Doc View Source dataReaderMethod Declaration public string dataReaderMethod { get; } Property Value Type Description System.String"
  },
  "api/FreeSql.Internal.Model.DynamicFilterInfo.html": {
    "href": "api/FreeSql.Internal.Model.DynamicFilterInfo.html",
    "title": "Class DynamicFilterInfo | FreeSql API Docs",
    "keywords": "Class DynamicFilterInfo 动态过滤条件 Inheritance System.Object DynamicFilterInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class DynamicFilterInfo Properties | Improve this Doc View Source Field 属性名：Name 导航属性：Parent.Name 多表：b.Name Declaration public string Field { get; set; } Property Value Type Description System.String | Improve this Doc View Source Filters 子过滤条件，它与当前的逻辑关系是 And 注意：当前 Field 可以留空 Declaration public List<DynamicFilterInfo> Filters { get; set; } Property Value Type Description System.Collections.Generic.List < DynamicFilterInfo > | Improve this Doc View Source Logic Filters 下的逻辑运算符 Declaration public DynamicFilterLogic Logic { get; set; } Property Value Type Description DynamicFilterLogic | Improve this Doc View Source Operator 操作符 Declaration public DynamicFilterOperator Operator { get; set; } Property Value Type Description DynamicFilterOperator | Improve this Doc View Source Value 值 Declaration public object Value { get; set; } Property Value Type Description System.Object"
  },
  "api/FreeSql.Internal.Model.DynamicFilterLogic.html": {
    "href": "api/FreeSql.Internal.Model.DynamicFilterLogic.html",
    "title": "Enum DynamicFilterLogic | FreeSql API Docs",
    "keywords": "Enum DynamicFilterLogic Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public enum DynamicFilterLogic Fields Name Description And Or Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Internal.Model.DynamicFilterOperator.html": {
    "href": "api/FreeSql.Internal.Model.DynamicFilterOperator.html",
    "title": "Enum DynamicFilterOperator | FreeSql API Docs",
    "keywords": "Enum DynamicFilterOperator Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public enum DynamicFilterOperator Fields Name Description Any in (1,2,3) 此时 Value 的值格式为逗号分割：value1,value2,value3... 或者数组 Contains like DateRange = and < 此时 Value 的值格式为逗号分割：date1,date2 或者数组 这是专门为日期范围查询定制的操作符，它会处理 date2 + 1，比如： 当 date2 选择的是 2020-05-30，那查询的时候是 < 2020-05-31 当 date2 选择的是 2020-05，那查询的时候是 < 2020-06 当 date2 选择的是 2020，那查询的时候是 < 2021 当 date2 选择的是 2020-05-30 12，那查询的时候是 < 2020-05-30 13 当 date2 选择的是 2020-05-30 12:30，那查询的时候是 < 2020-05-30 12:31 并且 date2 只支持以上 5 种格式 (date1 没有限制) EndsWith Eq = Equal/Equals/Eq 效果相同 Equal = Equal/Equals/Eq 效果相同 Equals = Equal/Equals/Eq 效果相同 GreaterThan GreaterThanOrEqual = LessThan < LessThanOrEqual <= NotAny not in (1,2,3) 此时 Value 的值格式为逗号分割：value1,value2,value3... 或者数组 NotContains NotEndsWith NotEqual <> NotStartsWith Range = and < 此时 Value 的值格式为逗号分割：value1,value2 或者数组 StartsWith Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Internal.Model.FetchCallbackArgs-1.html": {
    "href": "api/FreeSql.Internal.Model.FetchCallbackArgs-1.html",
    "title": "Class FetchCallbackArgs<T> | FreeSql API Docs",
    "keywords": "Class FetchCallbackArgs<T> Inheritance System.Object FetchCallbackArgs<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class FetchCallbackArgs<T> Type Parameters Name Description T Properties | Improve this Doc View Source IsBreak 是否放弃继续读取 Declaration public bool IsBreak { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Object Declaration public T Object { get; set; } Property Value Type Description T"
  },
  "api/FreeSql.Internal.Model.html": {
    "href": "api/FreeSql.Internal.Model.html",
    "title": "Namespace FreeSql.Internal.Model | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Internal.Model Classes AdoCommandFluent BasePagingInfo 分页信息 BatchProgressStatus<T1> ColumnInfo CsToDb CsToDb<T> DbInfoResult DbToCs DynamicFilterInfo 动态过滤条件 FetchCallbackArgs<T> HzyTuple<T> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> HzyTuple<T1, T2> HzyTuple<T1, T2, T3> HzyTuple<T1, T2, T3, T4> HzyTuple<T1, T2, T3, T4, T5> HzyTuple<T1, T2, T3, T4, T5, T6> HzyTuple<T1, T2, T3, T4, T5, T6, T7> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8> HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> IndexColumnInfo IndexInfo NativeTuple NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> NativeTuple<T1, T2> NativeTuple<T1, T2, T3> NativeTuple<T1, T2, T3, T4> NativeTuple<T1, T2, T3, T4, T5> NativeTuple<T1, T2, T3, T4, T5, T6> NativeTuple<T1, T2, T3, T4, T5, T6, T7> NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8> NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> ReadAnonymousTypeAfInfo ReadAnonymousTypeInfo ReadAnonymousTypeOtherInfo SelectColumnInfo SelectTableInfo TableInfo TableRef Enums DynamicFilterLogic DynamicFilterOperator SelectTableInfoType TableRefType"
  },
  "api/FreeSql.Internal.Model.HzyTuple-1.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-1.html",
    "title": "Class HzyTuple<T> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T> Inheritance System.Object HzyTuple<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T> Type Parameters Name Description T Constructors | Improve this Doc View Source HzyTuple(T) Declaration public HzyTuple(T t) Parameters Type Name Description T t Properties | Improve this Doc View Source t1 Declaration public T t1 { get; } Property Value Type Description T"
  },
  "api/FreeSql.Internal.Model.HzyTuple-10.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-10.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 T9 t9 T10 t10 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t10 Declaration public T10 t10 { get; } Property Value Type Description T10 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8 | Improve this Doc View Source t9 Declaration public T9 t9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.HzyTuple-11.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-11.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 T9 t9 T10 t10 T11 t11 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t10 Declaration public T10 t10 { get; } Property Value Type Description T10 | Improve this Doc View Source t11 Declaration public T11 t11 { get; } Property Value Type Description T11 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8 | Improve this Doc View Source t9 Declaration public T9 t9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.HzyTuple-12.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-12.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 T9 t9 T10 t10 T11 t11 T12 t12 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t10 Declaration public T10 t10 { get; } Property Value Type Description T10 | Improve this Doc View Source t11 Declaration public T11 t11 { get; } Property Value Type Description T11 | Improve this Doc View Source t12 Declaration public T12 t12 { get; } Property Value Type Description T12 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8 | Improve this Doc View Source t9 Declaration public T9 t9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.HzyTuple-13.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-13.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 T9 t9 T10 t10 T11 t11 T12 t12 T13 t13 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t10 Declaration public T10 t10 { get; } Property Value Type Description T10 | Improve this Doc View Source t11 Declaration public T11 t11 { get; } Property Value Type Description T11 | Improve this Doc View Source t12 Declaration public T12 t12 { get; } Property Value Type Description T12 | Improve this Doc View Source t13 Declaration public T13 t13 { get; } Property Value Type Description T13 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8 | Improve this Doc View Source t9 Declaration public T9 t9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.HzyTuple-14.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-14.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 T9 t9 T10 t10 T11 t11 T12 t12 T13 t13 T14 t14 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t10 Declaration public T10 t10 { get; } Property Value Type Description T10 | Improve this Doc View Source t11 Declaration public T11 t11 { get; } Property Value Type Description T11 | Improve this Doc View Source t12 Declaration public T12 t12 { get; } Property Value Type Description T12 | Improve this Doc View Source t13 Declaration public T13 t13 { get; } Property Value Type Description T13 | Improve this Doc View Source t14 Declaration public T14 t14 { get; } Property Value Type Description T14 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8 | Improve this Doc View Source t9 Declaration public T9 t9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.HzyTuple-15.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-15.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14, T15 t15) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 T9 t9 T10 t10 T11 t11 T12 t12 T13 t13 T14 t14 T15 t15 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t10 Declaration public T10 t10 { get; } Property Value Type Description T10 | Improve this Doc View Source t11 Declaration public T11 t11 { get; } Property Value Type Description T11 | Improve this Doc View Source t12 Declaration public T12 t12 { get; } Property Value Type Description T12 | Improve this Doc View Source t13 Declaration public T13 t13 { get; } Property Value Type Description T13 | Improve this Doc View Source t14 Declaration public T14 t14 { get; } Property Value Type Description T14 | Improve this Doc View Source t15 Declaration public T15 t15 { get; } Property Value Type Description T15 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8 | Improve this Doc View Source t9 Declaration public T9 t9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.HzyTuple-16.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-16.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9, T10 t10, T11 t11, T12 t12, T13 t13, T14 t14, T15 t15, T16 t16) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 T9 t9 T10 t10 T11 t11 T12 t12 T13 t13 T14 t14 T15 t15 T16 t16 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t10 Declaration public T10 t10 { get; } Property Value Type Description T10 | Improve this Doc View Source t11 Declaration public T11 t11 { get; } Property Value Type Description T11 | Improve this Doc View Source t12 Declaration public T12 t12 { get; } Property Value Type Description T12 | Improve this Doc View Source t13 Declaration public T13 t13 { get; } Property Value Type Description T13 | Improve this Doc View Source t14 Declaration public T14 t14 { get; } Property Value Type Description T14 | Improve this Doc View Source t15 Declaration public T15 t15 { get; } Property Value Type Description T15 | Improve this Doc View Source t16 Declaration public T16 t16 { get; } Property Value Type Description T16 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8 | Improve this Doc View Source t9 Declaration public T9 t9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.HzyTuple-2.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-2.html",
    "title": "Class HzyTuple<T1, T2> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2> Inheritance System.Object HzyTuple<T1, T2> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2> Type Parameters Name Description T1 T2 Constructors | Improve this Doc View Source HzyTuple(T1, T2) Declaration public HzyTuple(T1 t1, T2 t2) Parameters Type Name Description T1 t1 T2 t2 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2"
  },
  "api/FreeSql.Internal.Model.HzyTuple-3.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-3.html",
    "title": "Class HzyTuple<T1, T2, T3> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3> Inheritance System.Object HzyTuple<T1, T2, T3> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3> Type Parameters Name Description T1 T2 T3 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3) Parameters Type Name Description T1 t1 T2 t2 T3 t3 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3"
  },
  "api/FreeSql.Internal.Model.HzyTuple-4.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-4.html",
    "title": "Class HzyTuple<T1, T2, T3, T4> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4> Inheritance System.Object HzyTuple<T1, T2, T3, T4> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4> Type Parameters Name Description T1 T2 T3 T4 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4"
  },
  "api/FreeSql.Internal.Model.HzyTuple-5.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-5.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5> Type Parameters Name Description T1 T2 T3 T4 T5 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5"
  },
  "api/FreeSql.Internal.Model.HzyTuple-6.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-6.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6> Type Parameters Name Description T1 T2 T3 T4 T5 T6 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6"
  },
  "api/FreeSql.Internal.Model.HzyTuple-7.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-7.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7"
  },
  "api/FreeSql.Internal.Model.HzyTuple-8.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-8.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8"
  },
  "api/FreeSql.Internal.Model.HzyTuple-9.html": {
    "href": "api/FreeSql.Internal.Model.HzyTuple-9.html",
    "title": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> | FreeSql API Docs",
    "keywords": "Class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inheritance System.Object HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 Constructors | Improve this Doc View Source HzyTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9) Declaration public HzyTuple(T1 t1, T2 t2, T3 t3, T4 t4, T5 t5, T6 t6, T7 t7, T8 t8, T9 t9) Parameters Type Name Description T1 t1 T2 t2 T3 t3 T4 t4 T5 t5 T6 t6 T7 t7 T8 t8 T9 t9 Properties | Improve this Doc View Source t1 Declaration public T1 t1 { get; } Property Value Type Description T1 | Improve this Doc View Source t2 Declaration public T2 t2 { get; } Property Value Type Description T2 | Improve this Doc View Source t3 Declaration public T3 t3 { get; } Property Value Type Description T3 | Improve this Doc View Source t4 Declaration public T4 t4 { get; } Property Value Type Description T4 | Improve this Doc View Source t5 Declaration public T5 t5 { get; } Property Value Type Description T5 | Improve this Doc View Source t6 Declaration public T6 t6 { get; } Property Value Type Description T6 | Improve this Doc View Source t7 Declaration public T7 t7 { get; } Property Value Type Description T7 | Improve this Doc View Source t8 Declaration public T8 t8 { get; } Property Value Type Description T8 | Improve this Doc View Source t9 Declaration public T9 t9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.IndexColumnInfo.html": {
    "href": "api/FreeSql.Internal.Model.IndexColumnInfo.html",
    "title": "Class IndexColumnInfo | FreeSql API Docs",
    "keywords": "Class IndexColumnInfo Inheritance System.Object IndexColumnInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class IndexColumnInfo Properties | Improve this Doc View Source Column Declaration public ColumnInfo Column { get; set; } Property Value Type Description ColumnInfo | Improve this Doc View Source IsDesc Declaration public bool IsDesc { get; set; } Property Value Type Description System.Boolean"
  },
  "api/FreeSql.Internal.Model.IndexInfo.html": {
    "href": "api/FreeSql.Internal.Model.IndexInfo.html",
    "title": "Class IndexInfo | FreeSql API Docs",
    "keywords": "Class IndexInfo Inheritance System.Object IndexInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class IndexInfo Properties | Improve this Doc View Source Columns Declaration public IndexColumnInfo[] Columns { get; set; } Property Value Type Description IndexColumnInfo [] | Improve this Doc View Source IsUnique Declaration public bool IsUnique { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/FreeSql.Internal.Model.NativeTuple.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple.html",
    "title": "Class NativeTuple | FreeSql API Docs",
    "keywords": "Class NativeTuple Inheritance System.Object NativeTuple Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public static class NativeTuple Methods | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12, T13 item13) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 T13 item13 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12, T13 item13, T14 item14) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 T13 item13 T14 item14 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12, T13 item13, T14 item14, T15 item15) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 T13 item13 T14 item14 T15 item15 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Create<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12, T13 item13, T14 item14, T15 item15, T16 item16) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 T13 item13 T14 item14 T15 item15 T16 item16 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 | Improve this Doc View Source Create<T1, T2>(T1, T2) Declaration public static NativeTuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2) Parameters Type Name Description T1 item1 T2 item2 Returns Type Description NativeTuple <T1, T2> Type Parameters Name Description T1 T2 | Improve this Doc View Source Create<T1, T2, T3>(T1, T2, T3) Declaration public static NativeTuple<T1, T2, T3> Create<T1, T2, T3>(T1 item1, T2 item2, T3 item3) Parameters Type Name Description T1 item1 T2 item2 T3 item3 Returns Type Description NativeTuple <T1, T2, T3> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Create<T1, T2, T3, T4>(T1, T2, T3, T4) Declaration public static NativeTuple<T1, T2, T3, T4> Create<T1, T2, T3, T4>(T1 item1, T2 item2, T3 item3, T4 item4) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 Returns Type Description NativeTuple <T1, T2, T3, T4> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) Declaration public static NativeTuple<T1, T2, T3, T4, T5> Create<T1, T2, T3, T4, T5>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 Returns Type Description NativeTuple <T1, T2, T3, T4, T5> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6> Create<T1, T2, T3, T4, T5, T6>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6> Type Parameters Name Description T1 T2 T3 T4 T5 T6 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7> Create<T1, T2, T3, T4, T5, T6, T7>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8> Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 | Improve this Doc View Source Create<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T1, T2, T3, T4, T5, T6, T7, T8, T9) Declaration public static NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> Create<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 Returns Type Description NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9"
  },
  "api/FreeSql.Internal.Model.NativeTuple-10.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-10.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item10 Declaration public T10 Item10 { get; } Property Value Type Description T10 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8 | Improve this Doc View Source Item9 Declaration public T9 Item9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.NativeTuple-11.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-11.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item10 Declaration public T10 Item10 { get; } Property Value Type Description T10 | Improve this Doc View Source Item11 Declaration public T11 Item11 { get; } Property Value Type Description T11 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8 | Improve this Doc View Source Item9 Declaration public T9 Item9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.NativeTuple-12.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-12.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item10 Declaration public T10 Item10 { get; } Property Value Type Description T10 | Improve this Doc View Source Item11 Declaration public T11 Item11 { get; } Property Value Type Description T11 | Improve this Doc View Source Item12 Declaration public T12 Item12 { get; } Property Value Type Description T12 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8 | Improve this Doc View Source Item9 Declaration public T9 Item9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.NativeTuple-13.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-13.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12, T13 item13) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 T13 item13 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item10 Declaration public T10 Item10 { get; } Property Value Type Description T10 | Improve this Doc View Source Item11 Declaration public T11 Item11 { get; } Property Value Type Description T11 | Improve this Doc View Source Item12 Declaration public T12 Item12 { get; } Property Value Type Description T12 | Improve this Doc View Source Item13 Declaration public T13 Item13 { get; } Property Value Type Description T13 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8 | Improve this Doc View Source Item9 Declaration public T9 Item9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.NativeTuple-14.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-14.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12, T13 item13, T14 item14) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 T13 item13 T14 item14 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item10 Declaration public T10 Item10 { get; } Property Value Type Description T10 | Improve this Doc View Source Item11 Declaration public T11 Item11 { get; } Property Value Type Description T11 | Improve this Doc View Source Item12 Declaration public T12 Item12 { get; } Property Value Type Description T12 | Improve this Doc View Source Item13 Declaration public T13 Item13 { get; } Property Value Type Description T13 | Improve this Doc View Source Item14 Declaration public T14 Item14 { get; } Property Value Type Description T14 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8 | Improve this Doc View Source Item9 Declaration public T9 Item9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.NativeTuple-15.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-15.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12, T13 item13, T14 item14, T15 item15) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 T13 item13 T14 item14 T15 item15 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item10 Declaration public T10 Item10 { get; } Property Value Type Description T10 | Improve this Doc View Source Item11 Declaration public T11 Item11 { get; } Property Value Type Description T11 | Improve this Doc View Source Item12 Declaration public T12 Item12 { get; } Property Value Type Description T12 | Improve this Doc View Source Item13 Declaration public T13 Item13 { get; } Property Value Type Description T13 | Improve this Doc View Source Item14 Declaration public T14 Item14 { get; } Property Value Type Description T14 | Improve this Doc View Source Item15 Declaration public T15 Item15 { get; } Property Value Type Description T15 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8 | Improve this Doc View Source Item9 Declaration public T9 Item9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.NativeTuple-16.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-16.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9, T10 item10, T11 item11, T12 item12, T13 item13, T14 item14, T15 item15, T16 item16) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 T10 item10 T11 item11 T12 item12 T13 item13 T14 item14 T15 item15 T16 item16 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item10 Declaration public T10 Item10 { get; } Property Value Type Description T10 | Improve this Doc View Source Item11 Declaration public T11 Item11 { get; } Property Value Type Description T11 | Improve this Doc View Source Item12 Declaration public T12 Item12 { get; } Property Value Type Description T12 | Improve this Doc View Source Item13 Declaration public T13 Item13 { get; } Property Value Type Description T13 | Improve this Doc View Source Item14 Declaration public T14 Item14 { get; } Property Value Type Description T14 | Improve this Doc View Source Item15 Declaration public T15 Item15 { get; } Property Value Type Description T15 | Improve this Doc View Source Item16 Declaration public T16 Item16 { get; } Property Value Type Description T16 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8 | Improve this Doc View Source Item9 Declaration public T9 Item9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.NativeTuple-2.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-2.html",
    "title": "Class NativeTuple<T1, T2> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2> Inheritance System.Object NativeTuple<T1, T2> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2> Type Parameters Name Description T1 T2 Constructors | Improve this Doc View Source NativeTuple(T1, T2) Declaration public NativeTuple(T1 item1, T2 item2) Parameters Type Name Description T1 item1 T2 item2 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2"
  },
  "api/FreeSql.Internal.Model.NativeTuple-3.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-3.html",
    "title": "Class NativeTuple<T1, T2, T3> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3> Inheritance System.Object NativeTuple<T1, T2, T3> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3> Type Parameters Name Description T1 T2 T3 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3) Parameters Type Name Description T1 item1 T2 item2 T3 item3 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3"
  },
  "api/FreeSql.Internal.Model.NativeTuple-4.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-4.html",
    "title": "Class NativeTuple<T1, T2, T3, T4> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4> Inheritance System.Object NativeTuple<T1, T2, T3, T4> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4> Type Parameters Name Description T1 T2 T3 T4 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4"
  },
  "api/FreeSql.Internal.Model.NativeTuple-5.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-5.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5> Type Parameters Name Description T1 T2 T3 T4 T5 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5"
  },
  "api/FreeSql.Internal.Model.NativeTuple-6.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-6.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6> Type Parameters Name Description T1 T2 T3 T4 T5 T6 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6"
  },
  "api/FreeSql.Internal.Model.NativeTuple-7.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-7.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7"
  },
  "api/FreeSql.Internal.Model.NativeTuple-8.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-8.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8"
  },
  "api/FreeSql.Internal.Model.NativeTuple-9.html": {
    "href": "api/FreeSql.Internal.Model.NativeTuple-9.html",
    "title": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> | FreeSql API Docs",
    "keywords": "Class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inheritance System.Object NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 Constructors | Improve this Doc View Source NativeTuple(T1, T2, T3, T4, T5, T6, T7, T8, T9) Declaration public NativeTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8, T9 item9) Parameters Type Name Description T1 item1 T2 item2 T3 item3 T4 item4 T5 item5 T6 item6 T7 item7 T8 item8 T9 item9 Properties | Improve this Doc View Source Item1 Declaration public T1 Item1 { get; } Property Value Type Description T1 | Improve this Doc View Source Item2 Declaration public T2 Item2 { get; } Property Value Type Description T2 | Improve this Doc View Source Item3 Declaration public T3 Item3 { get; } Property Value Type Description T3 | Improve this Doc View Source Item4 Declaration public T4 Item4 { get; } Property Value Type Description T4 | Improve this Doc View Source Item5 Declaration public T5 Item5 { get; } Property Value Type Description T5 | Improve this Doc View Source Item6 Declaration public T6 Item6 { get; } Property Value Type Description T6 | Improve this Doc View Source Item7 Declaration public T7 Item7 { get; } Property Value Type Description T7 | Improve this Doc View Source Item8 Declaration public T8 Item8 { get; } Property Value Type Description T8 | Improve this Doc View Source Item9 Declaration public T9 Item9 { get; } Property Value Type Description T9"
  },
  "api/FreeSql.Internal.Model.ReadAnonymousTypeAfInfo.html": {
    "href": "api/FreeSql.Internal.Model.ReadAnonymousTypeAfInfo.html",
    "title": "Class ReadAnonymousTypeAfInfo | FreeSql API Docs",
    "keywords": "Class ReadAnonymousTypeAfInfo Inheritance System.Object ReadAnonymousTypeAfInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class ReadAnonymousTypeAfInfo Constructors | Improve this Doc View Source ReadAnonymousTypeAfInfo(ReadAnonymousTypeInfo, String) Declaration public ReadAnonymousTypeAfInfo(ReadAnonymousTypeInfo map, string field) Parameters Type Name Description ReadAnonymousTypeInfo map System.String field Properties | Improve this Doc View Source field Declaration public string field { get; } Property Value Type Description System.String | Improve this Doc View Source fillIncludeMany Declaration public List<NativeTuple<string, IList, int>> fillIncludeMany { get; set; } Property Value Type Description System.Collections.Generic.List < NativeTuple < System.String , System.Collections.IList , System.Int32 >> | Improve this Doc View Source map Declaration public ReadAnonymousTypeInfo map { get; } Property Value Type Description ReadAnonymousTypeInfo"
  },
  "api/FreeSql.Internal.Model.ReadAnonymousTypeInfo.html": {
    "href": "api/FreeSql.Internal.Model.ReadAnonymousTypeInfo.html",
    "title": "Class ReadAnonymousTypeInfo | FreeSql API Docs",
    "keywords": "Class ReadAnonymousTypeInfo Inheritance System.Object ReadAnonymousTypeInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class ReadAnonymousTypeInfo Fields | Improve this Doc View Source Childs Declaration public List<ReadAnonymousTypeInfo> Childs Field Value Type Description System.Collections.Generic.List < ReadAnonymousTypeInfo > Properties | Improve this Doc View Source Consturctor Declaration public ConstructorInfo Consturctor { get; set; } Property Value Type Description System.Reflection.ConstructorInfo | Improve this Doc View Source CsName Declaration public string CsName { get; set; } Property Value Type Description System.String | Improve this Doc View Source CsType Declaration public Type CsType { get; set; } Property Value Type Description System.Type | Improve this Doc View Source DbField Declaration public string DbField { get; set; } Property Value Type Description System.String | Improve this Doc View Source IncludeManyKey Declaration public string IncludeManyKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsDefaultCtor Declaration public bool IsDefaultCtor { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEntity Declaration public bool IsEntity { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MapType Declaration public Type MapType { get; set; } Property Value Type Description System.Type | Improve this Doc View Source Property Declaration public PropertyInfo Property { get; set; } Property Value Type Description System.Reflection.PropertyInfo | Improve this Doc View Source ReflectionField Declaration public FieldInfo ReflectionField { get; set; } Property Value Type Description System.Reflection.FieldInfo | Improve this Doc View Source Table Declaration public TableInfo Table { get; set; } Property Value Type Description TableInfo Methods | Improve this Doc View Source CopyTo(ReadAnonymousTypeInfo) Declaration public void CopyTo(ReadAnonymousTypeInfo target) Parameters Type Name Description ReadAnonymousTypeInfo target"
  },
  "api/FreeSql.Internal.Model.ReadAnonymousTypeOtherInfo.html": {
    "href": "api/FreeSql.Internal.Model.ReadAnonymousTypeOtherInfo.html",
    "title": "Class ReadAnonymousTypeOtherInfo | FreeSql API Docs",
    "keywords": "Class ReadAnonymousTypeOtherInfo Inheritance System.Object ReadAnonymousTypeOtherInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class ReadAnonymousTypeOtherInfo Constructors | Improve this Doc View Source ReadAnonymousTypeOtherInfo(String, ReadAnonymousTypeInfo, List<Object>) Declaration public ReadAnonymousTypeOtherInfo(string field, ReadAnonymousTypeInfo read, List<object> retlist) Parameters Type Name Description System.String field ReadAnonymousTypeInfo read System.Collections.Generic.List < System.Object > retlist Properties | Improve this Doc View Source field Declaration public string field { get; } Property Value Type Description System.String | Improve this Doc View Source read Declaration public ReadAnonymousTypeInfo read { get; } Property Value Type Description ReadAnonymousTypeInfo | Improve this Doc View Source retlist Declaration public List<object> retlist { get; } Property Value Type Description System.Collections.Generic.List < System.Object >"
  },
  "api/FreeSql.Internal.Model.SelectColumnInfo.html": {
    "href": "api/FreeSql.Internal.Model.SelectColumnInfo.html",
    "title": "Class SelectColumnInfo | FreeSql API Docs",
    "keywords": "Class SelectColumnInfo Inheritance System.Object SelectColumnInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class SelectColumnInfo Properties | Improve this Doc View Source Column Declaration public ColumnInfo Column { get; set; } Property Value Type Description ColumnInfo | Improve this Doc View Source Table Declaration public SelectTableInfo Table { get; set; } Property Value Type Description SelectTableInfo"
  },
  "api/FreeSql.Internal.Model.SelectTableInfo.html": {
    "href": "api/FreeSql.Internal.Model.SelectTableInfo.html",
    "title": "Class SelectTableInfo | FreeSql API Docs",
    "keywords": "Class SelectTableInfo Inheritance System.Object SelectTableInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class SelectTableInfo Properties | Improve this Doc View Source Alias Declaration public string Alias { get; set; } Property Value Type Description System.String | Improve this Doc View Source AliasInit Declaration public string AliasInit { get; set; } Property Value Type Description System.String | Improve this Doc View Source Cascade Declaration public string Cascade { get; set; } Property Value Type Description System.String | Improve this Doc View Source NavigateCondition Declaration public string NavigateCondition { get; set; } Property Value Type Description System.String | Improve this Doc View Source On Declaration public string On { get; set; } Property Value Type Description System.String | Improve this Doc View Source Parameter Declaration public ParameterExpression Parameter { get; set; } Property Value Type Description System.Linq.Expressions.ParameterExpression | Improve this Doc View Source Table Declaration public TableInfo Table { get; set; } Property Value Type Description TableInfo | Improve this Doc View Source Type Declaration public SelectTableInfoType Type { get; set; } Property Value Type Description SelectTableInfoType"
  },
  "api/FreeSql.Internal.Model.SelectTableInfoType.html": {
    "href": "api/FreeSql.Internal.Model.SelectTableInfoType.html",
    "title": "Enum SelectTableInfoType | FreeSql API Docs",
    "keywords": "Enum SelectTableInfoType Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public enum SelectTableInfoType Fields Name Description From InnerJoin LeftJoin Parent RightJoin Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Internal.Model.TableInfo.html": {
    "href": "api/FreeSql.Internal.Model.TableInfo.html",
    "title": "Class TableInfo | FreeSql API Docs",
    "keywords": "Class TableInfo Inheritance System.Object TableInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class TableInfo Properties | Improve this Doc View Source Columns Declaration public Dictionary<string, ColumnInfo> Columns { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , ColumnInfo > | Improve this Doc View Source ColumnsByCs Declaration public Dictionary<string, ColumnInfo> ColumnsByCs { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , ColumnInfo > | Improve this Doc View Source ColumnsByCsIgnore Declaration public Dictionary<string, ColumnInfo> ColumnsByCsIgnore { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , ColumnInfo > | Improve this Doc View Source ColumnsByPosition Declaration public ColumnInfo[] ColumnsByPosition { get; set; } Property Value Type Description ColumnInfo [] | Improve this Doc View Source Comment Declaration public string Comment { get; } Property Value Type Description System.String | Improve this Doc View Source CsName Declaration public string CsName { get; set; } Property Value Type Description System.String | Improve this Doc View Source DbName Declaration public string DbName { get; set; } Property Value Type Description System.String | Improve this Doc View Source DbOldName Declaration public string DbOldName { get; set; } Property Value Type Description System.String | Improve this Doc View Source DisableSyncStructure Declaration public bool DisableSyncStructure { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Indexes Declaration public IndexInfo[] Indexes { get; set; } Property Value Type Description IndexInfo [] | Improve this Doc View Source IsRereadSql Declaration public bool IsRereadSql { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Primarys Declaration public ColumnInfo[] Primarys { get; set; } Property Value Type Description ColumnInfo [] | Improve this Doc View Source Properties Declaration public Dictionary<string, PropertyInfo> Properties { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Reflection.PropertyInfo > | Improve this Doc View Source Type Declaration public Type Type { get; set; } Property Value Type Description System.Type | Improve this Doc View Source TypeLazy Declaration public Type TypeLazy { get; set; } Property Value Type Description System.Type | Improve this Doc View Source TypeLazySetOrm Declaration public MethodInfo TypeLazySetOrm { get; set; } Property Value Type Description System.Reflection.MethodInfo | Improve this Doc View Source VersionColumn Declaration public ColumnInfo VersionColumn { get; set; } Property Value Type Description ColumnInfo Methods | Improve this Doc View Source GetTableRef(String, Boolean) Declaration public TableRef GetTableRef(string propertyName, bool isThrowException) Parameters Type Name Description System.String propertyName System.Boolean isThrowException Returns Type Description TableRef Extension Methods EntityUtilExtensions.GetPropertyValue(TableInfo, Object, String) EntityUtilExtensions.SetPropertyValue(TableInfo, Object, String, Object)"
  },
  "api/FreeSql.Internal.Model.TableRef.html": {
    "href": "api/FreeSql.Internal.Model.TableRef.html",
    "title": "Class TableRef | FreeSql API Docs",
    "keywords": "Class TableRef Inheritance System.Object TableRef Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public class TableRef Properties | Improve this Doc View Source Columns Declaration public List<ColumnInfo> Columns { get; set; } Property Value Type Description System.Collections.Generic.List < ColumnInfo > | Improve this Doc View Source Exception Declaration public Exception Exception { get; set; } Property Value Type Description System.Exception | Improve this Doc View Source MiddleColumns Declaration public List<ColumnInfo> MiddleColumns { get; set; } Property Value Type Description System.Collections.Generic.List < ColumnInfo > | Improve this Doc View Source Property Declaration public PropertyInfo Property { get; set; } Property Value Type Description System.Reflection.PropertyInfo | Improve this Doc View Source RefColumns Declaration public List<ColumnInfo> RefColumns { get; set; } Property Value Type Description System.Collections.Generic.List < ColumnInfo > | Improve this Doc View Source RefEntityType Declaration public Type RefEntityType { get; set; } Property Value Type Description System.Type | Improve this Doc View Source RefMiddleEntityType 中间表，多对多 Declaration public Type RefMiddleEntityType { get; set; } Property Value Type Description System.Type | Improve this Doc View Source RefType Declaration public TableRefType RefType { get; set; } Property Value Type Description TableRefType"
  },
  "api/FreeSql.Internal.Model.TableRefType.html": {
    "href": "api/FreeSql.Internal.Model.TableRefType.html",
    "title": "Enum TableRefType | FreeSql API Docs",
    "keywords": "Enum TableRefType Namespace : FreeSql.Internal.Model Assembly : FreeSql.dll Syntax public enum TableRefType Fields Name Description ManyToMany ManyToOne OneToMany OneToOne Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Internal.NameConvertType.html": {
    "href": "api/FreeSql.Internal.NameConvertType.html",
    "title": "Enum NameConvertType | FreeSql API Docs",
    "keywords": "Enum NameConvertType Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public enum NameConvertType Fields Name Description None 不进行任何处理 PascalCaseToUnderscore 将帕斯卡命名字符串转换为下划线分隔字符串 BigApple -> Big_Apple PascalCaseToUnderscoreWithLower 将帕斯卡命名字符串转换为下划线分隔字符串，且转换为全小写 BigApple -> big_apple PascalCaseToUnderscoreWithUpper 将帕斯卡命名字符串转换为下划线分隔字符串，且转换为全大写 BigApple -> BIG_APPLE ToLower 将字符串转换为小写 BigApple -> bigapple ToUpper 将字符串转换为大写 BigApple -> BIGAPPLE Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Internal.ObjectPool.DefaultPolicy-1.html": {
    "href": "api/FreeSql.Internal.ObjectPool.DefaultPolicy-1.html",
    "title": "Class DefaultPolicy<T> | FreeSql API Docs",
    "keywords": "Class DefaultPolicy<T> Inheritance System.Object DefaultPolicy<T> Implements IPolicy <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.ObjectPool Assembly : FreeSql.dll Syntax public class DefaultPolicy<T> : IPolicy<T> Type Parameters Name Description T Fields | Improve this Doc View Source CreateObject Declaration public Func<T> CreateObject Field Value Type Description System.Func <T> | Improve this Doc View Source OnGetObject Declaration public Action<Object<T>> OnGetObject Field Value Type Description System.Action < Object <T>> Properties | Improve this Doc View Source AsyncGetCapacity Declaration public int AsyncGetCapacity { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CheckAvailableInterval Declaration public int CheckAvailableInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IdleTimeout Declaration public TimeSpan IdleTimeout { get; set; } Property Value Type Description System.TimeSpan | Improve this Doc View Source IsAutoDisposeWithSystem Declaration public bool IsAutoDisposeWithSystem { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsThrowGetTimeoutException Declaration public bool IsThrowGetTimeoutException { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source PoolSize Declaration public int PoolSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SyncGetTimeout Declaration public TimeSpan SyncGetTimeout { get; set; } Property Value Type Description System.TimeSpan Methods | Improve this Doc View Source OnAvailable() Declaration public void OnAvailable() | Improve this Doc View Source OnCheckAvailable(Object<T>) Declaration public bool OnCheckAvailable(Object<T> obj) Parameters Type Name Description Object <T> obj Returns Type Description System.Boolean | Improve this Doc View Source OnCreate() Declaration public T OnCreate() Returns Type Description T | Improve this Doc View Source OnDestroy(T) Declaration public void OnDestroy(T obj) Parameters Type Name Description T obj | Improve this Doc View Source OnGet(Object<T>) Declaration public void OnGet(Object<T> obj) Parameters Type Name Description Object <T> obj | Improve this Doc View Source OnGetAsync(Object<T>) Declaration public Task OnGetAsync(Object<T> obj) Parameters Type Name Description Object <T> obj Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source OnGetTimeout() Declaration public void OnGetTimeout() | Improve this Doc View Source OnReturn(Object<T>) Declaration public void OnReturn(Object<T> obj) Parameters Type Name Description Object <T> obj | Improve this Doc View Source OnUnavailable() Declaration public void OnUnavailable() Implements IPolicy<T>"
  },
  "api/FreeSql.Internal.ObjectPool.html": {
    "href": "api/FreeSql.Internal.ObjectPool.html",
    "title": "Namespace FreeSql.Internal.ObjectPool | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Internal.ObjectPool Classes DefaultPolicy<T> Object<T> ObjectPool<T> 对象池管理类 Interfaces IObjectPool<T> IPolicy<T>"
  },
  "api/FreeSql.Internal.ObjectPool.IObjectPool-1.html": {
    "href": "api/FreeSql.Internal.ObjectPool.IObjectPool-1.html",
    "title": "Interface IObjectPool<T> | FreeSql API Docs",
    "keywords": "Interface IObjectPool<T> Inherited Members System.IDisposable.Dispose() Namespace : FreeSql.Internal.ObjectPool Assembly : FreeSql.dll Syntax public interface IObjectPool<T> : IDisposable Type Parameters Name Description T Properties | Improve this Doc View Source IsAvailable 是否可用 Declaration bool IsAvailable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Policy Declaration IPolicy<T> Policy { get; } Property Value Type Description IPolicy <T> | Improve this Doc View Source Statistics 统计对象池中的对象 Declaration string Statistics { get; } Property Value Type Description System.String | Improve this Doc View Source StatisticsFullily 统计对象池中的对象（完整) Declaration string StatisticsFullily { get; } Property Value Type Description System.String | Improve this Doc View Source UnavailableException 不可用错误 Declaration Exception UnavailableException { get; } Property Value Type Description System.Exception | Improve this Doc View Source UnavailableTime 不可用时间 Declaration DateTime? UnavailableTime { get; } Property Value Type Description System.Nullable < System.DateTime > Methods | Improve this Doc View Source Get(Nullable<TimeSpan>) 获取资源 Declaration Object<T> Get(TimeSpan? timeout = default(TimeSpan? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout 超时 Returns Type Description Object <T> | Improve this Doc View Source GetAsync() 获取资源 Declaration Task<Object<T>> GetAsync() Returns Type Description System.Threading.Tasks.Task < Object <T>> | Improve this Doc View Source Return(Object<T>, Boolean) 使用完毕后，归还资源 Declaration void Return(Object<T> obj, bool isReset = false) Parameters Type Name Description Object <T> obj 对象 System.Boolean isReset 是否重新创建 | Improve this Doc View Source SetUnavailable(Exception) 将对象池设置为不可用，后续 Get/GetAsync 均会报错，同时启动后台定时检查服务恢复可用 Declaration bool SetUnavailable(Exception exception) Parameters Type Name Description System.Exception exception Returns Type Description System.Boolean 由【可用】变成【不可用】时返回true，否则返回false"
  },
  "api/FreeSql.Internal.ObjectPool.IPolicy-1.html": {
    "href": "api/FreeSql.Internal.ObjectPool.IPolicy-1.html",
    "title": "Interface IPolicy<T> | FreeSql API Docs",
    "keywords": "Interface IPolicy<T> Namespace : FreeSql.Internal.ObjectPool Assembly : FreeSql.dll Syntax public interface IPolicy<T> Type Parameters Name Description T Properties | Improve this Doc View Source AsyncGetCapacity 异步获取排队队列大小，小于等于0不生效 Declaration int AsyncGetCapacity { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CheckAvailableInterval 后台定时检查可用性间隔秒数 Declaration int CheckAvailableInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IdleTimeout 空闲时间，获取时若超出，则重新创建 Declaration TimeSpan IdleTimeout { get; set; } Property Value Type Description System.TimeSpan | Improve this Doc View Source IsAutoDisposeWithSystem 监听 AppDomain.CurrentDomain.ProcessExit/Console.CancelKeyPress 事件自动释放 Declaration bool IsAutoDisposeWithSystem { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsThrowGetTimeoutException 获取超时后，是否抛出异常 Declaration bool IsThrowGetTimeoutException { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name 名称 Declaration string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source PoolSize 池容量 Declaration int PoolSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SyncGetTimeout 默认获取超时设置 Declaration TimeSpan SyncGetTimeout { get; set; } Property Value Type Description System.TimeSpan Methods | Improve this Doc View Source OnAvailable() 事件：可用时触发 Declaration void OnAvailable() | Improve this Doc View Source OnCheckAvailable(Object<T>) 检查可用性 Declaration bool OnCheckAvailable(Object<T> obj) Parameters Type Name Description Object <T> obj 资源对象 Returns Type Description System.Boolean | Improve this Doc View Source OnCreate() 对象池的对象被创建时 Declaration T OnCreate() Returns Type Description T 返回被创建的对象 | Improve this Doc View Source OnDestroy(T) 销毁对象 Declaration void OnDestroy(T obj) Parameters Type Name Description T obj 资源对象 | Improve this Doc View Source OnGet(Object<T>) 从对象池获取对象成功的时候触发，通过该方法统计或初始化对象 Declaration void OnGet(Object<T> obj) Parameters Type Name Description Object <T> obj 资源对象 | Improve this Doc View Source OnGetAsync(Object<T>) 从对象池获取对象成功的时候触发，通过该方法统计或初始化对象 Declaration Task OnGetAsync(Object<T> obj) Parameters Type Name Description Object <T> obj 资源对象 Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source OnGetTimeout() 从对象池获取对象超时的时候触发，通过该方法统计 Declaration void OnGetTimeout() | Improve this Doc View Source OnReturn(Object<T>) 归还对象给对象池的时候触发 Declaration void OnReturn(Object<T> obj) Parameters Type Name Description Object <T> obj 资源对象 | Improve this Doc View Source OnUnavailable() 事件：不可用时触发 Declaration void OnUnavailable()"
  },
  "api/FreeSql.Internal.ObjectPool.Object-1.html": {
    "href": "api/FreeSql.Internal.ObjectPool.Object-1.html",
    "title": "Class Object<T> | FreeSql API Docs",
    "keywords": "Class Object<T> Inheritance System.Object Object<T> Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : FreeSql.Internal.ObjectPool Assembly : FreeSql.dll Syntax public class Object<T> : IDisposable Type Parameters Name Description T Properties | Improve this Doc View Source CreateTime 创建时间 Declaration public DateTime CreateTime { get; } Property Value Type Description System.DateTime | Improve this Doc View Source GetTimes 被获取的总次数 Declaration public long GetTimes { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Id 在对象池中的唯一标识 Declaration public int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source LastGetThreadId 最后获取时的线程id Declaration public int LastGetThreadId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source LastGetTime Declaration public DateTime LastGetTime { get; } Property Value Type Description System.DateTime | Improve this Doc View Source LastReturnThreadId 最后归还时的线程id Declaration public int LastReturnThreadId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source LastReturnTime 最后归还时的时间 Declaration public DateTime LastReturnTime { get; } Property Value Type Description System.DateTime | Improve this Doc View Source Pool 所属对象池 Declaration public IObjectPool<T> Pool { get; } Property Value Type Description IObjectPool <T> | Improve this Doc View Source Value 资源对象 Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source InitWith(IObjectPool<T>, Int32, T) Declaration public static Object<T> InitWith(IObjectPool<T> pool, int id, T value) Parameters Type Name Description IObjectPool <T> pool System.Int32 id T value Returns Type Description Object <T> | Improve this Doc View Source ResetValue() 重置 Value 值 Declaration public void ResetValue() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable"
  },
  "api/FreeSql.Internal.ObjectPool.ObjectPool-1.html": {
    "href": "api/FreeSql.Internal.ObjectPool.ObjectPool-1.html",
    "title": "Class ObjectPool<T> | FreeSql API Docs",
    "keywords": "Class ObjectPool<T> 对象池管理类 Inheritance System.Object ObjectPool<T> Implements IObjectPool <T> System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal.ObjectPool Assembly : FreeSql.dll Syntax public class ObjectPool<T> : IObjectPool<T>, IDisposable Type Parameters Name Description T 对象类型 Constructors | Improve this Doc View Source ObjectPool(IPolicy<T>) 创建对象池 Declaration public ObjectPool(IPolicy<T> policy) Parameters Type Name Description IPolicy <T> policy 策略 | Improve this Doc View Source ObjectPool(Int32, Func<T>, Action<Object<T>>) 创建对象池 Declaration public ObjectPool(int poolsize, Func<T> createObject, Action<Object<T>> onGetObject = null) Parameters Type Name Description System.Int32 poolsize 池大小 System.Func <T> createObject 池内对象的创建委托 System.Action < Object <T>> onGetObject 获取池内对象成功后，进行使用前操作 Properties | Improve this Doc View Source IsAvailable Declaration public bool IsAvailable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Policy Declaration public IPolicy<T> Policy { get; protected set; } Property Value Type Description IPolicy <T> | Improve this Doc View Source Statistics Declaration public string Statistics { get; } Property Value Type Description System.String | Improve this Doc View Source StatisticsFullily Declaration public string StatisticsFullily { get; } Property Value Type Description System.String | Improve this Doc View Source UnavailableException Declaration public Exception UnavailableException { get; } Property Value Type Description System.Exception | Improve this Doc View Source UnavailableTime Declaration public DateTime? UnavailableTime { get; } Property Value Type Description System.Nullable < System.DateTime > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Get(Nullable<TimeSpan>) Declaration public Object<T> Get(TimeSpan? timeout = default(TimeSpan? )) Parameters Type Name Description System.Nullable < System.TimeSpan > timeout Returns Type Description Object <T> | Improve this Doc View Source GetAsync() Declaration public Task<Object<T>> GetAsync() Returns Type Description System.Threading.Tasks.Task < Object <T>> | Improve this Doc View Source LiveCheckAvailable() Declaration protected bool LiveCheckAvailable() Returns Type Description System.Boolean | Improve this Doc View Source Return(Object<T>, Boolean) Declaration public void Return(Object<T> obj, bool isReset = false) Parameters Type Name Description Object <T> obj System.Boolean isReset | Improve this Doc View Source SetUnavailable(Exception) Declaration public bool SetUnavailable(Exception exception) Parameters Type Name Description System.Exception exception Returns Type Description System.Boolean Implements IObjectPool<T> System.IDisposable"
  },
  "api/FreeSql.Internal.StringConvertType.html": {
    "href": "api/FreeSql.Internal.StringConvertType.html",
    "title": "Enum StringConvertType | FreeSql API Docs",
    "keywords": "Enum StringConvertType Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public enum StringConvertType Fields Name Description Lower 将字符串转换为小写 BigApple -> bigapple None 不进行任何处理 PascalCaseToUnderscore 将帕斯卡命名字符串转换为下划线分隔字符串 BigApple -> Big_Apple PascalCaseToUnderscoreWithLower 将帕斯卡命名字符串转换为下划线分隔字符串，且转换为全小写 BigApple -> big_apple PascalCaseToUnderscoreWithUpper 将帕斯卡命名字符串转换为下划线分隔字符串，且转换为全大写 BigApple -> BIG_APPLE Upper 将字符串转换为大写 BigApple -> BIGAPPLE Extension Methods FreeSqlGlobalExtensions.ToDescriptionOrString() FreeSqlGlobalExtensions.ToInt64()"
  },
  "api/FreeSql.Internal.Utils.html": {
    "href": "api/FreeSql.Internal.Utils.html",
    "title": "Class Utils | FreeSql API Docs",
    "keywords": "Class Utils Inheritance System.Object Utils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Internal Assembly : FreeSql.dll Syntax public class Utils Fields | Improve this Doc View Source dicExecuteArrayRowReadClassOrTuple Declaration public static Dictionary<Type, bool> dicExecuteArrayRowReadClassOrTuple Field Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Boolean > | Improve this Doc View Source GetDataReaderValueBlockExpressionObjectToStringIfThenElse Declaration public static ConcurrentBag<Func<LabelTarget, Expression, Expression, Type, Expression>> GetDataReaderValueBlockExpressionObjectToStringIfThenElse Field Value Type Description System.Collections.Concurrent.ConcurrentBag < System.Func < System.Linq.Expressions.LabelTarget , System.Linq.Expressions.Expression , System.Linq.Expressions.Expression , System.Type , System.Linq.Expressions.Expression >> | Improve this Doc View Source GetDataReaderValueBlockExpressionSwitchTypeFullName Declaration public static ConcurrentBag<Func<LabelTarget, Expression, Type, Expression>> GetDataReaderValueBlockExpressionSwitchTypeFullName Field Value Type Description System.Collections.Concurrent.ConcurrentBag < System.Func < System.Linq.Expressions.LabelTarget , System.Linq.Expressions.Expression , System.Type , System.Linq.Expressions.Expression >> Methods | Improve this Doc View Source AddTableRef(CommonUtils, TableInfo, PropertyInfo, Boolean, NativeTuple<PropertyInfo, Boolean, Boolean, MethodInfo, MethodInfo>, StringBuilder) Declaration public static void AddTableRef(CommonUtils common, TableInfo trytb, PropertyInfo pnv, bool isLazy, NativeTuple<PropertyInfo, bool, bool, MethodInfo, MethodInfo> vp, StringBuilder cscode) Parameters Type Name Description CommonUtils common TableInfo trytb System.Reflection.PropertyInfo pnv System.Boolean isLazy NativeTuple < System.Reflection.PropertyInfo , System.Boolean , System.Boolean , System.Reflection.MethodInfo , System.Reflection.MethodInfo > vp System.Text.StringBuilder cscode | Improve this Doc View Source BytesToGuid(Byte[]) Declaration public static Guid BytesToGuid(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Returns Type Description System.Guid | Improve this Doc View Source GetCsName(String) Declaration public static string GetCsName(string name) Parameters Type Name Description System.String name Returns Type Description System.String | Improve this Doc View Source GetDataReaderValue(Type, Object) Declaration public static object GetDataReaderValue(Type type, object value) Parameters Type Name Description System.Type type System.Object value Returns Type Description System.Object | Improve this Doc View Source GetDataReaderValueBlockExpression(Type, Expression) Declaration public static Expression GetDataReaderValueBlockExpression(Type type, Expression value) Parameters Type Name Description System.Type type System.Linq.Expressions.Expression value Returns Type Description System.Linq.Expressions.Expression | Improve this Doc View Source GetDbParamtersByObject<T>(String, Object, String, Func<String, Type, Object, T>) Declaration public static T[] GetDbParamtersByObject<T>(string sql, object obj, string paramPrefix, Func<string, Type, object, T> constructorParamter) Parameters Type Name Description System.String sql System.Object obj System.String paramPrefix System.Func < System.String , System.Type , System.Object , T> constructorParamter Returns Type Description T[] Type Parameters Name Description T | Improve this Doc View Source GuidToBytes(Guid) Declaration public static byte[] GuidToBytes(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Byte [] | Improve this Doc View Source StringToChar(String) Declaration public static char StringToChar(string str) Parameters Type Name Description System.String str Returns Type Description System.Char | Improve this Doc View Source ToBigInteger(String) Declaration public static BigInteger ToBigInteger(string that) Parameters Type Name Description System.String that Returns Type Description System.Numerics.BigInteger | Improve this Doc View Source ToStringConcat(Object) Declaration public static string ToStringConcat(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.String"
  },
  "api/FreeSql.ISelect0.html": {
    "href": "api/FreeSql.ISelect0.html",
    "title": "Interface ISelect0 | FreeSql API Docs",
    "keywords": "Interface ISelect0 Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect0"
  },
  "api/FreeSql.ISelect0-2.html": {
    "href": "api/FreeSql.ISelect0-2.html",
    "title": "Interface ISelect0<TSelect, T1> | FreeSql API Docs",
    "keywords": "Interface ISelect0<TSelect, T1> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect0<TSelect, T1> : ISelect0 Type Parameters Name Description TSelect T1 Methods | Improve this Doc View Source Any() 执行SQL查询，是否有记录 Declaration bool Any() Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(CancellationToken) Declaration Task<bool> AnyAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AsAlias(Func<Type, String, String>) 设置别名规则，可用于拦截表别名，实现类似 sqlserver 的 with(nolock) 需求 如：select.AsAlias((_, old) => $\"{old} with(lock)\") Declaration TSelect AsAlias(Func<Type, string, string> aliasRule) Parameters Type Name Description System.Func < System.Type , System.String , System.String > aliasRule Returns Type Description TSelect | Improve this Doc View Source AsTable(Func<Type, String, String>) 设置表名规则，可用于分库/分表，参数1：实体类型；参数2：默认表名；返回值：新表名； 设置多次，可查询分表后的多个子表记录，以 UNION ALL 形式执行。 如：select.AsTable((type, oldname) => \"table_1\").AsTable((type, oldname) => \"table_2\").AsTable((type, oldname) => \"table_3\").ToSql(a => a.Id); select * from (SELECT a.\"Id\" as1 FROM \"table_1\" a) ftb UNION ALL select * from (SELECT a.\"Id\" as1 FROM \"table_2\" a) ftb UNION ALL select * from (SELECT a.\"Id\" as1 FROM \"table_3\" a) ftb 还可以这样：select.AsTable((a, b) => \"(select * from tb_topic where clicks > 10)\").Page(1, 10).ToList() Declaration TSelect AsTable(Func<Type, string, string> tableRule) Parameters Type Name Description System.Func < System.Type , System.String , System.String > tableRule Returns Type Description TSelect | Improve this Doc View Source AsType(Type) 动态Type，在使用 Select<object> 后使用本方法，指定实体类型 Declaration TSelect AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description TSelect | Improve this Doc View Source Cancel(Func<Boolean>) 控制取消本次查询 不会产生额外的异常 取消成功，则不执行 SQL 命令 取消成功，直接返回没有记录时候的返回值 取消成功，如 List<T> 返回 0 元素列表，不是 null，仍然是旧机制 Declaration TSelect Cancel(Func<bool> cancel) Parameters Type Name Description System.Func < System.Boolean > cancel 返回 true，则不会执行 SQL 命令 Returns Type Description TSelect | Improve this Doc View Source CommandTimeout(Int32) 命令超时设置(秒) Declaration TSelect CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description TSelect | Improve this Doc View Source Count() 查询的记录数量 Declaration long Count() Returns Type Description System.Int64 | Improve this Doc View Source Count(out Int64) 查询的记录数量，以参数out形式返回 Declaration TSelect Count(out long count) Parameters Type Name Description System.Int64 count 返回的变量 Returns Type Description TSelect | Improve this Doc View Source CountAsync(CancellationToken) Declaration Task<long> CountAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source DisableGlobalFilter(String[]) 禁用全局过滤功能，不传参数时将禁用所有 Declaration TSelect DisableGlobalFilter(params string[] name) Parameters Type Name Description System.String [] name 零个或多个过滤器名字 Returns Type Description TSelect | Improve this Doc View Source Distinct() 查询数据前，去重 .Distinct().ToList(x => x.GroupName) 对指定字段去重 .Distinct().ToList() 对整个查询去重 Declaration TSelect Distinct() Returns Type Description TSelect | Improve this Doc View Source First() 执行SQL查询，返回 T1 实体所有字段的第一条记录，记录不存在时返回 null Declaration T1 First() Returns Type Description T1 | Improve this Doc View Source FirstAsync(CancellationToken) Declaration Task<T1> FirstAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T1> | Improve this Doc View Source ForUpdate(Boolean) 排他更新锁 注意：务必在开启事务后使用该功能 MySql: for update SqlServer: With(UpdLock, RowLock, NoWait) PostgreSQL: for update nowait Oracle: for update nowait Sqlite: 无效果 达梦: for update nowait 人大金仓: for update nowait 神通: for update Declaration TSelect ForUpdate(bool nowait = false) Parameters Type Name Description System.Boolean nowait noawait Returns Type Description TSelect | Improve this Doc View Source GroupBy(String, Object) 按原生sql语法分组，GroupBy(\"concat(name, @cc)&quot;, new { cc = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect GroupBy(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source Having(String, Object) 按原生sql语法聚合条件过滤，Having(\"count(name) = @cc&quot;, new { cc = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect Having(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法条件 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source InnerJoin(Expression<Func<T1, Boolean>>) 联接查询，使用导航属性自动生成SQL Declaration TSelect InnerJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp 表达式 Returns Type Description TSelect | Improve this Doc View Source InnerJoin(String, Object) 联接查询，使用原生sql语法，InnerJoin(\"type b on b.id = a.id and b.clicks > @clicks&quot;, new { clicks = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect InnerJoin(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法条件 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) 联接查询，指定关联的实体类型 Declaration TSelect InnerJoin<T2>(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp 表达式 Returns Type Description TSelect Type Parameters Name Description T2 关联的实体类型 | Improve this Doc View Source LeftJoin(Expression<Func<T1, Boolean>>) 左联查询，使用导航属性自动生成SQL Declaration TSelect LeftJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp 表达式 Returns Type Description TSelect | Improve this Doc View Source LeftJoin(String, Object) 左联查询，使用原生sql语法，LeftJoin(\"type b on b.id = a.id and b.clicks > @clicks&quot;, new { clicks = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect LeftJoin(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法条件 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) 左联查询，指定关联的实体类型 Declaration TSelect LeftJoin<T2>(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp 表达式 Returns Type Description TSelect Type Parameters Name Description T2 关联的实体类型 | Improve this Doc View Source Limit(Int32) 查询多少条数据 Declaration TSelect Limit(int limit) Parameters Type Name Description System.Int32 limit Returns Type Description TSelect | Improve this Doc View Source Master() 指定从主库查询（默认查询从库） Declaration TSelect Master() Returns Type Description TSelect | Improve this Doc View Source Offset(Int32) 查询向后偏移行数 Declaration TSelect Offset(int offset) Parameters Type Name Description System.Int32 offset 行数 Returns Type Description TSelect | Improve this Doc View Source OrderBy(Boolean, String, Object) 按原生sql语法排序，OrderBy(true, \"count(name) + @cc desc\", new { cc = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect OrderBy(bool condition, string sql, object parms = null) Parameters Type Name Description System.Boolean condition true 时生效 System.String sql sql语法 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source OrderBy(String, Object) 按原生sql语法排序，OrderBy(\"count(name) + @cc desc\", new { cc = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect OrderBy(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source OrderByPropertyName(String, Boolean) 按属性名字符串排序（支持导航属性） 属性名：Name 导航属性：Parent.Name 多表：b.Name Declaration TSelect OrderByPropertyName(string property, bool isAscending = true) Parameters Type Name Description System.String property 属性名：Name 导航属性：Parent.Name 多表：b.Name System.Boolean isAscending 顺序 | 倒序 Returns Type Description TSelect | Improve this Doc View Source OrderByPropertyNameIf(Boolean, String, Boolean) 按属性名字符串排序（支持导航属性） 属性名：Name 导航属性：Parent.Name 多表：b.Name Declaration TSelect OrderByPropertyNameIf(bool condition, string property, bool isAscending = true) Parameters Type Name Description System.Boolean condition true 时生效 System.String property 属性名：Name 导航属性：Parent.Name 多表：b.Name System.Boolean isAscending 顺序 | 倒序 Returns Type Description TSelect | Improve this Doc View Source Page(BasePagingInfo) 分页 Declaration TSelect Page(BasePagingInfo pagingInfo) Parameters Type Name Description BasePagingInfo pagingInfo 分页信息 Returns Type Description TSelect | Improve this Doc View Source Page(Int32, Int32) 分页 Declaration TSelect Page(int pageNumber, int pageSize) Parameters Type Name Description System.Int32 pageNumber 第几页 System.Int32 pageSize 每页多少 Returns Type Description TSelect | Improve this Doc View Source RawJoin(String) 在 JOIN 位置插入 SQL 内容 如：.RawJoin(\"OUTER APPLY ( select id from t2 ) b\") Declaration TSelect RawJoin(string sql) Parameters Type Name Description System.String sql Returns Type Description TSelect | Improve this Doc View Source RightJoin(Expression<Func<T1, Boolean>>) 右联查询，使用导航属性自动生成SQL Declaration TSelect RightJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp 表达式 Returns Type Description TSelect | Improve this Doc View Source RightJoin(String, Object) 右联查询，使用原生sql语法，RightJoin(\"type b on b.id = a.id and b.clicks > @clicks&quot;, new { clicks = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect RightJoin(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法条件 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) 右联查询，指定关联的实体类型 Declaration TSelect RightJoin<T2>(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp 表达式 Returns Type Description TSelect Type Parameters Name Description T2 关联的实体类型 | Improve this Doc View Source Skip(Int32) 查询向后偏移行数 Declaration TSelect Skip(int offset) Parameters Type Name Description System.Int32 offset Returns Type Description TSelect | Improve this Doc View Source Take(Int32) 查询多少条数据 Declaration TSelect Take(int limit) Parameters Type Name Description System.Int32 limit Returns Type Description TSelect | Improve this Doc View Source ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) 执行SQL查询，分块返回数据，可减少内存开销。比如读取10万条数据，每次返回100条处理。 Declaration void ToChunk(int size, Action<FetchCallbackArgs<List<T1>>> done, bool includeNestedMembers = false) Parameters Type Name Description System.Int32 size 数据块的大小 System.Action < FetchCallbackArgs < System.Collections.Generic.List <T1>>> done 处理数据块 System.Boolean includeNestedMembers false: 返回 2级 LeftJoin/InnerJoin/RightJoin 对象；true: 返回所有 LeftJoin/InnerJoin/RightJoin 的导航数据 | Improve this Doc View Source ToDataTable(String) 执行SQL查询，返回 DataTable Declaration DataTable ToDataTable(string field = null) Parameters Type Name Description System.String field Returns Type Description System.Data.DataTable | Improve this Doc View Source ToDataTableAsync(String, CancellationToken) Declaration Task<DataTable> ToDataTableAsync(string field = null, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String field System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > | Improve this Doc View Source ToDelete() 将查询转为删除对象，以便支持导航对象或其他查询功能删除数据，如下： fsql.Select<T1>().Where(a => a.Options.xxx == 1).ToDelete().ExecuteAffrows() 注意：此方法不是将数据查询到内存循环删除，上面的代码产生如下 SQL 执行： DELETE FROM T1 WHERE id in (select a.id from T1 a left join Options b on b.t1id = a.id where b.xxx = 1) 复杂删除使用该方案的好处： 1、删除前可预览测试数据，防止错误删除操作； 2、支持更加复杂的删除操作（IDelete 默认只支持简单的操作）； Declaration IDelete<T1> ToDelete() Returns Type Description IDelete <T1> | Improve this Doc View Source ToDictionary<TKey>(Func<T1, TKey>) 以字典的形式返回查询结果 注意：字典的特点会导致返回的数据无序 Declaration Dictionary<TKey, T1> ToDictionary<TKey>(Func<T1, TKey> keySelector) Parameters Type Name Description System.Func <T1, TKey> keySelector Returns Type Description System.Collections.Generic.Dictionary <TKey, T1> Type Parameters Name Description TKey | Improve this Doc View Source ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) Declaration Dictionary<TKey, TElement> ToDictionary<TKey, TElement>(Func<T1, TKey> keySelector, Func<T1, TElement> elementSelector) Parameters Type Name Description System.Func <T1, TKey> keySelector System.Func <T1, TElement> elementSelector Returns Type Description System.Collections.Generic.Dictionary <TKey, TElement> Type Parameters Name Description TKey TElement | Improve this Doc View Source ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) Declaration Task<Dictionary<TKey, T1>> ToDictionaryAsync<TKey>(Func<T1, TKey> keySelector, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Func <T1, TKey> keySelector System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary <TKey, T1>> Type Parameters Name Description TKey | Improve this Doc View Source ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) Declaration Task<Dictionary<TKey, TElement>> ToDictionaryAsync<TKey, TElement>(Func<T1, TKey> keySelector, Func<T1, TElement> elementSelector, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Func <T1, TKey> keySelector System.Func <T1, TElement> elementSelector System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary <TKey, TElement>> Type Parameters Name Description TKey TElement | Improve this Doc View Source ToList(Boolean) 执行SQL查询，返回 T1 实体所有字段的记录，记录不存在时返回 Count 为 0 的列表 注意： 1、ToList(a => a) 可以返回 a 所有实体 2、ToList(a => new { a }) 这样也可以 3、ToList((a, b, c) => new { a, b, c }) 这样也可以 4、abc 怎么来的？请试试 fsql.Select<T1, T2, T3>() Declaration List<T1> ToList(bool includeNestedMembers = false) Parameters Type Name Description System.Boolean includeNestedMembers false: 返回 2级 LeftJoin/InnerJoin/RightJoin 对象；true: 返回所有 LeftJoin/InnerJoin/RightJoin 的导航数据 Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source ToList<TTuple>(String) 执行SQL查询，返回 field 指定字段的记录，并以元组或基础类型(int,string,long)接收，记录不存在时返回 Count 为 0 的列表 Declaration List<TTuple> ToList<TTuple>(string field) Parameters Type Name Description System.String field Returns Type Description System.Collections.Generic.List <TTuple> Type Parameters Name Description TTuple | Improve this Doc View Source ToListAsync(Boolean, CancellationToken) Declaration Task<List<T1>> ToListAsync(bool includeNestedMembers = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Boolean includeNestedMembers System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source ToListAsync<TTuple>(String, CancellationToken) Declaration Task<List<TTuple>> ToListAsync<TTuple>(string field, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String field System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TTuple>> Type Parameters Name Description TTuple | Improve this Doc View Source ToOne() 执行SQL查询，返回 T1 实体所有字段的第一条记录，记录不存在时返回 null Declaration T1 ToOne() Returns Type Description T1 | Improve this Doc View Source ToOneAsync(CancellationToken) Declaration Task<T1> ToOneAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <T1> | Improve this Doc View Source ToSql(String) 返回即将执行的SQL语句 Declaration string ToSql(string field = null) Parameters Type Name Description System.String field 指定字段 Returns Type Description System.String | Improve this Doc View Source ToUpdate() 将查询转为更新对象，以便支持导航对象或其他查询功能更新数据，如下： fsql.Select<T1>().Where(a => a.Options.xxx == 1).ToUpdate().Set(a => a.Title, \"111\").ExecuteAffrows() 注意：此方法不是将数据查询到内存循环更新，上面的代码产生如下 SQL 执行： UPDATE T1 SET Title = '111' WHERE id in (select a.id from T1 a left join Options b on b.t1id = a.id where b.xxx = 1) 复杂更新使用该方案的好处： 1、更新前可预览测试数据，防止错误更新操作； 2、支持更加复杂的更新操作（IUpdate 默认只支持简单的操作）； Declaration IUpdate<T1> ToUpdate() Returns Type Description IUpdate <T1> | Improve this Doc View Source TrackToList(Action<Object>) 审核或跟踪 ToList 即将返回的数据 Declaration TSelect TrackToList(Action<object> action) Parameters Type Name Description System.Action < System.Object > action Returns Type Description TSelect | Improve this Doc View Source Where(String, Object) 原生sql语法条件，Where(\"id = @id&quot;, new { id = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect Where(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法条件 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source WhereDynamicFilter(DynamicFilterInfo) 动态过滤条件 Declaration TSelect WhereDynamicFilter(DynamicFilterInfo filter) Parameters Type Name Description DynamicFilterInfo filter Returns Type Description TSelect | Improve this Doc View Source WhereIf(Boolean, String, Object) 原生sql语法条件，WhereIf(true, \"id = @id&quot;, new { id = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration TSelect WhereIf(bool condition, string sql, object parms = null) Parameters Type Name Description System.Boolean condition true 时生效 System.String sql sql语法条件 System.Object parms 参数 Returns Type Description TSelect | Improve this Doc View Source WithConnection(DbConnection) 指定连接对象 Declaration TSelect WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description TSelect | Improve this Doc View Source WithTransaction(DbTransaction) 指定事务对象 Declaration TSelect WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description TSelect"
  },
  "api/FreeSql.ISelect-1.html": {
    "href": "api/FreeSql.ISelect-1.html",
    "title": "Interface ISelect<T1> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1> Inherited Members ISelect0<ISelect<T1>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1>, T1>.ToDataTable(String) ISelect0<ISelect<T1>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1>, T1>.ToList(Boolean) ISelect0<ISelect<T1>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1>, T1>.ToOne() ISelect0<ISelect<T1>, T1>.First() ISelect0<ISelect<T1>, T1>.ToDelete() ISelect0<ISelect<T1>, T1>.ToUpdate() ISelect0<ISelect<T1>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1>, T1>.AsType(Type) ISelect0<ISelect<T1>, T1>.ToSql(String) ISelect0<ISelect<T1>, T1>.Any() ISelect0<ISelect<T1>, T1>.Count() ISelect0<ISelect<T1>, T1>.Count(Int64) ISelect0<ISelect<T1>, T1>.Master() ISelect0<ISelect<T1>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1>, T1>.RawJoin(String) ISelect0<ISelect<T1>, T1>.Where(String, Object) ISelect0<ISelect<T1>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1>, T1>.Having(String, Object) ISelect0<ISelect<T1>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1>, T1>.Skip(Int32) ISelect0<ISelect<T1>, T1>.Offset(Int32) ISelect0<ISelect<T1>, T1>.Limit(Int32) ISelect0<ISelect<T1>, T1>.Take(Int32) ISelect0<ISelect<T1>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1> : ISelect0<ISelect<T1>, T1>, ISelect0 Type Parameters Name Description T1 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>>, out TReturn) 执行SQL查询，返回指定字段的聚合结果给 output 参数 fsql.Select<T>() .Aggregate(a => new { count = a.Count, sum = a.Sum(a.Key.Price) }, out var agg) .Page(1, 10).ToList(); Declaration ISelect<T1> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, TReturn>> select TReturn result Returns Type Description ISelect <T1> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, Boolean>>) 执行SQL查询，是否有记录 Declaration bool Any(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式 Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source As(String) 指定别名 Declaration ISelect<T1> As(string alias = \"a\") Parameters Type Name Description System.String alias 别名 Returns Type Description ISelect <T1> | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, TMember>>) 平均值 Declaration double Avg<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column 列 Returns Type Description System.Double Type Parameters Name Description TMember 返回类型 | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() 执行SQL查询，返回 TDto 映射的字段，记录不存在时返回 Dto 默认值 Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, TReturn>>) 执行SQL查询，返回指定字段的记录的第一条记录，记录不存在时返回 TReturn 默认值 Declaration TReturn First<TReturn>(Expression<Func<T1, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select 选择列 Returns Type Description TReturn Type Parameters Name Description TReturn 返回类型 | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source From<T2>(Expression<Func<ISelectFromExpression<T1>, T2, ISelectFromExpression<T1>>>) 多表查询 Declaration ISelect<T1, T2> From<T2>(Expression<Func<ISelectFromExpression<T1>, T2, ISelectFromExpression<T1>>> exp) where T2 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2> Type Parameters Name Description T2 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class where T15 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> From<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class where T15 : class where T16 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 | Improve this Doc View Source From<T2, T3>(Expression<Func<ISelectFromExpression<T1>, T2, T3, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3> From<T2, T3>(Expression<Func<ISelectFromExpression<T1>, T2, T3, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description T2 T3 | Improve this Doc View Source From<T2, T3, T4>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4> From<T2, T3, T4>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description T2 T3 T4 | Improve this Doc View Source From<T2, T3, T4, T5>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5> From<T2, T3, T4, T5>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description T2 T3 T4 T5 | Improve this Doc View Source From<T2, T3, T4, T5, T6>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> From<T2, T3, T4, T5, T6>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description T2 T3 T4 T5 T6 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> From<T2, T3, T4, T5, T6, T7>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description T2 T3 T4 T5 T6 T7 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> From<T2, T3, T4, T5, T6, T7, T8>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> From<T2, T3, T4, T5, T6, T7, T8, T9>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 | Improve this Doc View Source From<T2, T3, T4, T5, T6, T7, T8, T9, T10>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, ISelectFromExpression<T1>>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> From<T2, T3, T4, T5, T6, T7, T8, T9, T10>(Expression<Func<ISelectFromExpression<T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, ISelectFromExpression<T1>>> exp) where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectFromExpression <T1>, T2, T3, T4, T5, T6, T7, T8, T9, T10, ISelectFromExpression <T1>>> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description T2 T3 T4 T5 T6 T7 T8 T9 T10 | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, TKey>>) 按选择的列分组，GroupBy(a => a.Name) | GroupBy(a => new{a.Name,a.Time}) Declaration ISelectGrouping<TKey, T1> GroupBy<TKey>(Expression<Func<T1, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TKey>> exp Returns Type Description ISelectGrouping <TKey, T1> Type Parameters Name Description TKey | Improve this Doc View Source Include<TNavigate>(Expression<Func<T1, TNavigate>>) 贪婪加载导航属性，如果查询中已经使用了 a.Parent.Parent 类似表达式，则可以无需此操作 Declaration ISelect<T1> Include<TNavigate>(Expression<Func<T1, TNavigate>> navigateSelector) where TNavigate : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TNavigate>> navigateSelector 选择一个导航属性 Returns Type Description ISelect <T1> Type Parameters Name Description TNavigate | Improve this Doc View Source IncludeByPropertyName(String) 按属性名字符串进行 Include/IncludeMany 操作 Declaration ISelect<T1> IncludeByPropertyName(string property) Parameters Type Name Description System.String property Returns Type Description ISelect <T1> | Improve this Doc View Source IncludeByPropertyNameIf(Boolean, String) 按属性名字符串进行 Include/IncludeMany 操作 Declaration ISelect<T1> IncludeByPropertyNameIf(bool condition, string property) Parameters Type Name Description System.Boolean condition true 时生效 System.String property Returns Type Description ISelect <T1> | Improve this Doc View Source IncludeIf<TNavigate>(Boolean, Expression<Func<T1, TNavigate>>) 贪婪加载导航属性，如果查询中已经使用了 a.Parent.Parent 类似表达式，则可以无需此操作 Declaration ISelect<T1> IncludeIf<TNavigate>(bool condition, Expression<Func<T1, TNavigate>> navigateSelector) where TNavigate : class Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, TNavigate>> navigateSelector 选择一个导航属性 Returns Type Description ISelect <T1> Type Parameters Name Description TNavigate | Improve this Doc View Source IncludeMany<TNavigate>(Expression<Func<T1, IEnumerable<TNavigate>>>, Action<ISelect<TNavigate>>) 贪婪加载集合的导航属性，其实是分两次查询，ToList 后进行了数据重装 文档：https://github.com/2881099/FreeSql/wiki/%e8%b4%aa%e5%a9%aa%e5%8a%a0%e8%bd%bd#%E5%AF%BC%E8%88%AA%E5%B1%9E%E6%80%A7-onetomanymanytomany Declaration ISelect<T1> IncludeMany<TNavigate>(Expression<Func<T1, IEnumerable<TNavigate>>> navigateSelector, Action<ISelect<TNavigate>> then = null) where TNavigate : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Collections.Generic.IEnumerable <TNavigate>>> navigateSelector 选择一个集合的导航属性，如： .IncludeMany(a => a.Tags) 可以 .Where 设置临时的关系映射，如： .IncludeMany(a => a.Tags.Where(tag => tag.TypeId == a.Id)) 可以 .Take(5) 每个子集合只取5条，如： .IncludeMany(a => a.Tags.Take(5)) 可以 .Select 设置只查询部分字段，如： (a => new TNavigate { Title = a.Title }) System.Action < ISelect <TNavigate>> then 即能 ThenInclude，还可以二次过滤（这个 EFCore 做不到？） Returns Type Description ISelect <T1> Type Parameters Name Description TNavigate | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, TTargetEntity>>) 将查询转换为 INSERT INTO tableName SELECT ... FROM t 执行插入 Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName 指定插入的表名，若为 null 则使用 TTargetEntity 实体表名 System.Linq.Expressions.Expression < System.Func <T1, TTargetEntity>> select 选择列 Returns Type Description System.Int32 返回影响的行数 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source Max<TMember>(Expression<Func<T1, TMember>>) 最大值 Declaration TMember Max<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column 列 Returns Type Description TMember Type Parameters Name Description TMember 返回类型 | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, TMember>>) 最小值 Declaration TMember Min<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column 列 Returns Type Description TMember Type Parameters Name Description TMember 返回类型 | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Boolean, Expression<Func<T1, TMember>>) 按列排序，OrderBy(true, a => a.Time) Declaration ISelect<T1> OrderBy<TMember>(bool condition, Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, TMember>>) 按列排序，OrderBy(a => a.Time) Declaration ISelect<T1> OrderBy<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Boolean, Expression<Func<T1, TMember>>) 按列倒向排序，OrderByDescending(true, a => a.Time) Declaration ISelect<T1> OrderByDescending<TMember>(bool condition, Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, TMember>> column 列 Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, TMember>>) 按列倒向排序，OrderByDescending(a => a.Time) Declaration ISelect<T1> OrderByDescending<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column 列 Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, TMember>>, Boolean) 按列排序，OrderByIf(true, a => a.Time) Declaration ISelect<T1> OrderByIf<TMember>(bool condition, Expression<Func<T1, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Boolean descending true: DESC, false: ASC Returns Type Description ISelect <T1> Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, TMember>>) 求和 Declaration decimal Sum<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column 列 Returns Type Description System.Decimal Type Parameters Name Description TMember 返回类型 | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>>) 执行SQL查询，返回指定字段的聚合结果 Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) 执行SQL查询，分块返回数据，可减少内存开销。比如读取10万条数据，每次返回100条处理。 Declaration void ToChunk<TReturn>(Expression<Func<T1, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select 选择列 System.Int32 size 数据块的大小 System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done 处理数据块 Type Parameters Name Description TReturn 返回类型 | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, TReturn>>) 执行SQL查询，返回 DataTable Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() 执行SQL查询，返回 TDto 映射的字段，记录不存在时返回 Count 为 0 的列表 Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, TReturn>>) 执行SQL查询，返回指定字段的记录，记录不存在时返回 Count 为 0 的列表 Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select 选择列 Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn 返回类型 | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TDto>() 执行SQL查询，返回 TDto 映射的字段，记录不存在时返回 Dto 默认值 Declaration TDto ToOne<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, TReturn>>) 执行SQL查询，返回指定字段的记录的第一条记录，记录不存在时返回 TReturn 默认值 Declaration TReturn ToOne<TReturn>(Expression<Func<T1, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select 选择列 Returns Type Description TReturn Type Parameters Name Description TReturn 返回类型 | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TDto>(CancellationToken) Declaration Task<TDto> ToOneAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, TReturn>>, FieldAliasOptions) 返回即将执行的SQL语句 Declaration string ToSql<TReturn>(Expression<Func<T1, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TReturn>> select 选择列 FieldAliasOptions fieldAlias 字段别名 Returns Type Description System.String Type Parameters Name Description TReturn 返回类型 | Improve this Doc View Source Where(Expression<Func<T1, Boolean>>) 查询条件，Where(a => a.Id > 10)，支持导航对象查询，Where(a => a.Author.Email == \"2881099@qq.com&quot;) Declaration ISelect<T1> Where(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式 Returns Type Description ISelect <T1> | Improve this Doc View Source Where<T2>(Expression<Func<T2, Boolean>>) 多表条件查询 Declaration ISelect<T1> Where<T2>(Expression<Func<T2, bool>> exp) where T2 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T2, System.Boolean >> exp lambda表达式 Returns Type Description ISelect <T1> Type Parameters Name Description T2 | Improve this Doc View Source Where<T2>(Expression<Func<T1, T2, Boolean>>) 多表条件查询 Declaration ISelect<T1> Where<T2>(Expression<Func<T1, T2, bool>> exp) where T2 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp lambda表达式 Returns Type Description ISelect <T1> Type Parameters Name Description T2 | Improve this Doc View Source Where<T2, T3>(Expression<Func<T1, T2, T3, Boolean>>) 多表条件查询 Declaration ISelect<T1> Where<T2, T3>(Expression<Func<T1, T2, T3, bool>> exp) where T2 : class where T3 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp lambda表达式 Returns Type Description ISelect <T1> Type Parameters Name Description T2 T3 | Improve this Doc View Source Where<T2, T3, T4>(Expression<Func<T1, T2, T3, T4, Boolean>>) 多表条件查询 Declaration ISelect<T1> Where<T2, T3, T4>(Expression<Func<T1, T2, T3, T4, bool>> exp) where T2 : class where T3 : class where T4 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp lambda表达式 Returns Type Description ISelect <T1> Type Parameters Name Description T2 T3 T4 | Improve this Doc View Source Where<T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) 多表条件查询 Declaration ISelect<T1> Where<T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) where T2 : class where T3 : class where T4 : class where T5 : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp lambda表达式 Returns Type Description ISelect <T1> Type Parameters Name Description T2 T3 T4 T5 | Improve this Doc View Source WhereCascade(Expression<Func<T1, Boolean>>) 多表查询时，该方法标记后，表达式条件将对所有表进行附加 例如：软删除、租户，每个表都给条件，挺麻烦的 fsql.Select<T1>().LeftJoin<T2>(...).Where<T2>((t1, t2 => t1.IsDeleted == false && t2.IsDeleted == false) 修改：fsql.Select<T1>().LeftJoin<T2>(...).WhereCascade(t1 => t1.IsDeleted == false) 当其中的实体可附加表达式才会进行，表越多时收益越大 Declaration ISelect<T1> WhereCascade(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description ISelect <T1> | Improve this Doc View Source WhereDynamic(Object, Boolean) 传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration ISelect<T1> WhereDynamic(object dywhere, bool not = false) Parameters Type Name Description System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 System.Boolean not 是否标识为NOT Returns Type Description ISelect <T1> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, Boolean>>) 查询条件，Where(true, a => a.Id > 10)，支导航对象查询，Where(true, a => a.Author.Email == \"2881099@qq.com&quot;) Declaration ISelect<T1> WhereIf(bool condition, Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式 Returns Type Description ISelect <T1> | Improve this Doc View Source WithSql(String, Object) 实现 select .. from ( select ... from t ) a 这样的功能 使用 AsTable 方法也可以达到效果 示例：WithSql(\"select * from id=@id&quot;, new { id = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration ISelect<T1> WithSql(string sql, object parms = null) Parameters Type Name Description System.String sql SQL语句 System.Object parms 参数 Returns Type Description ISelect <T1> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-10.html": {
    "href": "api/FreeSql.ISelect-10.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-11.html": {
    "href": "api/FreeSql.ISelect-11.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-12.html": {
    "href": "api/FreeSql.ISelect-12.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-13.html": {
    "href": "api/FreeSql.ISelect-13.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, string sqlT13, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.String sqlT13 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-14.html": {
    "href": "api/FreeSql.ISelect-14.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, string sqlT13, string sqlT14, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.String sqlT13 System.String sqlT14 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-15.html": {
    "href": "api/FreeSql.ISelect-15.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class where T15 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, string sqlT13, string sqlT14, string sqlT15, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.String sqlT13 System.String sqlT14 System.String sqlT15 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-16.html": {
    "href": "api/FreeSql.ISelect-16.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class where T10 : class where T11 : class where T12 : class where T13 : class where T14 : class where T15 : class where T16 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, ISelectGroupingAggregate <T16>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, ISelectGroupingAggregate <T16>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, ISelectGroupingAggregate<T10>, ISelectGroupingAggregate<T11>, ISelectGroupingAggregate<T12>, ISelectGroupingAggregate<T13>, ISelectGroupingAggregate<T14>, ISelectGroupingAggregate<T15>, ISelectGroupingAggregate<T16>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, ISelectGroupingAggregate <T10>, ISelectGroupingAggregate <T11>, ISelectGroupingAggregate <T12>, ISelectGroupingAggregate <T13>, ISelectGroupingAggregate <T14>, ISelectGroupingAggregate <T15>, ISelectGroupingAggregate <T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, string sqlT10, string sqlT11, string sqlT12, string sqlT13, string sqlT14, string sqlT15, string sqlT16, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.String sqlT10 System.String sqlT11 System.String sqlT12 System.String sqlT13 System.String sqlT14 System.String sqlT15 System.String sqlT16 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-2.html": {
    "href": "api/FreeSql.ISelect-2.html",
    "title": "Interface ISelect<T1, T2> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2> Inherited Members ISelect0<ISelect<T1, T2>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2>, T1>.ToOne() ISelect0<ISelect<T1, T2>, T1>.First() ISelect0<ISelect<T1, T2>, T1>.ToDelete() ISelect0<ISelect<T1, T2>, T1>.ToUpdate() ISelect0<ISelect<T1, T2>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2>, T1>.AsType(Type) ISelect0<ISelect<T1, T2>, T1>.ToSql(String) ISelect0<ISelect<T1, T2>, T1>.Any() ISelect0<ISelect<T1, T2>, T1>.Count() ISelect0<ISelect<T1, T2>, T1>.Count(Int64) ISelect0<ISelect<T1, T2>, T1>.Master() ISelect0<ISelect<T1, T2>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2>, T1>.Take(Int32) ISelect0<ISelect<T1, T2>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2> : ISelect0<ISelect<T1, T2>, T1>, ISelect0 where T2 : class Type Parameters Name Description T1 T2 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>>, out TReturn) Declaration ISelect<T1, T2> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2>> GroupBy<TKey>(Expression<Func<T1, T2, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> InnerJoin(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> InnerJoin(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> LeftJoin(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> LeftJoin(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, TMember>>) Declaration ISelect<T1, T2> OrderBy<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration ISelect<T1, T2> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, TMember>>) Declaration ISelect<T1, T2> OrderByDescending<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration ISelect<T1, T2> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, TMember>>, Boolean) Declaration ISelect<T1, T2> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2>, TMember>>, Boolean) Declaration ISelect<T1, T2> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> RightJoin(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> RightJoin(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> Where(Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> Where(Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, Boolean>>) Declaration ISelect<T1, T2> WhereIf(bool condition, Expression<Func<T1, T2, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2>, Boolean>>) Declaration ISelect<T1, T2> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2>, System.Boolean >> exp Returns Type Description ISelect <T1, T2> | Improve this Doc View Source WithSql(String, String, Object) Declaration ISelect<T1, T2> WithSql(string sqlT1, string sqlT2, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.Object parms Returns Type Description ISelect <T1, T2> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-3.html": {
    "href": "api/FreeSql.ISelect-3.html",
    "title": "Interface ISelect<T1, T2, T3> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3> Inherited Members ISelect0<ISelect<T1, T2, T3>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3>, T1>.First() ISelect0<ISelect<T1, T2, T3>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3>, T1>.Any() ISelect0<ISelect<T1, T2, T3>, T1>.Count() ISelect0<ISelect<T1, T2, T3>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3>, T1>.Master() ISelect0<ISelect<T1, T2, T3>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3> : ISelect0<ISelect<T1, T2, T3>, T1>, ISelect0 where T2 : class where T3 : class Type Parameters Name Description T1 T2 T3 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3>> GroupBy<TKey>(Expression<Func<T1, T2, T3, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> InnerJoin(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> LeftJoin(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration ISelect<T1, T2, T3> OrderBy<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration ISelect<T1, T2, T3> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration ISelect<T1, T2, T3> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration ISelect<T1, T2, T3> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, TMember>>, Boolean) Declaration ISelect<T1, T2, T3> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> RightJoin(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> RightJoin(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> Where(Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> Where(Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, Boolean>>) Declaration ISelect<T1, T2, T3> WhereIf(bool condition, Expression<Func<T1, T2, T3, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3>, Boolean>>) Declaration ISelect<T1, T2, T3> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3> | Improve this Doc View Source WithSql(String, String, String, Object) Declaration ISelect<T1, T2, T3> WithSql(string sqlT1, string sqlT2, string sqlT3, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.Object parms Returns Type Description ISelect <T1, T2, T3> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-4.html": {
    "href": "api/FreeSql.ISelect-4.html",
    "title": "Interface ISelect<T1, T2, T3, T4> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4> Inherited Members ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4> : ISelect0<ISelect<T1, T2, T3, T4>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class Type Parameters Name Description T1 T2 T3 T4 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> InnerJoin(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> LeftJoin(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration ISelect<T1, T2, T3, T4> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration ISelect<T1, T2, T3, T4> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration ISelect<T1, T2, T3, T4> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration ISelect<T1, T2, T3, T4> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> RightJoin(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> Where(Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> Where(Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, Boolean>>) Declaration ISelect<T1, T2, T3, T4> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4>, Boolean>>) Declaration ISelect<T1, T2, T3, T4> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4> | Improve this Doc View Source WithSql(String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-5.html": {
    "href": "api/FreeSql.ISelect-5.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5> : ISelect0<ISelect<T1, T2, T3, T4, T5>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class Type Parameters Name Description T1 T2 T3 T4 T5 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> RightJoin(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> Where(Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5> | Improve this Doc View Source WithSql(String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-6.html": {
    "href": "api/FreeSql.ISelect-6.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> Where(Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> | Improve this Doc View Source WithSql(String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-7.html": {
    "href": "api/FreeSql.ISelect-7.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-8.html": {
    "href": "api/FreeSql.ISelect-8.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelect-9.html": {
    "href": "api/FreeSql.ISelect-9.html",
    "title": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> | FreeSql API Docs",
    "keywords": "Interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> Inherited Members ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDataTableAsync(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDictionaryAsync<TKey>(Func<T1, TKey>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDictionaryAsync<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToListAsync(Boolean, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToListAsync<TTuple>(String, CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToOneAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.FirstAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.AnyAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.CountAsync(CancellationToken) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Cancel(Func<Boolean>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.WithTransaction(DbTransaction) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.WithConnection(DbConnection) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.CommandTimeout(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.TrackToList(Action<Object>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDataTable(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDictionary<TKey>(Func<T1, TKey>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDictionary<TKey, TElement>(Func<T1, TKey>, Func<T1, TElement>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToList(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToChunk(Int32, Action<FetchCallbackArgs<List<T1>>>, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToList<TTuple>(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToOne() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.First() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToDelete() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToUpdate() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.AsTable(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.AsAlias(Func<Type, String, String>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.AsType(Type) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ToSql(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Any() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Count() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Count(Int64) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Master() ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.LeftJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InnerJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.RightJoin(Expression<Func<T1, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.LeftJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InnerJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.RightJoin<T2>(Expression<Func<T1, T2, Boolean>>) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.LeftJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.InnerJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.RightJoin(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.RawJoin(String) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Where(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.WhereIf(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.WhereDynamicFilter(DynamicFilterInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.DisableGlobalFilter(String[]) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.ForUpdate(Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.GroupBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Having(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.OrderBy(String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.OrderBy(Boolean, String, Object) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.OrderByPropertyName(String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.OrderByPropertyNameIf(Boolean, String, Boolean) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Skip(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Offset(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Limit(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Take(Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Page(Int32, Int32) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Page(BasePagingInfo) ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>.Distinct() Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> : ISelect0<ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9>, T1>, ISelect0 where T2 : class where T3 : class where T4 : class where T5 : class where T6 : class where T7 : class where T8 : class where T9 : class Type Parameters Name Description T1 T2 T3 T4 T5 T6 T7 T8 T9 Methods | Improve this Doc View Source Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>>, out TReturn) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> Aggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>> select, out TReturn result) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, TReturn>> select TReturn result Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TReturn | Improve this Doc View Source Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration bool Any(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration bool Any(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description System.Boolean | Improve this Doc View Source AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>, CancellationToken) Declaration Task<bool> AnyAsync(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration double Avg<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration double Avg<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description System.Double Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, CancellationToken) Declaration Task<double> AvgAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Double > Type Parameters Name Description TMember | Improve this Doc View Source First<TDto>() Declaration TDto First<TDto>() Returns Type Description TDto Type Parameters Name Description TDto | Improve this Doc View Source First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>) Declaration TReturn First<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, CancellationToken) Declaration Task<TReturn> FirstAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source FirstAsync<TDto>(CancellationToken) Declaration Task<TDto> FirstAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TDto> Type Parameters Name Description TDto | Improve this Doc View Source GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>> GroupBy<TKey>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>> Type Parameters Name Description TKey | Improve this Doc View Source GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TKey>>) Declaration ISelectGrouping<TKey, NativeTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>> GroupBy<TKey>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TKey>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TKey>> exp Returns Type Description ISelectGrouping <TKey, NativeTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>> Type Parameters Name Description TKey | Improve this Doc View Source InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> InnerJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> InnerJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertInto<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>>) Declaration int InsertInto<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>> select) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>> select Returns Type Description System.Int32 Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source InsertIntoAsync<TTargetEntity>(String, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>>, CancellationToken) Declaration Task<int> InsertIntoAsync<TTargetEntity>(string tableName, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>> select, CancellationToken cancellationToken = default(CancellationToken)) where TTargetEntity : class Parameters Type Name Description System.String tableName System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TTargetEntity>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > Type Parameters Name Description TTargetEntity | Improve this Doc View Source LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> LeftJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> LeftJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration TMember Max<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration TMember Max<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, CancellationToken) Declaration Task<TMember> MaxAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration TMember Min<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration TMember Min<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description TMember Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, CancellationToken) Declaration Task<TMember> MinAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TMember> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> OrderBy<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> OrderBy<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> OrderByDescending<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> OrderByDescending<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> OrderByIf<TMember>(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source OrderByIf<TMember>(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, Boolean) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> OrderByIf<TMember>(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, bool descending = false) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Boolean descending Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> RightJoin(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> RightJoin(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>) Declaration decimal Sum<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column Returns Type Description System.Decimal Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>>, CancellationToken) Declaration Task<decimal> SumAsync<TMember>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TMember>> column System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Decimal > Type Parameters Name Description TMember | Improve this Doc View Source ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>>) Declaration TReturn ToAggregate<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToAggregateAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<T1>, ISelectGroupingAggregate<T2>, ISelectGroupingAggregate<T3>, ISelectGroupingAggregate<T4>, ISelectGroupingAggregate<T5>, ISelectGroupingAggregate<T6>, ISelectGroupingAggregate<T7>, ISelectGroupingAggregate<T8>, ISelectGroupingAggregate<T9>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <T1>, ISelectGroupingAggregate <T2>, ISelectGroupingAggregate <T3>, ISelectGroupingAggregate <T4>, ISelectGroupingAggregate <T5>, ISelectGroupingAggregate <T6>, ISelectGroupingAggregate <T7>, ISelectGroupingAggregate <T8>, ISelectGroupingAggregate <T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, Int32, Action<FetchCallbackArgs<List<TReturn>>>) Declaration void ToChunk<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, int size, Action<FetchCallbackArgs<List<TReturn>>> done) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Int32 size System.Action < FetchCallbackArgs < System.Collections.Generic.List <TReturn>>> done Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>) Declaration DataTable ToDataTable<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select Returns Type Description System.Data.DataTable Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, CancellationToken) Declaration Task<DataTable> ToDataTableAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Data.DataTable > Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TDto>() Declaration List<TDto> ToList<TDto>() Returns Type Description System.Collections.Generic.List <TDto> Type Parameters Name Description TDto | Improve this Doc View Source ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>) Declaration List<TReturn> ToList<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToListAsync<TDto>(CancellationToken) Declaration Task<List<TDto>> ToListAsync<TDto>(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TDto>> Type Parameters Name Description TDto | Improve this Doc View Source ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>) Declaration TReturn ToOne<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select Returns Type Description TReturn Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, CancellationToken) Declaration Task<TReturn> ToOneAsync<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>>, FieldAliasOptions) Declaration string ToSql<TReturn>(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, TReturn>> select FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn | Improve this Doc View Source Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> Where(Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> Where(Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> WhereIf(bool condition, Expression<Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, T6, T7, T8, T9, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, Boolean>>) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> WhereIf(bool condition, Expression<Func<HzyTuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func < HzyTuple <T1, T2, T3, T4, T5, T6, T7, T8, T9>, System.Boolean >> exp Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> | Improve this Doc View Source WithSql(String, String, String, String, String, String, String, String, String, Object) Declaration ISelect<T1, T2, T3, T4, T5, T6, T7, T8, T9> WithSql(string sqlT1, string sqlT2, string sqlT3, string sqlT4, string sqlT5, string sqlT6, string sqlT7, string sqlT8, string sqlT9, object parms = null) Parameters Type Name Description System.String sqlT1 System.String sqlT2 System.String sqlT3 System.String sqlT4 System.String sqlT5 System.String sqlT6 System.String sqlT7 System.String sqlT8 System.String sqlT9 System.Object parms Returns Type Description ISelect <T1, T2, T3, T4, T5, T6, T7, T8, T9> Extension Methods FreeSqlGlobalExtensions.OrderByRandom<TSelect, T1>(FreeSql.ISelect0<TSelect, T1>)"
  },
  "api/FreeSql.ISelectFromExpression-1.html": {
    "href": "api/FreeSql.ISelectFromExpression-1.html",
    "title": "Interface ISelectFromExpression<T1> | FreeSql API Docs",
    "keywords": "Interface ISelectFromExpression<T1> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelectFromExpression<T1> Type Parameters Name Description T1 Methods | Improve this Doc View Source InnerJoin(Expression<Func<T1, Boolean>>) Declaration ISelectFromExpression<T1> InnerJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description ISelectFromExpression <T1> | Improve this Doc View Source LeftJoin(Expression<Func<T1, Boolean>>) Declaration ISelectFromExpression<T1> LeftJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description ISelectFromExpression <T1> | Improve this Doc View Source OrderBy<TMember>(Expression<Func<T1, TMember>>) 按列排序，OrderBy(a => a.Time) Declaration ISelectFromExpression<T1> OrderBy<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column Returns Type Description ISelectFromExpression <T1> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<T1, TMember>>) 按列倒向排序，OrderByDescending(a => a.Time) Declaration ISelectFromExpression<T1> OrderByDescending<TMember>(Expression<Func<T1, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column 列 Returns Type Description ISelectFromExpression <T1> Type Parameters Name Description TMember | Improve this Doc View Source RightJoin(Expression<Func<T1, Boolean>>) Declaration ISelectFromExpression<T1> RightJoin(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp Returns Type Description ISelectFromExpression <T1> | Improve this Doc View Source Where(Expression<Func<T1, Boolean>>) 查询条件，Where(a => a.Id > 10)，支持导航对象查询，Where(a => a.Author.Email == \"2881099@qq.com&quot;) Declaration ISelectFromExpression<T1> Where(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式 Returns Type Description ISelectFromExpression <T1> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, Boolean>>) 查询条件，Where(true, a => a.Id > 10)，支导航对象查询，Where(true, a => a.Author.Email == \"2881099@qq.com&quot;) Declaration ISelectFromExpression<T1> WhereIf(bool condition, Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式 Returns Type Description ISelectFromExpression <T1>"
  },
  "api/FreeSql.ISelectGrouping-2.html": {
    "href": "api/FreeSql.ISelectGrouping-2.html",
    "title": "Interface ISelectGrouping<TKey, TValue> | FreeSql API Docs",
    "keywords": "Interface ISelectGrouping<TKey, TValue> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelectGrouping<TKey, TValue> Type Parameters Name Description TKey TValue Methods | Improve this Doc View Source Count() 查询的记录数量 Declaration long Count() Returns Type Description System.Int64 | Improve this Doc View Source Count(out Int64) 查询的记录数量，以参数out形式返回 Declaration ISelectGrouping<TKey, TValue> Count(out long count) Parameters Type Name Description System.Int64 count 返回的变量 Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source CountAsync(CancellationToken) Declaration Task<long> CountAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source Having(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, Boolean>>) 按聚合条件过滤，Where(a => a.Count() > 10) Declaration ISelectGrouping<TKey, TValue> Having(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, System.Boolean >> exp lambda表达式 Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Limit(Int32) 查询多少条数据 Declaration ISelectGrouping<TKey, TValue> Limit(int limit) Parameters Type Name Description System.Int32 limit Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Offset(Int32) 查询向后偏移行数 Declaration ISelectGrouping<TKey, TValue> Offset(int offset) Parameters Type Name Description System.Int32 offset 行数 Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source OrderBy<TMember>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TMember>>) 按列排序，OrderBy(a => a.Time) Declaration ISelectGrouping<TKey, TValue> OrderBy<TMember>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TMember>> column Returns Type Description ISelectGrouping <TKey, TValue> Type Parameters Name Description TMember | Improve this Doc View Source OrderByDescending<TMember>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TMember>>) 按列倒向排序，OrderByDescending(a => a.Time) Declaration ISelectGrouping<TKey, TValue> OrderByDescending<TMember>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TMember>> column) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TMember>> column 列 Returns Type Description ISelectGrouping <TKey, TValue> Type Parameters Name Description TMember | Improve this Doc View Source Page(BasePagingInfo) 分页 Declaration ISelectGrouping<TKey, TValue> Page(BasePagingInfo pagingInfo) Parameters Type Name Description BasePagingInfo pagingInfo 分页信息 Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Page(Int32, Int32) 分页 Declaration ISelectGrouping<TKey, TValue> Page(int pageNumber, int pageSize) Parameters Type Name Description System.Int32 pageNumber 第几页 System.Int32 pageSize 每页多少 Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Select<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>>) 【linq to sql】专用方法，不建议直接使用 Declaration List<TReturn> Select<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TReturn>> select Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn | Improve this Doc View Source Skip(Int32) 查询向后偏移行数 Declaration ISelectGrouping<TKey, TValue> Skip(int offset) Parameters Type Name Description System.Int32 offset Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source Take(Int32) 查询多少条数据 Declaration ISelectGrouping<TKey, TValue> Take(int limit) Parameters Type Name Description System.Int32 limit Returns Type Description ISelectGrouping <TKey, TValue> | Improve this Doc View Source ToDictionary<TElement>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TElement>>) Declaration Dictionary<TKey, TElement> ToDictionary<TElement>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TElement>> elementSelector) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TElement>> elementSelector Returns Type Description System.Collections.Generic.Dictionary <TKey, TElement> Type Parameters Name Description TElement | Improve this Doc View Source ToDictionaryAsync<TElement>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TElement>>, CancellationToken) Declaration Task<Dictionary<TKey, TElement>> ToDictionaryAsync<TElement>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TElement>> elementSelector, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TElement>> elementSelector System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.Dictionary <TKey, TElement>> Type Parameters Name Description TElement | Improve this Doc View Source ToList<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>>) 执行SQL查询，返回指定字段的记录，记录不存在时返回 Count 为 0 的列表 Declaration List<TReturn> ToList<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>> select) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TReturn>> select 选择列 Returns Type Description System.Collections.Generic.List <TReturn> Type Parameters Name Description TReturn 返回类型 | Improve this Doc View Source ToListAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>>, CancellationToken) Declaration Task<List<TReturn>> ToListAsync<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>> select, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TReturn>> select System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TReturn>> Type Parameters Name Description TReturn | Improve this Doc View Source ToSql(String) 返回即将执行的SQL语句 Declaration string ToSql(string field) Parameters Type Name Description System.String field 指定字段 Returns Type Description System.String | Improve this Doc View Source ToSql<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>>, FieldAliasOptions) 返回即将执行的SQL语句 Declaration string ToSql<TReturn>(Expression<Func<ISelectGroupingAggregate<TKey, TValue>, TReturn>> select, FieldAliasOptions fieldAlias = FieldAliasOptions.AsIndex) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func < ISelectGroupingAggregate <TKey, TValue>, TReturn>> select 选择列 FieldAliasOptions fieldAlias Returns Type Description System.String Type Parameters Name Description TReturn 返回类型"
  },
  "api/FreeSql.ISelectGroupingAggregate-1.html": {
    "href": "api/FreeSql.ISelectGroupingAggregate-1.html",
    "title": "Interface ISelectGroupingAggregate<TKey> | FreeSql API Docs",
    "keywords": "Interface ISelectGroupingAggregate<TKey> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelectGroupingAggregate<TKey> Type Parameters Name Description TKey Properties | Improve this Doc View Source Key 分组的数据 Declaration TKey Key { get; set; } Property Value Type Description TKey Methods | Improve this Doc View Source Avg<T3>(T3) 平均值 Declaration decimal Avg<T3>(T3 column) Parameters Type Name Description T3 column Returns Type Description System.Decimal Type Parameters Name Description T3 | Improve this Doc View Source Count() 记录总数 Declaration int Count() Returns Type Description System.Int32 | Improve this Doc View Source Count<T3>(T3) Declaration int Count<T3>(T3 column) Parameters Type Name Description T3 column Returns Type Description System.Int32 Type Parameters Name Description T3 | Improve this Doc View Source Max<T3>(T3) 最大值 Declaration T3 Max<T3>(T3 column) Parameters Type Name Description T3 column Returns Type Description T3 Type Parameters Name Description T3 | Improve this Doc View Source Min<T3>(T3) 最小值 Declaration T3 Min<T3>(T3 column) Parameters Type Name Description T3 column Returns Type Description T3 Type Parameters Name Description T3 | Improve this Doc View Source Sum<T3>(T3) 求和 Declaration decimal Sum<T3>(T3 column) Parameters Type Name Description T3 column Returns Type Description System.Decimal Type Parameters Name Description T3"
  },
  "api/FreeSql.ISelectGroupingAggregate-2.html": {
    "href": "api/FreeSql.ISelectGroupingAggregate-2.html",
    "title": "Interface ISelectGroupingAggregate<TKey, TValue> | FreeSql API Docs",
    "keywords": "Interface ISelectGroupingAggregate<TKey, TValue> Inherited Members ISelectGroupingAggregate<TKey>.Key ISelectGroupingAggregate<TKey>.Count() ISelectGroupingAggregate<TKey>.Count<T3>(T3) ISelectGroupingAggregate<TKey>.Sum<T3>(T3) ISelectGroupingAggregate<TKey>.Avg<T3>(T3) ISelectGroupingAggregate<TKey>.Max<T3>(T3) ISelectGroupingAggregate<TKey>.Min<T3>(T3) Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISelectGroupingAggregate<TKey, TValue> : ISelectGroupingAggregate<TKey> Type Parameters Name Description TKey TValue Properties | Improve this Doc View Source Value 所有元素 Declaration TValue Value { get; set; } Property Value Type Description TValue"
  },
  "api/FreeSql.IUpdate-1.html": {
    "href": "api/FreeSql.IUpdate-1.html",
    "title": "Interface IUpdate<T1> | FreeSql API Docs",
    "keywords": "Interface IUpdate<T1> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface IUpdate<T1> Type Parameters Name Description T1 Methods | Improve this Doc View Source AsTable(Func<String, String>) 设置表名规则，可用于分库/分表，参数1：默认表名；返回值：新表名； Declaration IUpdate<T1> AsTable(Func<string, string> tableRule) Parameters Type Name Description System.Func < System.String , System.String > tableRule Returns Type Description IUpdate <T1> | Improve this Doc View Source AsType(Type) 动态Type，在使用 Update<object> 后使用本方法，指定实体类型 Declaration IUpdate<T1> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IUpdate <T1> | Improve this Doc View Source BatchOptions(Int32, Int32, Boolean) 批量执行选项设置，一般不需要使用该方法 各数据库 rows, parameters 限制不一样，默认设置： MySql 500 3000 PostgreSQL 500 3000 SqlServer 500 2100 Oracle 200 999 Sqlite 200 999 若没有事务传入，内部(默认)会自动开启新事务，保证拆包执行的完整性。 Declaration IUpdate<T1> BatchOptions(int rowsLimit, int parameterLimit, bool autoTransaction = true) Parameters Type Name Description System.Int32 rowsLimit 指定根据 rows 上限数量拆分执行 System.Int32 parameterLimit 指定根据 parameters 上限数量拆分执行 System.Boolean autoTransaction 是否自动开启事务 Returns Type Description IUpdate <T1> | Improve this Doc View Source BatchProgress(Action<BatchProgressStatus<T1>>) 批量执行时，分批次执行的进度状态 Declaration IUpdate<T1> BatchProgress(Action<BatchProgressStatus<T1>> callback) Parameters Type Name Description System.Action < BatchProgressStatus <T1>> callback 批量执行时的回调委托 Returns Type Description IUpdate <T1> | Improve this Doc View Source CommandTimeout(Int32) 命令超时设置(秒) Declaration IUpdate<T1> CommandTimeout(int timeout) Parameters Type Name Description System.Int32 timeout Returns Type Description IUpdate <T1> | Improve this Doc View Source DisableGlobalFilter(String[]) 禁用全局过滤功能，不传参数时将禁用所有 Declaration IUpdate<T1> DisableGlobalFilter(params string[] name) Parameters Type Name Description System.String [] name 零个或多个过滤器名字 Returns Type Description IUpdate <T1> | Improve this Doc View Source ExecuteAffrows() 执行SQL语句，返回影响的行数 Declaration int ExecuteAffrows() Returns Type Description System.Int32 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration Task<int> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source ExecuteUpdated() 执行SQL语句，返回更新后的记录 注意：此方法只有 Postgresql/SqlServer 有效果 Declaration List<T1> ExecuteUpdated() Returns Type Description System.Collections.Generic.List <T1> | Improve this Doc View Source ExecuteUpdatedAsync(CancellationToken) Declaration Task<List<T1>> ExecuteUpdatedAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <T1>> | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) 忽略的列，IgnoreColumns(a => a.Name) | IgnoreColumns(a => new{a.Name,a.Time}) | IgnoreColumns(a => new[]{\"name\",\"time\"}) 注意：不能与 UpdateColumns 不能同时使用 Declaration IUpdate<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns lambda选择列 Returns Type Description IUpdate <T1> | Improve this Doc View Source IgnoreColumns(String[]) 忽略的列 注意：不能与 UpdateColumns 不能同时使用 Declaration IUpdate<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns 属性名，或者字段名 Returns Type Description IUpdate <T1> | Improve this Doc View Source NoneParameter(Boolean) 不使用参数化，可通过 IFreeSql.CodeFirst.IsNotCommandParameter 全局性设置 Declaration IUpdate<T1> NoneParameter(bool isNotCommandParameter = true) Parameters Type Name Description System.Boolean isNotCommandParameter 是否不使用参数化 Returns Type Description IUpdate <T1> | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>) 设置列的的新值为基础上增加，格式：Set(a => a.Clicks + 1) 相当于 clicks=clicks+1 指定更新，格式：Set(a => new T { Clicks = a.Clicks + 1, Time = DateTime.Now }) 相当于 set clicks=clicks+1,time='2019-06-19....' Declaration IUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> exp Returns Type Description IUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>, TMember) 设置列的新值，Set(a => a.Name, \"newvalue\") Declaration IUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column lambda选择列 TMember value 新值 Returns Type Description IUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetDto(Object) 设置更新的列 SetDto(new { title = \"xxx\", clicks = 2 }) SetDto(new Dictionary<string, object> { [\"title\"] = \"xxx\", [\"clicks\"] = 2 }) 注意：标记 [Column(CanUpdate = false)] 的属性不会被更新 Declaration IUpdate<T1> SetDto(object dto) Parameters Type Name Description System.Object dto dto 或 Dictionary<string, object> Returns Type Description IUpdate <T1> | Improve this Doc View Source SetIf<TMember>(Boolean, Expression<Func<T1, TMember>>) 设置列的的新值为基础上增加，格式：Set(a => a.Clicks + 1) 相当于 clicks=clicks+1 指定更新，格式：Set(a => new T { Clicks = a.Clicks + 1, Time = DateTime.Now }) 相当于 set clicks=clicks+1,time='2019-06-19....' Declaration IUpdate<T1> SetIf<TMember>(bool condition, Expression<Func<T1, TMember>> exp) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, TMember>> exp Returns Type Description IUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetIf<TMember>(Boolean, Expression<Func<T1, TMember>>, TMember) 设置列的新值，Set(a => a.Name, \"newvalue\") Declaration IUpdate<T1> SetIf<TMember>(bool condition, Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, TMember>> column lambda选择列 TMember value 新值 Returns Type Description IUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetRaw(String, Object) 设置值，自定义SQL语法，SetRaw(\"title = @title&quot;, new { title = \"newtitle\" }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration IUpdate<T1> SetRaw(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法 System.Object parms 参数 Returns Type Description IUpdate <T1> | Improve this Doc View Source SetSource(T1) 更新数据，设置更新的实体 注意：实体必须定义主键，并且最终会自动附加条件 where id = source.Id Declaration IUpdate<T1> SetSource(T1 source) Parameters Type Name Description T1 source 实体 Returns Type Description IUpdate <T1> | Improve this Doc View Source SetSource(IEnumerable<T1>, Expression<Func<T1, Object>>) 更新数据，设置更新的实体集合 注意：实体必须定义主键，并且最终会自动附加条件 where id in (source.Id) Declaration IUpdate<T1> SetSource(IEnumerable<T1> source, Expression<Func<T1, object>> tempPrimarys = null) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> source 实体集合 System.Linq.Expressions.Expression < System.Func <T1, System.Object >> tempPrimarys 根据临时主键更新，a => a.Name | a => new{a.Name,a.Time} | a => new[]{\"name\",\"time\"} Returns Type Description IUpdate <T1> | Improve this Doc View Source SetSourceIgnore(T1, Func<Object, Boolean>) 更新数据，设置更新的实体，同时设置忽略的列 忽略 null 属性：fsql.Update<T>().SetSourceAndIgnore(item, colval => colval == null) 注意：参数 ignore 与 IUpdate.IgnoreColumns/UpdateColumns 不能同时使用 Declaration IUpdate<T1> SetSourceIgnore(T1 source, Func<object, bool> ignore) Parameters Type Name Description T1 source 实体 System.Func < System.Object , System.Boolean > ignore 属性值忽略判断, true忽略 Returns Type Description IUpdate <T1> | Improve this Doc View Source ToSql() 返回即将执行的SQL语句 Declaration string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) 指定的列，UpdateColumns(a => a.Name) | UpdateColumns(a => new{a.Name,a.Time}) | UpdateColumns(a => new[]{\"name\",\"time\"}) 注意：不能与 IgnoreColumns 不能同时使用 Declaration IUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns lambda选择列 Returns Type Description IUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) 指定的列 注意：不能与 IgnoreColumns 同时使用 Declaration IUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns 属性名，或者字段名 Returns Type Description IUpdate <T1> | Improve this Doc View Source Where(T1) 传入实体，将主键作为条件 Declaration IUpdate<T1> Where(T1 item) Parameters Type Name Description T1 item 实体 Returns Type Description IUpdate <T1> | Improve this Doc View Source Where(IEnumerable<T1>) 传入实体集合，将主键作为条件 Declaration IUpdate<T1> Where(IEnumerable<T1> items) Parameters Type Name Description System.Collections.Generic.IEnumerable <T1> items 实体集合 Returns Type Description IUpdate <T1> | Improve this Doc View Source Where(Expression<Func<T1, Boolean>>) lambda表达式条件，仅支持实体基础成员（不包含导航对象） 若想使用导航对象，请使用 ISelect.ToUpdate() 方法 Declaration IUpdate<T1> Where(Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式条件 Returns Type Description IUpdate <T1> | Improve this Doc View Source Where(String, Object) 原生sql语法条件，Where(\"id = @id&quot;, new { id = 1 }) 提示：parms 参数还可以传 Dictionary<string, object> Declaration IUpdate<T1> Where(string sql, object parms = null) Parameters Type Name Description System.String sql sql语法条件 System.Object parms 参数 Returns Type Description IUpdate <T1> | Improve this Doc View Source WhereDynamic(Object, Boolean) 传入动态条件，如：主键值 | new[]{主键值1,主键值2} | TEntity1 | new[]{TEntity1,TEntity2} | new{id=1} Declaration IUpdate<T1> WhereDynamic(object dywhere, bool not = false) Parameters Type Name Description System.Object dywhere 主键值、主键值集合、实体、实体集合、匿名对象、匿名对象集合 System.Boolean not 是否标识为NOT Returns Type Description IUpdate <T1> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<T1, Boolean>>) lambda表达式条件，仅支持实体基础成员（不包含导航对象） 若想使用导航对象，请使用 ISelect.ToUpdate() 方法 Declaration IUpdate<T1> WhereIf(bool condition, Expression<Func<T1, bool>> exp) Parameters Type Name Description System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp lambda表达式条件 Returns Type Description IUpdate <T1> | Improve this Doc View Source WithConnection(DbConnection) 指定事务对象 Declaration IUpdate<T1> WithConnection(DbConnection connection) Parameters Type Name Description System.Data.Common.DbConnection connection Returns Type Description IUpdate <T1> | Improve this Doc View Source WithTransaction(DbTransaction) 指定事务对象 Declaration IUpdate<T1> WithTransaction(DbTransaction transaction) Parameters Type Name Description System.Data.Common.DbTransaction transaction Returns Type Description IUpdate <T1>"
  },
  "api/FreeSql.SqlExt.html": {
    "href": "api/FreeSql.SqlExt.html",
    "title": "Class SqlExt | FreeSql API Docs",
    "keywords": "Class SqlExt SqlExt 是利用自定表达式函数解析功能，解析默认常用的SQL函数，欢迎 PR Inheritance System.Object SqlExt Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.dll Syntax public static class SqlExt Methods | Improve this Doc View Source Avg() avg(..) over(order by ...) Declaration public static SqlExtExtensions.ISqlOver<decimal> Avg() Returns Type Description SqlExtExtensions.ISqlOver < System.Decimal > | Improve this Doc View Source Case() case when .. then .. end Declaration public static SqlExtExtensions.ICaseWhenEnd Case() Returns Type Description SqlExtExtensions.ICaseWhenEnd | Improve this Doc View Source Count() count() over(order by ...) Declaration public static SqlExtExtensions.ISqlOver<long> Count() Returns Type Description SqlExtExtensions.ISqlOver < System.Int64 > | Improve this Doc View Source DenseRank() dense_rank() over(order by ...) Declaration public static SqlExtExtensions.ISqlOver<long> DenseRank() Returns Type Description SqlExtExtensions.ISqlOver < System.Int64 > | Improve this Doc View Source DistinctCount<T>(T) count(distinct name) Declaration public static long DistinctCount<T>(T column) Parameters Type Name Description T column Returns Type Description System.Int64 Type Parameters Name Description T | Improve this Doc View Source FindInSet<TValue>(TValue, String) MySql find_in_set(str, strlist) Declaration public static int FindInSet<TValue>(TValue str, string strlist) Parameters Type Name Description TValue str System.String strlist Returns Type Description System.Int32 Type Parameters Name Description TValue | Improve this Doc View Source GreaterThan<TValue>(TValue, TValue) 大于 > Declaration public static bool GreaterThan<TValue>(TValue value1, TValue value2) Parameters Type Name Description TValue value1 TValue value2 Returns Type Description System.Boolean Type Parameters Name Description TValue | Improve this Doc View Source GreaterThanOrEqual<TValue>(TValue, TValue) 大于或等于 >= Declaration public static bool GreaterThanOrEqual<TValue>(TValue value1, TValue value2) Parameters Type Name Description TValue value1 TValue value2 Returns Type Description System.Boolean Type Parameters Name Description TValue | Improve this Doc View Source GroupConcat(Object) MySql group_concat(distinct .. order by .. separator ..) Declaration public static SqlExtExtensions.IGroupConcat GroupConcat(object column) Parameters Type Name Description System.Object column Returns Type Description SqlExtExtensions.IGroupConcat | Improve this Doc View Source IsNull<TValue>(TValue, TValue) isnull、ifnull、coalesce、nvl Declaration public static TValue IsNull<TValue>(TValue value, TValue defaultValue) Parameters Type Name Description TValue value TValue defaultValue Returns Type Description TValue Type Parameters Name Description TValue | Improve this Doc View Source LessThan<TValue>(TValue, TValue) 小于 < Declaration public static bool LessThan<TValue>(TValue value1, TValue value2) Parameters Type Name Description TValue value1 TValue value2 Returns Type Description System.Boolean Type Parameters Name Description TValue | Improve this Doc View Source LessThanOrEqual<TValue>(TValue, TValue) 小于或等于 <= Declaration public static bool LessThanOrEqual<TValue>(TValue value1, TValue value2) Parameters Type Name Description TValue value1 TValue value2 Returns Type Description System.Boolean Type Parameters Name Description TValue | Improve this Doc View Source Max<T>(T) max(..) over(order by ...) Declaration public static SqlExtExtensions.ISqlOver<T> Max<T>(T column) Parameters Type Name Description T column Returns Type Description SqlExtExtensions.ISqlOver <T> Type Parameters Name Description T | Improve this Doc View Source Min<T>(T) min(..) over(order by ...) Declaration public static SqlExtExtensions.ISqlOver<T> Min<T>(T column) Parameters Type Name Description T column Returns Type Description SqlExtExtensions.ISqlOver <T> Type Parameters Name Description T | Improve this Doc View Source Rank() rank() over(order by ...) Declaration public static SqlExtExtensions.ISqlOver<long> Rank() Returns Type Description SqlExtExtensions.ISqlOver < System.Int64 > | Improve this Doc View Source RowNumber() SqlServer row_number() over(order by ...) Declaration public static SqlExtExtensions.ISqlOver<long> RowNumber() Returns Type Description SqlExtExtensions.ISqlOver < System.Int64 > | Improve this Doc View Source StringAgg(Object, Object) PostgreSQL string_agg(.., ..) Declaration public static string StringAgg(object column, object delimiter) Parameters Type Name Description System.Object column System.Object delimiter Returns Type Description System.String | Improve this Doc View Source Sum(Object) sum(..) over(order by ...) Declaration public static SqlExtExtensions.ISqlOver<decimal> Sum(object column) Parameters Type Name Description System.Object column Returns Type Description SqlExtExtensions.ISqlOver < System.Decimal >"
  },
  "api/FreeSql.SqlExtExtensions.html": {
    "href": "api/FreeSql.SqlExtExtensions.html",
    "title": "Class SqlExtExtensions | FreeSql API Docs",
    "keywords": "Class SqlExtExtensions Inheritance System.Object SqlExtExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.dll Syntax public static class SqlExtExtensions Methods | Improve this Doc View Source Case() Declaration public static SqlExtExtensions.ICaseWhenEnd Case() Returns Type Description SqlExtExtensions.ICaseWhenEnd | Improve this Doc View Source Distinct(SqlExtExtensions.IGroupConcat) Declaration public static SqlExtExtensions.IGroupConcat Distinct(this SqlExtExtensions.IGroupConcat that) Parameters Type Name Description SqlExtExtensions.IGroupConcat that Returns Type Description SqlExtExtensions.IGroupConcat | Improve this Doc View Source Else<TValue>(SqlExtExtensions.ICaseWhenEnd<TValue>, TValue) Declaration public static SqlExtExtensions.ICaseWhenEnd<TValue> Else<TValue>(this SqlExtExtensions.ICaseWhenEnd<TValue> that, TValue then) Parameters Type Name Description SqlExtExtensions.ICaseWhenEnd <TValue> that TValue then Returns Type Description SqlExtExtensions.ICaseWhenEnd <TValue> Type Parameters Name Description TValue | Improve this Doc View Source End<TValue>(SqlExtExtensions.ICaseWhenEnd<TValue>) Declaration public static TValue End<TValue>(this SqlExtExtensions.ICaseWhenEnd<TValue> that) Parameters Type Name Description SqlExtExtensions.ICaseWhenEnd <TValue> that Returns Type Description TValue Type Parameters Name Description TValue | Improve this Doc View Source GroupConcat(Object) Declaration public static SqlExtExtensions.IGroupConcat GroupConcat(object column) Parameters Type Name Description System.Object column Returns Type Description SqlExtExtensions.IGroupConcat | Improve this Doc View Source OrderBy(SqlExtExtensions.IGroupConcat, Object) Declaration public static SqlExtExtensions.IGroupConcat OrderBy(this SqlExtExtensions.IGroupConcat that, object column) Parameters Type Name Description SqlExtExtensions.IGroupConcat that System.Object column Returns Type Description SqlExtExtensions.IGroupConcat | Improve this Doc View Source OrderBy<TValue>(SqlExtExtensions.ISqlOver<TValue>, Object) Declaration public static SqlExtExtensions.ISqlOver<TValue> OrderBy<TValue>(this SqlExtExtensions.ISqlOver<TValue> that, object column) Parameters Type Name Description SqlExtExtensions.ISqlOver <TValue> that System.Object column Returns Type Description SqlExtExtensions.ISqlOver <TValue> Type Parameters Name Description TValue | Improve this Doc View Source OrderByDescending(SqlExtExtensions.IGroupConcat, Object) Declaration public static SqlExtExtensions.IGroupConcat OrderByDescending(this SqlExtExtensions.IGroupConcat that, object column) Parameters Type Name Description SqlExtExtensions.IGroupConcat that System.Object column Returns Type Description SqlExtExtensions.IGroupConcat | Improve this Doc View Source OrderByDescending<TValue>(SqlExtExtensions.ISqlOver<TValue>, Object) Declaration public static SqlExtExtensions.ISqlOver<TValue> OrderByDescending<TValue>(this SqlExtExtensions.ISqlOver<TValue> that, object column) Parameters Type Name Description SqlExtExtensions.ISqlOver <TValue> that System.Object column Returns Type Description SqlExtExtensions.ISqlOver <TValue> Type Parameters Name Description TValue | Improve this Doc View Source Over<TValue>(SqlExtExtensions.ISqlOver<TValue>) Declaration public static SqlExtExtensions.ISqlOver<TValue> Over<TValue>(this SqlExtExtensions.ISqlOver<TValue> that) Parameters Type Name Description SqlExtExtensions.ISqlOver <TValue> that Returns Type Description SqlExtExtensions.ISqlOver <TValue> Type Parameters Name Description TValue | Improve this Doc View Source PartitionBy<TValue>(SqlExtExtensions.ISqlOver<TValue>, Object) Declaration public static SqlExtExtensions.ISqlOver<TValue> PartitionBy<TValue>(this SqlExtExtensions.ISqlOver<TValue> that, object column) Parameters Type Name Description SqlExtExtensions.ISqlOver <TValue> that System.Object column Returns Type Description SqlExtExtensions.ISqlOver <TValue> Type Parameters Name Description TValue | Improve this Doc View Source Separator(SqlExtExtensions.IGroupConcat, Object) Declaration public static SqlExtExtensions.IGroupConcat Separator(this SqlExtExtensions.IGroupConcat that, object separator) Parameters Type Name Description SqlExtExtensions.IGroupConcat that System.Object separator Returns Type Description SqlExtExtensions.IGroupConcat | Improve this Doc View Source StringJoinFirebirdList(Object, Object) Declaration public static string StringJoinFirebirdList(object column, object delimiter) Parameters Type Name Description System.Object column System.Object delimiter Returns Type Description System.String | Improve this Doc View Source StringJoinMySqlGroupConcat(Object, Object) Declaration public static string StringJoinMySqlGroupConcat(object column, object delimiter) Parameters Type Name Description System.Object column System.Object delimiter Returns Type Description System.String | Improve this Doc View Source StringJoinOracleGroupConcat(Object, Object) Declaration public static string StringJoinOracleGroupConcat(object column, object delimiter) Parameters Type Name Description System.Object column System.Object delimiter Returns Type Description System.String | Improve this Doc View Source StringJoinPgsqlGroupConcat(Object, Object) Declaration public static string StringJoinPgsqlGroupConcat(object column, object delimiter) Parameters Type Name Description System.Object column System.Object delimiter Returns Type Description System.String | Improve this Doc View Source StringJoinSqliteGroupConcat(Object, Object) Declaration public static string StringJoinSqliteGroupConcat(object column, object delimiter) Parameters Type Name Description System.Object column System.Object delimiter Returns Type Description System.String | Improve this Doc View Source ToValue(SqlExtExtensions.IGroupConcat) Declaration public static string ToValue(this SqlExtExtensions.IGroupConcat that) Parameters Type Name Description SqlExtExtensions.IGroupConcat that Returns Type Description System.String | Improve this Doc View Source ToValue<TValue>(SqlExtExtensions.ISqlOver<TValue>) Declaration public static TValue ToValue<TValue>(this SqlExtExtensions.ISqlOver<TValue> that) Parameters Type Name Description SqlExtExtensions.ISqlOver <TValue> that Returns Type Description TValue Type Parameters Name Description TValue | Improve this Doc View Source When<TValue>(SqlExtExtensions.ICaseWhenEnd, Boolean, TValue) Declaration public static SqlExtExtensions.ICaseWhenEnd<TValue> When<TValue>(this SqlExtExtensions.ICaseWhenEnd that, bool test, TValue then) Parameters Type Name Description SqlExtExtensions.ICaseWhenEnd that System.Boolean test TValue then Returns Type Description SqlExtExtensions.ICaseWhenEnd <TValue> Type Parameters Name Description TValue | Improve this Doc View Source When<TValue>(SqlExtExtensions.ICaseWhenEnd<TValue>, Boolean, TValue) Declaration public static SqlExtExtensions.ICaseWhenEnd<TValue> When<TValue>(this SqlExtExtensions.ICaseWhenEnd<TValue> that, bool test, TValue then) Parameters Type Name Description SqlExtExtensions.ICaseWhenEnd <TValue> that System.Boolean test TValue then Returns Type Description SqlExtExtensions.ICaseWhenEnd <TValue> Type Parameters Name Description TValue"
  },
  "api/FreeSql.SqlExtExtensions.ICaseWhenEnd.html": {
    "href": "api/FreeSql.SqlExtExtensions.ICaseWhenEnd.html",
    "title": "Interface SqlExtExtensions.ICaseWhenEnd | FreeSql API Docs",
    "keywords": "Interface SqlExtExtensions.ICaseWhenEnd Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ICaseWhenEnd Extension Methods SqlExtExtensions.When<TValue>(SqlExtExtensions.ICaseWhenEnd, Boolean, TValue)"
  },
  "api/FreeSql.SqlExtExtensions.ICaseWhenEnd-1.html": {
    "href": "api/FreeSql.SqlExtExtensions.ICaseWhenEnd-1.html",
    "title": "Interface SqlExtExtensions.ICaseWhenEnd<TValue> | FreeSql API Docs",
    "keywords": "Interface SqlExtExtensions.ICaseWhenEnd<TValue> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ICaseWhenEnd<TValue> Type Parameters Name Description TValue Extension Methods SqlExtExtensions.When<TValue>(SqlExtExtensions.ICaseWhenEnd<TValue>, Boolean, TValue) SqlExtExtensions.Else<TValue>(SqlExtExtensions.ICaseWhenEnd<TValue>, TValue) SqlExtExtensions.End<TValue>(SqlExtExtensions.ICaseWhenEnd<TValue>)"
  },
  "api/FreeSql.SqlExtExtensions.IGroupConcat.html": {
    "href": "api/FreeSql.SqlExtExtensions.IGroupConcat.html",
    "title": "Interface SqlExtExtensions.IGroupConcat | FreeSql API Docs",
    "keywords": "Interface SqlExtExtensions.IGroupConcat Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface IGroupConcat Extension Methods SqlExtExtensions.Distinct(SqlExtExtensions.IGroupConcat) SqlExtExtensions.Separator(SqlExtExtensions.IGroupConcat, Object) SqlExtExtensions.OrderBy(SqlExtExtensions.IGroupConcat, Object) SqlExtExtensions.OrderByDescending(SqlExtExtensions.IGroupConcat, Object) SqlExtExtensions.ToValue(SqlExtExtensions.IGroupConcat)"
  },
  "api/FreeSql.SqlExtExtensions.ISqlOver-1.html": {
    "href": "api/FreeSql.SqlExtExtensions.ISqlOver-1.html",
    "title": "Interface SqlExtExtensions.ISqlOver<TValue> | FreeSql API Docs",
    "keywords": "Interface SqlExtExtensions.ISqlOver<TValue> Namespace : FreeSql Assembly : FreeSql.dll Syntax public interface ISqlOver<TValue> Type Parameters Name Description TValue Extension Methods SqlExtExtensions.Over<TValue>(SqlExtExtensions.ISqlOver<TValue>) SqlExtExtensions.PartitionBy<TValue>(SqlExtExtensions.ISqlOver<TValue>, Object) SqlExtExtensions.OrderBy<TValue>(SqlExtExtensions.ISqlOver<TValue>, Object) SqlExtExtensions.OrderByDescending<TValue>(SqlExtExtensions.ISqlOver<TValue>, Object) SqlExtExtensions.ToValue<TValue>(SqlExtExtensions.ISqlOver<TValue>)"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "FreeSql | FreeSql API Docs",
    "keywords": "FreeSql TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/System.Linq.Expressions.html": {
    "href": "api/System.Linq.Expressions.html",
    "title": "Namespace System.Linq.Expressions | FreeSql API Docs",
    "keywords": "Namespace System.Linq.Expressions Classes LambadaExpressionExtensions"
  },
  "api/System.Linq.Expressions.LambadaExpressionExtensions.html": {
    "href": "api/System.Linq.Expressions.LambadaExpressionExtensions.html",
    "title": "Class LambadaExpressionExtensions | FreeSql API Docs",
    "keywords": "Class LambadaExpressionExtensions Inheritance System.Object LambadaExpressionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System.Linq.Expressions Assembly : FreeSql.dll Syntax public static class LambadaExpressionExtensions Methods | Improve this Doc View Source And<T1>(Expression<Func<T1, Boolean>>, Boolean, Expression<Func<T1, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, bool>> And<T1>(this Expression<Func<T1, bool>> exp1, bool condition, Expression<Func<T1, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> Type Parameters Name Description T1 | Improve this Doc View Source And<T1>(Expression<Func<T1, Boolean>>, Expression<Func<T1, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, bool>> And<T1>(this Expression<Func<T1, bool>> exp1, Expression<Func<T1, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> Type Parameters Name Description T1 | Improve this Doc View Source And<T1, T2>(Expression<Func<T1, T2, Boolean>>, Boolean, Expression<Func<T1, T2, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, bool>> And<T1, T2>(this Expression<Func<T1, T2, bool>> exp1, bool condition, Expression<Func<T1, T2, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> Type Parameters Name Description T1 T2 | Improve this Doc View Source And<T1, T2>(Expression<Func<T1, T2, Boolean>>, Expression<Func<T1, T2, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, bool>> And<T1, T2>(this Expression<Func<T1, T2, bool>> exp1, Expression<Func<T1, T2, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> Type Parameters Name Description T1 T2 | Improve this Doc View Source And<T1, T2, T3>(Expression<Func<T1, T2, T3, Boolean>>, Boolean, Expression<Func<T1, T2, T3, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, bool>> And<T1, T2, T3>(this Expression<Func<T1, T2, T3, bool>> exp1, bool condition, Expression<Func<T1, T2, T3, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source And<T1, T2, T3>(Expression<Func<T1, T2, T3, Boolean>>, Expression<Func<T1, T2, T3, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, bool>> And<T1, T2, T3>(this Expression<Func<T1, T2, T3, bool>> exp1, Expression<Func<T1, T2, T3, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source And<T1, T2, T3, T4>(Expression<Func<T1, T2, T3, T4, Boolean>>, Boolean, Expression<Func<T1, T2, T3, T4, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, T4, bool>> And<T1, T2, T3, T4>(this Expression<Func<T1, T2, T3, T4, bool>> exp1, bool condition, Expression<Func<T1, T2, T3, T4, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source And<T1, T2, T3, T4>(Expression<Func<T1, T2, T3, T4, Boolean>>, Expression<Func<T1, T2, T3, T4, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, T4, bool>> And<T1, T2, T3, T4>(this Expression<Func<T1, T2, T3, T4, bool>> exp1, Expression<Func<T1, T2, T3, T4, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source And<T1, T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, Boolean>>, Boolean, Expression<Func<T1, T2, T3, T4, T5, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, T4, T5, bool>> And<T1, T2, T3, T4, T5>(this Expression<Func<T1, T2, T3, T4, T5, bool>> exp1, bool condition, Expression<Func<T1, T2, T3, T4, T5, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source And<T1, T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, Boolean>>, Expression<Func<T1, T2, T3, T4, T5, Boolean>>) 使用 and 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, T4, T5, bool>> And<T1, T2, T3, T4, T5>(this Expression<Func<T1, T2, T3, T4, T5, bool>> exp1, Expression<Func<T1, T2, T3, T4, T5, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source IsStringJoin(MethodCallExpression, out Expression, out MethodInfo, out LambdaExpression) Declaration public static bool IsStringJoin(this MethodCallExpression exp, out Expression tolistObjectExpOut, out MethodInfo toListMethodOut, out LambdaExpression toListArgs0Out) Parameters Type Name Description System.Linq.Expressions.MethodCallExpression exp System.Linq.Expressions.Expression tolistObjectExpOut System.Reflection.MethodInfo toListMethodOut System.Linq.Expressions.LambdaExpression toListArgs0Out Returns Type Description System.Boolean | Improve this Doc View Source Not<T1>(Expression<Func<T1, Boolean>>, Boolean) 将 lambda 表达式取反 Declaration public static Expression<Func<T1, bool>> Not<T1>(this Expression<Func<T1, bool>> exp, bool condition = true) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp System.Boolean condition true 时生效 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> Type Parameters Name Description T1 | Improve this Doc View Source Not<T1, T2>(Expression<Func<T1, T2, Boolean>>, Boolean) 将 lambda 表达式取反 Declaration public static Expression<Func<T1, T2, bool>> Not<T1, T2>(this Expression<Func<T1, T2, bool>> exp, bool condition = true) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp System.Boolean condition true 时生效 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> Type Parameters Name Description T1 T2 | Improve this Doc View Source Not<T1, T2, T3>(Expression<Func<T1, T2, T3, Boolean>>, Boolean) 将 lambda 表达式取反 Declaration public static Expression<Func<T1, T2, T3, bool>> Not<T1, T2, T3>(this Expression<Func<T1, T2, T3, bool>> exp, bool condition = true) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp System.Boolean condition true 时生效 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Not<T1, T2, T3, T4>(Expression<Func<T1, T2, T3, T4, Boolean>>, Boolean) 将 lambda 表达式取反 Declaration public static Expression<Func<T1, T2, T3, T4, bool>> Not<T1, T2, T3, T4>(this Expression<Func<T1, T2, T3, T4, bool>> exp, bool condition = true) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp System.Boolean condition true 时生效 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Not<T1, T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, Boolean>>, Boolean) 将 lambda 表达式取反 Declaration public static Expression<Func<T1, T2, T3, T4, T5, bool>> Not<T1, T2, T3, T4, T5>(this Expression<Func<T1, T2, T3, T4, T5, bool>> exp, bool condition = true) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp System.Boolean condition true 时生效 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Or<T1>(Expression<Func<T1, Boolean>>, Boolean, Expression<Func<T1, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, bool>> Or<T1>(this Expression<Func<T1, bool>> exp1, bool condition, Expression<Func<T1, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> Type Parameters Name Description T1 | Improve this Doc View Source Or<T1>(Expression<Func<T1, Boolean>>, Expression<Func<T1, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, bool>> Or<T1>(this Expression<Func<T1, bool>> exp1, Expression<Func<T1, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, System.Boolean >> Type Parameters Name Description T1 | Improve this Doc View Source Or<T1, T2>(Expression<Func<T1, T2, Boolean>>, Boolean, Expression<Func<T1, T2, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, bool>> Or<T1, T2>(this Expression<Func<T1, T2, bool>> exp1, bool condition, Expression<Func<T1, T2, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> Type Parameters Name Description T1 T2 | Improve this Doc View Source Or<T1, T2>(Expression<Func<T1, T2, Boolean>>, Expression<Func<T1, T2, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, bool>> Or<T1, T2>(this Expression<Func<T1, T2, bool>> exp1, Expression<Func<T1, T2, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, System.Boolean >> Type Parameters Name Description T1 T2 | Improve this Doc View Source Or<T1, T2, T3>(Expression<Func<T1, T2, T3, Boolean>>, Boolean, Expression<Func<T1, T2, T3, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, bool>> Or<T1, T2, T3>(this Expression<Func<T1, T2, T3, bool>> exp1, bool condition, Expression<Func<T1, T2, T3, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Or<T1, T2, T3>(Expression<Func<T1, T2, T3, Boolean>>, Expression<Func<T1, T2, T3, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, bool>> Or<T1, T2, T3>(this Expression<Func<T1, T2, T3, bool>> exp1, Expression<Func<T1, T2, T3, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, System.Boolean >> Type Parameters Name Description T1 T2 T3 | Improve this Doc View Source Or<T1, T2, T3, T4>(Expression<Func<T1, T2, T3, T4, Boolean>>, Boolean, Expression<Func<T1, T2, T3, T4, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, T4, bool>> Or<T1, T2, T3, T4>(this Expression<Func<T1, T2, T3, T4, bool>> exp1, bool condition, Expression<Func<T1, T2, T3, T4, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Or<T1, T2, T3, T4>(Expression<Func<T1, T2, T3, T4, Boolean>>, Expression<Func<T1, T2, T3, T4, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, T4, bool>> Or<T1, T2, T3, T4>(this Expression<Func<T1, T2, T3, T4, bool>> exp1, Expression<Func<T1, T2, T3, T4, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 | Improve this Doc View Source Or<T1, T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, Boolean>>, Boolean, Expression<Func<T1, T2, T3, T4, T5, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, T4, T5, bool>> Or<T1, T2, T3, T4, T5>(this Expression<Func<T1, T2, T3, T4, T5, bool>> exp1, bool condition, Expression<Func<T1, T2, T3, T4, T5, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp1 System.Boolean condition true 时生效 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 T5 | Improve this Doc View Source Or<T1, T2, T3, T4, T5>(Expression<Func<T1, T2, T3, T4, T5, Boolean>>, Expression<Func<T1, T2, T3, T4, T5, Boolean>>) 使用 or 拼接两个 lambda 表达式 Declaration public static Expression<Func<T1, T2, T3, T4, T5, bool>> Or<T1, T2, T3, T4, T5>(this Expression<Func<T1, T2, T3, T4, T5, bool>> exp1, Expression<Func<T1, T2, T3, T4, T5, bool>> exp2) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp1 System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> exp2 Returns Type Description System.Linq.Expressions.Expression < System.Func <T1, T2, T3, T4, T5, System.Boolean >> Type Parameters Name Description T1 T2 T3 T4 T5"
  },
  "freesql/provider/FreeSql.Dameng.DamengProvider-1.html": {
    "href": "freesql/provider/FreeSql.Dameng.DamengProvider-1.html",
    "title": "Class DamengProvider<TMark> | FreeSql API Docs",
    "keywords": "Class DamengProvider<TMark> Inheritance System.Object BaseDbProvider DamengProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Dameng Assembly : FreeSql.Provider.Dameng.dll Syntax public class DamengProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source DamengProvider(String, String[], Func<DbConnection>) Declaration public DamengProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Dameng.html": {
    "href": "freesql/provider/FreeSql.Dameng.html",
    "title": "Namespace FreeSql.Dameng | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Dameng Classes DamengProvider<TMark>"
  },
  "freesql/provider/FreeSql.KingbaseES.html": {
    "href": "freesql/provider/FreeSql.KingbaseES.html",
    "title": "Namespace FreeSql.KingbaseES | FreeSql API Docs",
    "keywords": "Namespace FreeSql.KingbaseES Classes KingbaseESOnConflictDoUpdate<T1> KingbaseESProvider<TMark>"
  },
  "freesql/provider/FreeSql.KingbaseES.KingbaseESOnConflictDoUpdate-1.html": {
    "href": "freesql/provider/FreeSql.KingbaseES.KingbaseESOnConflictDoUpdate-1.html",
    "title": "Class KingbaseESOnConflictDoUpdate<T1> | FreeSql API Docs",
    "keywords": "Class KingbaseESOnConflictDoUpdate<T1> Inheritance System.Object KingbaseESOnConflictDoUpdate<T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.KingbaseES Assembly : FreeSql.Provider.KingbaseES.dll Syntax public class KingbaseESOnConflictDoUpdate<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source KingbaseESOnConflictDoUpdate(IInsert<T1>, Expression<Func<T1, Object>>) Declaration public KingbaseESOnConflictDoUpdate(IInsert<T1> insert, Expression<Func<T1, object>> columns = null) Parameters Type Name Description IInsert <T1> insert System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Methods | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source DoNothing() Declaration public KingbaseESOnConflictDoUpdate<T1> DoNothing() Returns Type Description KingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source ExecuteAffrows() Declaration public long ExecuteAffrows() Returns Type Description System.Int64 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public Task<long> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) Declaration public KingbaseESOnConflictDoUpdate<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description KingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source IgnoreColumns(String[]) Declaration public KingbaseESOnConflictDoUpdate<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description KingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>, TMember) Declaration public KingbaseESOnConflictDoUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column TMember value Returns Type Description KingbaseESOnConflictDoUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetRaw(String) Declaration public KingbaseESOnConflictDoUpdate<T1> SetRaw(string sql) Parameters Type Name Description System.String sql Returns Type Description KingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source ToSql() Declaration public string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) Declaration public KingbaseESOnConflictDoUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description KingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) Declaration public KingbaseESOnConflictDoUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description KingbaseESOnConflictDoUpdate <T1>"
  },
  "freesql/provider/FreeSql.KingbaseES.KingbaseESProvider-1.html": {
    "href": "freesql/provider/FreeSql.KingbaseES.KingbaseESProvider-1.html",
    "title": "Class KingbaseESProvider<TMark> | FreeSql API Docs",
    "keywords": "Class KingbaseESProvider<TMark> Inheritance System.Object BaseDbProvider KingbaseESProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.KingbaseES Assembly : FreeSql.Provider.KingbaseES.dll Syntax public class KingbaseESProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source KingbaseESProvider(String, String[], Func<DbConnection>) Declaration public KingbaseESProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.MsAccess.html": {
    "href": "freesql/provider/FreeSql.MsAccess.html",
    "title": "Namespace FreeSql.MsAccess | FreeSql API Docs",
    "keywords": "Namespace FreeSql.MsAccess Classes MsAccessProvider<TMark> MsAccessUtils"
  },
  "freesql/provider/FreeSql.MsAccess.MsAccessProvider-1.html": {
    "href": "freesql/provider/FreeSql.MsAccess.MsAccessProvider-1.html",
    "title": "Class MsAccessProvider<TMark> | FreeSql API Docs",
    "keywords": "Class MsAccessProvider<TMark> Inheritance System.Object BaseDbProvider MsAccessProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.MsAccess Assembly : FreeSql.Provider.MsAccess.dll Syntax public class MsAccessProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source MsAccessProvider(String, String[], Func<DbConnection>) Declaration public MsAccessProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Properties | Improve this Doc View Source DbFirst Declaration public override IDbFirst DbFirst { get; } Property Value Type Description IDbFirst Overrides BaseDbProvider.DbFirst Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.MsAccess.MsAccessUtils.html": {
    "href": "freesql/provider/FreeSql.MsAccess.MsAccessUtils.html",
    "title": "Class MsAccessUtils | FreeSql API Docs",
    "keywords": "Class MsAccessUtils Inheritance System.Object CommonUtils MsAccessUtils Inherited Members CommonUtils.GetSplitTableNames(String, Char, Char, Int32) CommonUtils.RewriteColumn(ColumnInfo, String) CommonUtils.RereadColumn(ColumnInfo, String) CommonUtils.BytesSqlRaw(Byte[]) CommonUtils._orm CommonUtils.CodeFirst CommonUtils.GetTableByEntity(Type) CommonUtils.dbTables CommonUtils.dbTablesLock CommonUtils.ConfigEntity<T>(Action<TableFluent<T>>) CommonUtils.ConfigEntity(Type, Action<TableFluent>) CommonUtils.GetConfigEntity(Type) CommonUtils.GetEntityTableAttribute(Type) CommonUtils.GetEntityColumnAttribute(Type, PropertyInfo) CommonUtils.GetEntityNavigateAttribute(Type, PropertyInfo) CommonUtils.GetEntityIndexAttribute(Type) CommonUtils.WhereObject(TableInfo, String, Object) CommonUtils.WhereItems<TEntity>(ColumnInfo[], String, IEnumerable<TEntity>) CommonUtils.GetPropertyCommentByDescriptionAttribute(Type) CommonUtils.GetProperyCommentBySummary(Type) CommonUtils.PrevReheatConnectionPool(ObjectPool<DbConnection>, Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.MsAccess Assembly : FreeSql.Provider.MsAccess.dll Syntax public class MsAccessUtils : CommonUtils Constructors | Improve this Doc View Source MsAccessUtils(IFreeSql) Declaration public MsAccessUtils(IFreeSql orm) Parameters Type Name Description IFreeSql orm Properties | Improve this Doc View Source Now Declaration public override string Now { get; } Property Value Type Description System.String Overrides CommonUtils.Now | Improve this Doc View Source NowUtc Declaration public override string NowUtc { get; } Property Value Type Description System.String Overrides CommonUtils.NowUtc Methods | Improve this Doc View Source AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public override DbParameter AppendParamter(List<DbParameter> _params, string parameterName, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > _params System.String parameterName ColumnInfo col System.Type type System.Object value Returns Type Description System.Data.Common.DbParameter Overrides CommonUtils.AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) | Improve this Doc View Source Div(String, String, Type, Type) Declaration public override string Div(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String Overrides CommonUtils.Div(String, String, Type, Type) | Improve this Doc View Source FieldAsAlias(String) Declaration public override string FieldAsAlias(string alias) Parameters Type Name Description System.String alias Returns Type Description System.String Overrides CommonUtils.FieldAsAlias(String) | Improve this Doc View Source FormatSql(String, Object[]) Declaration public override string FormatSql(string sql, params object[] args) Parameters Type Name Description System.String sql System.Object [] args Returns Type Description System.String Overrides CommonUtils.FormatSql(String, Object[]) | Improve this Doc View Source GetCastSql(String, Type) Declaration public static string GetCastSql(string sqlExp, Type toType) Parameters Type Name Description System.String sqlExp System.Type toType Returns Type Description System.String | Improve this Doc View Source GetDbParamtersByObject(String, Object) Declaration public override DbParameter[] GetDbParamtersByObject(string sql, object obj) Parameters Type Name Description System.String sql System.Object obj Returns Type Description System.Data.Common.DbParameter [] Overrides CommonUtils.GetDbParamtersByObject(String, Object) | Improve this Doc View Source GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public override string GetNoneParamaterSqlValue(List<DbParameter> specialParams, string specialParamFlag, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > specialParams System.String specialParamFlag ColumnInfo col System.Type type System.Object value Returns Type Description System.String Overrides CommonUtils.GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) | Improve this Doc View Source IIF(String, String, String) Declaration public override string IIF(string test, string ifTrue, string ifElse) Parameters Type Name Description System.String test System.String ifTrue System.String ifElse Returns Type Description System.String Overrides CommonUtils.IIF(String, String, String) | Improve this Doc View Source IsNull(String, Object) Declaration public override string IsNull(string sql, object value) Parameters Type Name Description System.String sql System.Object value Returns Type Description System.String Overrides CommonUtils.IsNull(String, Object) | Improve this Doc View Source Mod(String, String, Type, Type) Declaration public override string Mod(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String Overrides CommonUtils.Mod(String, String, Type, Type) | Improve this Doc View Source QuoteParamterName(String) Declaration public override string QuoteParamterName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Overrides CommonUtils.QuoteParamterName(String) | Improve this Doc View Source QuoteReadColumnAdapter(Type, Type, String) Declaration protected override string QuoteReadColumnAdapter(Type type, Type mapType, string columnName) Parameters Type Name Description System.Type type System.Type mapType System.String columnName Returns Type Description System.String Overrides CommonUtils.QuoteReadColumnAdapter(Type, Type, String) | Improve this Doc View Source QuoteSqlName(String[]) Declaration public override string QuoteSqlName(params string[] name) Parameters Type Name Description System.String [] name Returns Type Description System.String Overrides CommonUtils.QuoteSqlName(String[]) | Improve this Doc View Source QuoteWriteParamterAdapter(Type, String) Declaration public override string QuoteWriteParamterAdapter(Type type, string paramterName) Parameters Type Name Description System.Type type System.String paramterName Returns Type Description System.String Overrides CommonUtils.QuoteWriteParamterAdapter(Type, String) | Improve this Doc View Source SplitTableName(String) Declaration public override string[] SplitTableName(string name) Parameters Type Name Description System.String name Returns Type Description System.String [] Overrides CommonUtils.SplitTableName(String) | Improve this Doc View Source StringConcat(String[], Type[]) Declaration public override string StringConcat(string[] objs, Type[] types) Parameters Type Name Description System.String [] objs System.Type [] types Returns Type Description System.String Overrides CommonUtils.StringConcat(String[], Type[]) | Improve this Doc View Source TrimQuoteSqlName(String) Declaration public override string TrimQuoteSqlName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Overrides CommonUtils.TrimQuoteSqlName(String)"
  },
  "freesql/provider/FreeSql.MySql.Curd.html": {
    "href": "freesql/provider/FreeSql.MySql.Curd.html",
    "title": "Namespace FreeSql.MySql.Curd | FreeSql API Docs",
    "keywords": "Namespace FreeSql.MySql.Curd Classes OnDuplicateKeyUpdate<T1>"
  },
  "freesql/provider/FreeSql.MySql.Curd.OnDuplicateKeyUpdate-1.html": {
    "href": "freesql/provider/FreeSql.MySql.Curd.OnDuplicateKeyUpdate-1.html",
    "title": "Class OnDuplicateKeyUpdate<T1> | FreeSql API Docs",
    "keywords": "Class OnDuplicateKeyUpdate<T1> Inheritance System.Object OnDuplicateKeyUpdate<T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.MySql.Curd Assembly : FreeSql.Provider.MySql.dll Syntax public class OnDuplicateKeyUpdate<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source OnDuplicateKeyUpdate(IInsert<T1>) Declaration public OnDuplicateKeyUpdate(IInsert<T1> insert) Parameters Type Name Description IInsert <T1> insert Methods | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source ExecuteAffrows() Declaration public long ExecuteAffrows() Returns Type Description System.Int64 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public Task<long> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) Declaration public OnDuplicateKeyUpdate<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OnDuplicateKeyUpdate <T1> | Improve this Doc View Source IgnoreColumns(String[]) Declaration public OnDuplicateKeyUpdate<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OnDuplicateKeyUpdate <T1> | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>) Declaration public OnDuplicateKeyUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> exp Returns Type Description OnDuplicateKeyUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>, TMember) Declaration public OnDuplicateKeyUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column TMember value Returns Type Description OnDuplicateKeyUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetRaw(String) Declaration public OnDuplicateKeyUpdate<T1> SetRaw(string sql) Parameters Type Name Description System.String sql Returns Type Description OnDuplicateKeyUpdate <T1> | Improve this Doc View Source ToSql() Declaration public string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) Declaration public OnDuplicateKeyUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OnDuplicateKeyUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) Declaration public OnDuplicateKeyUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OnDuplicateKeyUpdate <T1>"
  },
  "freesql/provider/FreeSql.MySql.html": {
    "href": "freesql/provider/FreeSql.MySql.html",
    "title": "Namespace FreeSql.MySql | FreeSql API Docs",
    "keywords": "Namespace FreeSql.MySql Classes MySqlProvider<TMark>"
  },
  "freesql/provider/FreeSql.MySql.MySqlProvider-1.html": {
    "href": "freesql/provider/FreeSql.MySql.MySqlProvider-1.html",
    "title": "Class MySqlProvider<TMark> | FreeSql API Docs",
    "keywords": "Class MySqlProvider<TMark> Inheritance System.Object BaseDbProvider MySqlProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.MySql Assembly : FreeSql.Provider.MySql.dll Syntax public class MySqlProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source MySqlProvider(String, String[], Func<DbConnection>) Declaration public MySqlProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Odbc.Dameng.html": {
    "href": "freesql/provider/FreeSql.Odbc.Dameng.html",
    "title": "Namespace FreeSql.Odbc.Dameng | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Odbc.Dameng Classes OdbcDamengProvider<TMark>"
  },
  "freesql/provider/FreeSql.Odbc.Dameng.OdbcDamengProvider-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.Dameng.OdbcDamengProvider-1.html",
    "title": "Class OdbcDamengProvider<TMark> | FreeSql API Docs",
    "keywords": "Class OdbcDamengProvider<TMark> Inheritance System.Object BaseDbProvider OdbcDamengProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.Dameng Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcDamengProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source OdbcDamengProvider(String, String[], Func<DbConnection>) Declaration public OdbcDamengProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Odbc.Default.html": {
    "href": "freesql/provider/FreeSql.Odbc.Default.html",
    "title": "Namespace FreeSql.Odbc.Default | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Odbc.Default Classes OdbcAdapter OdbcProvider<TMark> OdbcUtils Enums OdbcAdapter.SelecTopStyle"
  },
  "freesql/provider/FreeSql.Odbc.Default.OdbcAdapter.html": {
    "href": "freesql/provider/FreeSql.Odbc.Default.OdbcAdapter.html",
    "title": "Class OdbcAdapter | FreeSql API Docs",
    "keywords": "Class OdbcAdapter Inheritance System.Object OdbcAdapter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.Default Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcAdapter Properties | Improve this Doc View Source InsertAfterGetIdentitySql 插入成功后，获取自增值 Declaration public virtual string InsertAfterGetIdentitySql { get; } Property Value Type Description System.String | Improve this Doc View Source InsertBatchSplitLimit 批量插入时，自动拆分的每次执行数量 Declaration public virtual int InsertBatchSplitLimit { get; } Property Value Type Description System.Int32 | Improve this Doc View Source LambdaDateTime_MaxValue Declaration public virtual string LambdaDateTime_MaxValue { get; } Property Value Type Description System.String | Improve this Doc View Source LambdaDateTime_MinValue Declaration public virtual string LambdaDateTime_MinValue { get; } Property Value Type Description System.String | Improve this Doc View Source LambdaDateTime_Now Declaration public virtual string LambdaDateTime_Now { get; } Property Value Type Description System.String | Improve this Doc View Source LambdaDateTime_Today Declaration public virtual string LambdaDateTime_Today { get; } Property Value Type Description System.String | Improve this Doc View Source LambdaDateTime_UtcNow Declaration public virtual string LambdaDateTime_UtcNow { get; } Property Value Type Description System.String | Improve this Doc View Source LambdaGuid_NewGuid Declaration public virtual string LambdaGuid_NewGuid { get; } Property Value Type Description System.String | Improve this Doc View Source LambdaRandom_Next Declaration public virtual string LambdaRandom_Next { get; } Property Value Type Description System.String | Improve this Doc View Source LambdaRandom_NextDouble Declaration public virtual string LambdaRandom_NextDouble { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeBigInt Declaration public virtual string MappingOdbcTypeBigInt { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeBit Declaration public virtual string MappingOdbcTypeBit { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeChar Declaration public virtual string MappingOdbcTypeChar { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeDateTime Declaration public virtual string MappingOdbcTypeDateTime { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeDecimal Declaration public virtual string MappingOdbcTypeDecimal { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeDouble Declaration public virtual string MappingOdbcTypeDouble { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeInt Declaration public virtual string MappingOdbcTypeInt { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeReal Declaration public virtual string MappingOdbcTypeReal { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeSmallInt Declaration public virtual string MappingOdbcTypeSmallInt { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeText Declaration public virtual string MappingOdbcTypeText { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeTinyInt Declaration public virtual string MappingOdbcTypeTinyInt { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeUniqueIdentifier Declaration public virtual string MappingOdbcTypeUniqueIdentifier { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeVarBinary Declaration public virtual string MappingOdbcTypeVarBinary { get; } Property Value Type Description System.String | Improve this Doc View Source MappingOdbcTypeVarChar Declaration public virtual string MappingOdbcTypeVarChar { get; } Property Value Type Description System.String | Improve this Doc View Source QuoteSqlNameLeft Declaration public virtual char QuoteSqlNameLeft { get; } Property Value Type Description System.Char | Improve this Doc View Source QuoteSqlNameRight Declaration public virtual char QuoteSqlNameRight { get; } Property Value Type Description System.Char | Improve this Doc View Source SelectTopStyle Select TOP 1，或 Limit 1 风格 Declaration public virtual OdbcAdapter.SelecTopStyle SelectTopStyle { get; } Property Value Type Description OdbcAdapter.SelecTopStyle | Improve this Doc View Source UpdateBatchSplitLimit 批量更新时，自动拆分的每次执行数量 Declaration public virtual int UpdateBatchSplitLimit { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ByteRawSql(Object) Declaration public virtual string ByteRawSql(object value) Parameters Type Name Description System.Object value Returns Type Description System.String | Improve this Doc View Source CastSql(String, String) Declaration public virtual string CastSql(string sql, string to) Parameters Type Name Description System.String sql System.String to Returns Type Description System.String | Improve this Doc View Source ConcatSql(String[], Type[]) Declaration public virtual string ConcatSql(string[] objs, Type[] types) Parameters Type Name Description System.String [] objs System.Type [] types Returns Type Description System.String | Improve this Doc View Source DateTimeRawSql(Object) Declaration public virtual string DateTimeRawSql(object value) Parameters Type Name Description System.Object value Returns Type Description System.String | Improve this Doc View Source Div(String, String, Type, Type) Declaration public virtual string Div(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String | Improve this Doc View Source FieldSql(Type, String) Declaration public virtual string FieldSql(Type type, string columnName) Parameters Type Name Description System.Type type System.String columnName Returns Type Description System.String | Improve this Doc View Source IsNullSql(String, Object) Declaration public virtual string IsNullSql(string sql, object value) Parameters Type Name Description System.String sql System.Object value Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToBoolean(Type, String) Declaration public virtual string LambdaConvert_ToBoolean(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToByte(Type, String) Declaration public virtual string LambdaConvert_ToByte(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToChar(Type, String) Declaration public virtual string LambdaConvert_ToChar(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToDateTime(Type, String) Declaration public virtual string LambdaConvert_ToDateTime(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToDecimal(Type, String) Declaration public virtual string LambdaConvert_ToDecimal(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToDouble(Type, String) Declaration public virtual string LambdaConvert_ToDouble(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToGuid(Type, String) Declaration public virtual string LambdaConvert_ToGuid(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToInt16(Type, String) Declaration public virtual string LambdaConvert_ToInt16(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToInt32(Type, String) Declaration public virtual string LambdaConvert_ToInt32(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToInt64(Type, String) Declaration public virtual string LambdaConvert_ToInt64(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToSByte(Type, String) Declaration public virtual string LambdaConvert_ToSByte(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToSingle(Type, String) Declaration public virtual string LambdaConvert_ToSingle(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToString(Type, String) Declaration public virtual string LambdaConvert_ToString(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToUInt16(Type, String) Declaration public virtual string LambdaConvert_ToUInt16(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToUInt32(Type, String) Declaration public virtual string LambdaConvert_ToUInt32(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaConvert_ToUInt64(Type, String) Declaration public virtual string LambdaConvert_ToUInt64(Type type, string operand) Parameters Type Name Description System.Type type System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Add(String, String) Declaration public virtual string LambdaDateTime_Add(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_AddDays(String, String) Declaration public virtual string LambdaDateTime_AddDays(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_AddHours(String, String) Declaration public virtual string LambdaDateTime_AddHours(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_AddMilliseconds(String, String) Declaration public virtual string LambdaDateTime_AddMilliseconds(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_AddMinutes(String, String) Declaration public virtual string LambdaDateTime_AddMinutes(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_AddMonths(String, String) Declaration public virtual string LambdaDateTime_AddMonths(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_AddSeconds(String, String) Declaration public virtual string LambdaDateTime_AddSeconds(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_AddTicks(String, String) Declaration public virtual string LambdaDateTime_AddTicks(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_AddYears(String, String) Declaration public virtual string LambdaDateTime_AddYears(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_CompareTo(String, String) Declaration public virtual string LambdaDateTime_CompareTo(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Date(String) Declaration public virtual string LambdaDateTime_Date(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Day(String) Declaration public virtual string LambdaDateTime_Day(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_DayOfWeek(String) Declaration public virtual string LambdaDateTime_DayOfWeek(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_DayOfYear(String) Declaration public virtual string LambdaDateTime_DayOfYear(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_DaysInMonth(String, String) Declaration public virtual string LambdaDateTime_DaysInMonth(string year, string month) Parameters Type Name Description System.String year System.String month Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Equals(String, String) Declaration public virtual string LambdaDateTime_Equals(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Hour(String) Declaration public virtual string LambdaDateTime_Hour(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_IsLeapYear(String) Declaration public virtual string LambdaDateTime_IsLeapYear(string year) Parameters Type Name Description System.String year Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Millisecond(String) Declaration public virtual string LambdaDateTime_Millisecond(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Minute(String) Declaration public virtual string LambdaDateTime_Minute(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Month(String) Declaration public virtual string LambdaDateTime_Month(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Second(String) Declaration public virtual string LambdaDateTime_Second(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Subtract(String, String) Declaration public virtual string LambdaDateTime_Subtract(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_SubtractTimeSpan(String, String) Declaration public virtual string LambdaDateTime_SubtractTimeSpan(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Ticks(String) Declaration public virtual string LambdaDateTime_Ticks(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_TimeOfDay(String) Declaration public virtual string LambdaDateTime_TimeOfDay(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_ToString(String) Declaration public virtual string LambdaDateTime_ToString(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaDateTime_Year(String) Declaration public virtual string LambdaDateTime_Year(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Abs(String) Declaration public virtual string LambdaMath_Abs(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Acos(String) Declaration public virtual string LambdaMath_Acos(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Asin(String) Declaration public virtual string LambdaMath_Asin(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Atan(String) Declaration public virtual string LambdaMath_Atan(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Atan2(String, String) Declaration public virtual string LambdaMath_Atan2(string operand, string x) Parameters Type Name Description System.String operand System.String x Returns Type Description System.String | Improve this Doc View Source LambdaMath_Ceiling(String) Declaration public virtual string LambdaMath_Ceiling(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Cos(String) Declaration public virtual string LambdaMath_Cos(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Exp(String) Declaration public virtual string LambdaMath_Exp(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Floor(String) Declaration public virtual string LambdaMath_Floor(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Log(String) Declaration public virtual string LambdaMath_Log(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Log10(String) Declaration public virtual string LambdaMath_Log10(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Pow(String, String) Declaration public virtual string LambdaMath_Pow(string operand, string y) Parameters Type Name Description System.String operand System.String y Returns Type Description System.String | Improve this Doc View Source LambdaMath_Round(String, String) Declaration public virtual string LambdaMath_Round(string operand, string decimals) Parameters Type Name Description System.String operand System.String decimals Returns Type Description System.String | Improve this Doc View Source LambdaMath_Sign(String) Declaration public virtual string LambdaMath_Sign(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Sin(String) Declaration public virtual string LambdaMath_Sin(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Sqrt(String) Declaration public virtual string LambdaMath_Sqrt(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Tan(String) Declaration public virtual string LambdaMath_Tan(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaMath_Truncate(String) Declaration public virtual string LambdaMath_Truncate(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaString_CompareTo(String, String) Declaration public virtual string LambdaString_CompareTo(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaString_Equals(String, String) Declaration public virtual string LambdaString_Equals(string operand, string value) Parameters Type Name Description System.String operand System.String value Returns Type Description System.String | Improve this Doc View Source LambdaString_IndexOf(String, String, String) Declaration public virtual string LambdaString_IndexOf(string operand, string value, string startIndex) Parameters Type Name Description System.String operand System.String value System.String startIndex Returns Type Description System.String | Improve this Doc View Source LambdaString_IsNullOrEmpty(String) Declaration public virtual string LambdaString_IsNullOrEmpty(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaString_IsNullOrWhiteSpace(String) Declaration public virtual string LambdaString_IsNullOrWhiteSpace(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaString_Length(String) Declaration public virtual string LambdaString_Length(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaString_PadLeft(String, String, String) Declaration public virtual string LambdaString_PadLeft(string operand, string length, string paddingChar) Parameters Type Name Description System.String operand System.String length System.String paddingChar Returns Type Description System.String | Improve this Doc View Source LambdaString_PadRight(String, String, String) Declaration public virtual string LambdaString_PadRight(string operand, string length, string paddingChar) Parameters Type Name Description System.String operand System.String length System.String paddingChar Returns Type Description System.String | Improve this Doc View Source LambdaString_Replace(String, String, String) Declaration public virtual string LambdaString_Replace(string operand, string oldValue, string newValue) Parameters Type Name Description System.String operand System.String oldValue System.String newValue Returns Type Description System.String | Improve this Doc View Source LambdaString_Substring(String, String, String) Declaration public virtual string LambdaString_Substring(string operand, string startIndex, string length) Parameters Type Name Description System.String operand System.String startIndex System.String length Returns Type Description System.String | Improve this Doc View Source LambdaString_ToLower(String) Declaration public virtual string LambdaString_ToLower(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaString_ToUpper(String) Declaration public virtual string LambdaString_ToUpper(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaString_Trim(String) Declaration public virtual string LambdaString_Trim(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaString_TrimEnd(String) Declaration public virtual string LambdaString_TrimEnd(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source LambdaString_TrimStart(String) Declaration public virtual string LambdaString_TrimStart(string operand) Parameters Type Name Description System.String operand Returns Type Description System.String | Improve this Doc View Source Mod(String, String, Type, Type) Declaration public virtual string Mod(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String | Improve this Doc View Source TimeSpanRawSql(Object) Declaration public virtual string TimeSpanRawSql(object value) Parameters Type Name Description System.Object value Returns Type Description System.String | Improve this Doc View Source UnicodeStringRawSql(Object, ColumnInfo) Declaration public virtual string UnicodeStringRawSql(object value, ColumnInfo mapColumn) Parameters Type Name Description System.Object value ColumnInfo mapColumn Returns Type Description System.String"
  },
  "freesql/provider/FreeSql.Odbc.Default.OdbcAdapter.SelecTopStyle.html": {
    "href": "freesql/provider/FreeSql.Odbc.Default.OdbcAdapter.SelecTopStyle.html",
    "title": "Enum OdbcAdapter.SelecTopStyle | FreeSql API Docs",
    "keywords": "Enum OdbcAdapter.SelecTopStyle Namespace : FreeSql.Odbc.Default Assembly : FreeSql.Provider.Odbc.dll Syntax public enum SelecTopStyle Fields Name Description Limit Top"
  },
  "freesql/provider/FreeSql.Odbc.Default.OdbcProvider-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.Default.OdbcProvider-1.html",
    "title": "Class OdbcProvider<TMark> | FreeSql API Docs",
    "keywords": "Class OdbcProvider<TMark> Inheritance System.Object BaseDbProvider OdbcProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.Default Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source OdbcProvider(String, String[], Func<DbConnection>) 生成一个普通访问功能的 IFreeSql 对象，用来访问 odbc Declaration public OdbcProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Properties | Improve this Doc View Source DbFirst Declaration public override IDbFirst DbFirst { get; } Property Value Type Description IDbFirst Overrides BaseDbProvider.DbFirst Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Odbc.Default.OdbcUtils.html": {
    "href": "freesql/provider/FreeSql.Odbc.Default.OdbcUtils.html",
    "title": "Class OdbcUtils | FreeSql API Docs",
    "keywords": "Class OdbcUtils Inheritance System.Object CommonUtils OdbcUtils Inherited Members CommonUtils.GetSplitTableNames(String, Char, Char, Int32) CommonUtils.RewriteColumn(ColumnInfo, String) CommonUtils.RereadColumn(ColumnInfo, String) CommonUtils.FieldAsAlias(String) CommonUtils.IIF(String, String, String) CommonUtils.BytesSqlRaw(Byte[]) CommonUtils._orm CommonUtils.CodeFirst CommonUtils.GetTableByEntity(Type) CommonUtils.dbTables CommonUtils.dbTablesLock CommonUtils.ConfigEntity<T>(Action<TableFluent<T>>) CommonUtils.ConfigEntity(Type, Action<TableFluent>) CommonUtils.GetConfigEntity(Type) CommonUtils.GetEntityTableAttribute(Type) CommonUtils.GetEntityColumnAttribute(Type, PropertyInfo) CommonUtils.GetEntityNavigateAttribute(Type, PropertyInfo) CommonUtils.GetEntityIndexAttribute(Type) CommonUtils.WhereObject(TableInfo, String, Object) CommonUtils.WhereItems<TEntity>(ColumnInfo[], String, IEnumerable<TEntity>) CommonUtils.GetPropertyCommentByDescriptionAttribute(Type) CommonUtils.GetProperyCommentBySummary(Type) CommonUtils.PrevReheatConnectionPool(ObjectPool<DbConnection>, Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.Default Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcUtils : CommonUtils Constructors | Improve this Doc View Source OdbcUtils(IFreeSql) Declaration public OdbcUtils(IFreeSql orm) Parameters Type Name Description IFreeSql orm Properties | Improve this Doc View Source Adapter Declaration public OdbcAdapter Adapter { get; } Property Value Type Description OdbcAdapter | Improve this Doc View Source Now Declaration public override string Now { get; } Property Value Type Description System.String Overrides CommonUtils.Now | Improve this Doc View Source NowUtc Declaration public override string NowUtc { get; } Property Value Type Description System.String Overrides CommonUtils.NowUtc Methods | Improve this Doc View Source AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public override DbParameter AppendParamter(List<DbParameter> _params, string parameterName, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > _params System.String parameterName ColumnInfo col System.Type type System.Object value Returns Type Description System.Data.Common.DbParameter Overrides CommonUtils.AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) | Improve this Doc View Source Div(String, String, Type, Type) Declaration public override string Div(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String Overrides CommonUtils.Div(String, String, Type, Type) | Improve this Doc View Source FormatSql(String, Object[]) Declaration public override string FormatSql(string sql, params object[] args) Parameters Type Name Description System.String sql System.Object [] args Returns Type Description System.String Overrides CommonUtils.FormatSql(String, Object[]) | Improve this Doc View Source GetDbParamtersByObject(String, Object) Declaration public override DbParameter[] GetDbParamtersByObject(string sql, object obj) Parameters Type Name Description System.String sql System.Object obj Returns Type Description System.Data.Common.DbParameter [] Overrides CommonUtils.GetDbParamtersByObject(String, Object) | Improve this Doc View Source GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public override string GetNoneParamaterSqlValue(List<DbParameter> specialParams, string specialParamFlag, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > specialParams System.String specialParamFlag ColumnInfo col System.Type type System.Object value Returns Type Description System.String Overrides CommonUtils.GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) | Improve this Doc View Source IsNull(String, Object) Declaration public override string IsNull(string sql, object value) Parameters Type Name Description System.String sql System.Object value Returns Type Description System.String Overrides CommonUtils.IsNull(String, Object) | Improve this Doc View Source Mod(String, String, Type, Type) Declaration public override string Mod(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String Overrides CommonUtils.Mod(String, String, Type, Type) | Improve this Doc View Source QuoteParamterName(String) Declaration public override string QuoteParamterName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Overrides CommonUtils.QuoteParamterName(String) | Improve this Doc View Source QuoteReadColumnAdapter(Type, Type, String) Declaration protected override string QuoteReadColumnAdapter(Type type, Type mapType, string columnName) Parameters Type Name Description System.Type type System.Type mapType System.String columnName Returns Type Description System.String Overrides CommonUtils.QuoteReadColumnAdapter(Type, Type, String) | Improve this Doc View Source QuoteSqlName(String[]) Declaration public override string QuoteSqlName(params string[] name) Parameters Type Name Description System.String [] name Returns Type Description System.String Overrides CommonUtils.QuoteSqlName(String[]) | Improve this Doc View Source QuoteWriteParamterAdapter(Type, String) Declaration public override string QuoteWriteParamterAdapter(Type type, string paramterName) Parameters Type Name Description System.Type type System.String paramterName Returns Type Description System.String Overrides CommonUtils.QuoteWriteParamterAdapter(Type, String) | Improve this Doc View Source SplitTableName(String) Declaration public override string[] SplitTableName(string name) Parameters Type Name Description System.String name Returns Type Description System.String [] Overrides CommonUtils.SplitTableName(String) | Improve this Doc View Source StringConcat(String[], Type[]) Declaration public override string StringConcat(string[] objs, Type[] types) Parameters Type Name Description System.String [] objs System.Type [] types Returns Type Description System.String Overrides CommonUtils.StringConcat(String[], Type[]) | Improve this Doc View Source TrimQuoteSqlName(String) Declaration public override string TrimQuoteSqlName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Overrides CommonUtils.TrimQuoteSqlName(String)"
  },
  "freesql/provider/FreeSql.Odbc.KingbaseES.html": {
    "href": "freesql/provider/FreeSql.Odbc.KingbaseES.html",
    "title": "Namespace FreeSql.Odbc.KingbaseES | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Odbc.KingbaseES Classes OdbcKingbaseESOnConflictDoUpdate<T1> OdbcKingbaseESProvider<TMark>"
  },
  "freesql/provider/FreeSql.Odbc.KingbaseES.OdbcKingbaseESOnConflictDoUpdate-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.KingbaseES.OdbcKingbaseESOnConflictDoUpdate-1.html",
    "title": "Class OdbcKingbaseESOnConflictDoUpdate<T1> | FreeSql API Docs",
    "keywords": "Class OdbcKingbaseESOnConflictDoUpdate<T1> Inheritance System.Object OdbcKingbaseESOnConflictDoUpdate<T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.KingbaseES Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcKingbaseESOnConflictDoUpdate<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source OdbcKingbaseESOnConflictDoUpdate(IInsert<T1>, Expression<Func<T1, Object>>) Declaration public OdbcKingbaseESOnConflictDoUpdate(IInsert<T1> insert, Expression<Func<T1, object>> columns = null) Parameters Type Name Description IInsert <T1> insert System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Methods | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source DoNothing() Declaration public OdbcKingbaseESOnConflictDoUpdate<T1> DoNothing() Returns Type Description OdbcKingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source ExecuteAffrows() Declaration public long ExecuteAffrows() Returns Type Description System.Int64 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public Task<long> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) Declaration public OdbcKingbaseESOnConflictDoUpdate<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OdbcKingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source IgnoreColumns(String[]) Declaration public OdbcKingbaseESOnConflictDoUpdate<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OdbcKingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>, TMember) Declaration public OdbcKingbaseESOnConflictDoUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column TMember value Returns Type Description OdbcKingbaseESOnConflictDoUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetRaw(String) Declaration public OdbcKingbaseESOnConflictDoUpdate<T1> SetRaw(string sql) Parameters Type Name Description System.String sql Returns Type Description OdbcKingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source ToSql() Declaration public string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) Declaration public OdbcKingbaseESOnConflictDoUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OdbcKingbaseESOnConflictDoUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) Declaration public OdbcKingbaseESOnConflictDoUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OdbcKingbaseESOnConflictDoUpdate <T1>"
  },
  "freesql/provider/FreeSql.Odbc.KingbaseES.OdbcKingbaseESProvider-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.KingbaseES.OdbcKingbaseESProvider-1.html",
    "title": "Class OdbcKingbaseESProvider<TMark> | FreeSql API Docs",
    "keywords": "Class OdbcKingbaseESProvider<TMark> Inheritance System.Object BaseDbProvider OdbcKingbaseESProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.KingbaseES Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcKingbaseESProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source OdbcKingbaseESProvider(String, String[], Func<DbConnection>) Declaration public OdbcKingbaseESProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Odbc.MySql.html": {
    "href": "freesql/provider/FreeSql.Odbc.MySql.html",
    "title": "Namespace FreeSql.Odbc.MySql | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Odbc.MySql Classes OdbcMySqlOnDuplicateKeyUpdate<T1> OdbcMySqlProvider<TMark>"
  },
  "freesql/provider/FreeSql.Odbc.MySql.OdbcMySqlOnDuplicateKeyUpdate-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.MySql.OdbcMySqlOnDuplicateKeyUpdate-1.html",
    "title": "Class OdbcMySqlOnDuplicateKeyUpdate<T1> | FreeSql API Docs",
    "keywords": "Class OdbcMySqlOnDuplicateKeyUpdate<T1> Inheritance System.Object OdbcMySqlOnDuplicateKeyUpdate<T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.MySql Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcMySqlOnDuplicateKeyUpdate<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source OdbcMySqlOnDuplicateKeyUpdate(IInsert<T1>) Declaration public OdbcMySqlOnDuplicateKeyUpdate(IInsert<T1> insert) Parameters Type Name Description IInsert <T1> insert Methods | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source ExecuteAffrows() Declaration public long ExecuteAffrows() Returns Type Description System.Int64 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public Task<long> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) Declaration public OdbcMySqlOnDuplicateKeyUpdate<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OdbcMySqlOnDuplicateKeyUpdate <T1> | Improve this Doc View Source IgnoreColumns(String[]) Declaration public OdbcMySqlOnDuplicateKeyUpdate<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OdbcMySqlOnDuplicateKeyUpdate <T1> | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>) Declaration public OdbcMySqlOnDuplicateKeyUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> exp Returns Type Description OdbcMySqlOnDuplicateKeyUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>, TMember) Declaration public OdbcMySqlOnDuplicateKeyUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column TMember value Returns Type Description OdbcMySqlOnDuplicateKeyUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetRaw(String) Declaration public OdbcMySqlOnDuplicateKeyUpdate<T1> SetRaw(string sql) Parameters Type Name Description System.String sql Returns Type Description OdbcMySqlOnDuplicateKeyUpdate <T1> | Improve this Doc View Source ToSql() Declaration public string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) Declaration public OdbcMySqlOnDuplicateKeyUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OdbcMySqlOnDuplicateKeyUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) Declaration public OdbcMySqlOnDuplicateKeyUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OdbcMySqlOnDuplicateKeyUpdate <T1>"
  },
  "freesql/provider/FreeSql.Odbc.MySql.OdbcMySqlProvider-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.MySql.OdbcMySqlProvider-1.html",
    "title": "Class OdbcMySqlProvider<TMark> | FreeSql API Docs",
    "keywords": "Class OdbcMySqlProvider<TMark> Inheritance System.Object BaseDbProvider OdbcMySqlProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.MySql Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcMySqlProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source OdbcMySqlProvider(String, String[], Func<DbConnection>) Declaration public OdbcMySqlProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Odbc.Oracle.html": {
    "href": "freesql/provider/FreeSql.Odbc.Oracle.html",
    "title": "Namespace FreeSql.Odbc.Oracle | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Odbc.Oracle Classes OdbcOracleProvider<TMark>"
  },
  "freesql/provider/FreeSql.Odbc.Oracle.OdbcOracleProvider-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.Oracle.OdbcOracleProvider-1.html",
    "title": "Class OdbcOracleProvider<TMark> | FreeSql API Docs",
    "keywords": "Class OdbcOracleProvider<TMark> Inheritance System.Object BaseDbProvider OdbcOracleProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.Oracle Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcOracleProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source OdbcOracleProvider(String, String[], Func<DbConnection>) Declaration public OdbcOracleProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Odbc.PostgreSQL.html": {
    "href": "freesql/provider/FreeSql.Odbc.PostgreSQL.html",
    "title": "Namespace FreeSql.Odbc.PostgreSQL | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Odbc.PostgreSQL Classes OdbcPostgreSQLOnConflictDoUpdate<T1> OdbcPostgreSQLProvider<TMark>"
  },
  "freesql/provider/FreeSql.Odbc.PostgreSQL.OdbcPostgreSQLOnConflictDoUpdate-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.PostgreSQL.OdbcPostgreSQLOnConflictDoUpdate-1.html",
    "title": "Class OdbcPostgreSQLOnConflictDoUpdate<T1> | FreeSql API Docs",
    "keywords": "Class OdbcPostgreSQLOnConflictDoUpdate<T1> Inheritance System.Object OdbcPostgreSQLOnConflictDoUpdate<T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.PostgreSQL Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcPostgreSQLOnConflictDoUpdate<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source OdbcPostgreSQLOnConflictDoUpdate(IInsert<T1>, Expression<Func<T1, Object>>) Declaration public OdbcPostgreSQLOnConflictDoUpdate(IInsert<T1> insert, Expression<Func<T1, object>> columns = null) Parameters Type Name Description IInsert <T1> insert System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Methods | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source DoNothing() Declaration public OdbcPostgreSQLOnConflictDoUpdate<T1> DoNothing() Returns Type Description OdbcPostgreSQLOnConflictDoUpdate <T1> | Improve this Doc View Source ExecuteAffrows() Declaration public long ExecuteAffrows() Returns Type Description System.Int64 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public Task<long> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) Declaration public OdbcPostgreSQLOnConflictDoUpdate<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OdbcPostgreSQLOnConflictDoUpdate <T1> | Improve this Doc View Source IgnoreColumns(String[]) Declaration public OdbcPostgreSQLOnConflictDoUpdate<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OdbcPostgreSQLOnConflictDoUpdate <T1> | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>, TMember) Declaration public OdbcPostgreSQLOnConflictDoUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column TMember value Returns Type Description OdbcPostgreSQLOnConflictDoUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetRaw(String) Declaration public OdbcPostgreSQLOnConflictDoUpdate<T1> SetRaw(string sql) Parameters Type Name Description System.String sql Returns Type Description OdbcPostgreSQLOnConflictDoUpdate <T1> | Improve this Doc View Source ToSql() Declaration public string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) Declaration public OdbcPostgreSQLOnConflictDoUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OdbcPostgreSQLOnConflictDoUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) Declaration public OdbcPostgreSQLOnConflictDoUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OdbcPostgreSQLOnConflictDoUpdate <T1>"
  },
  "freesql/provider/FreeSql.Odbc.PostgreSQL.OdbcPostgreSQLProvider-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.PostgreSQL.OdbcPostgreSQLProvider-1.html",
    "title": "Class OdbcPostgreSQLProvider<TMark> | FreeSql API Docs",
    "keywords": "Class OdbcPostgreSQLProvider<TMark> Inheritance System.Object BaseDbProvider OdbcPostgreSQLProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.PostgreSQL Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcPostgreSQLProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source OdbcPostgreSQLProvider(String, String[], Func<DbConnection>) Declaration public OdbcPostgreSQLProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Odbc.SqlServer.html": {
    "href": "freesql/provider/FreeSql.Odbc.SqlServer.html",
    "title": "Namespace FreeSql.Odbc.SqlServer | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Odbc.SqlServer Classes OdbcSqlServerProvider<TMark> OdbcSqlServerUtils"
  },
  "freesql/provider/FreeSql.Odbc.SqlServer.OdbcSqlServerProvider-1.html": {
    "href": "freesql/provider/FreeSql.Odbc.SqlServer.OdbcSqlServerProvider-1.html",
    "title": "Class OdbcSqlServerProvider<TMark> | FreeSql API Docs",
    "keywords": "Class OdbcSqlServerProvider<TMark> Inheritance System.Object BaseDbProvider OdbcSqlServerProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.SqlServer Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcSqlServerProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source OdbcSqlServerProvider(String, String[], Func<DbConnection>) Declaration public OdbcSqlServerProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Odbc.SqlServer.OdbcSqlServerUtils.html": {
    "href": "freesql/provider/FreeSql.Odbc.SqlServer.OdbcSqlServerUtils.html",
    "title": "Class OdbcSqlServerUtils | FreeSql API Docs",
    "keywords": "Class OdbcSqlServerUtils Inheritance System.Object CommonUtils OdbcSqlServerUtils Inherited Members CommonUtils.GetSplitTableNames(String, Char, Char, Int32) CommonUtils.RewriteColumn(ColumnInfo, String) CommonUtils.RereadColumn(ColumnInfo, String) CommonUtils.FieldAsAlias(String) CommonUtils.IIF(String, String, String) CommonUtils.BytesSqlRaw(Byte[]) CommonUtils._orm CommonUtils.CodeFirst CommonUtils.GetTableByEntity(Type) CommonUtils.dbTables CommonUtils.dbTablesLock CommonUtils.ConfigEntity<T>(Action<TableFluent<T>>) CommonUtils.ConfigEntity(Type, Action<TableFluent>) CommonUtils.GetConfigEntity(Type) CommonUtils.GetEntityTableAttribute(Type) CommonUtils.GetEntityColumnAttribute(Type, PropertyInfo) CommonUtils.GetEntityNavigateAttribute(Type, PropertyInfo) CommonUtils.GetEntityIndexAttribute(Type) CommonUtils.WhereObject(TableInfo, String, Object) CommonUtils.WhereItems<TEntity>(ColumnInfo[], String, IEnumerable<TEntity>) CommonUtils.GetPropertyCommentByDescriptionAttribute(Type) CommonUtils.GetProperyCommentBySummary(Type) CommonUtils.PrevReheatConnectionPool(ObjectPool<DbConnection>, Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Odbc.SqlServer Assembly : FreeSql.Provider.Odbc.dll Syntax public class OdbcSqlServerUtils : CommonUtils Constructors | Improve this Doc View Source OdbcSqlServerUtils(IFreeSql) Declaration public OdbcSqlServerUtils(IFreeSql orm) Parameters Type Name Description IFreeSql orm Fields | Improve this Doc View Source ServerVersion Declaration public int ServerVersion Field Value Type Description System.Int32 Properties | Improve this Doc View Source IsSelectRowNumber Declaration public bool IsSelectRowNumber { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSqlServer2005 Declaration public bool IsSqlServer2005 { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Now Declaration public override string Now { get; } Property Value Type Description System.String Overrides CommonUtils.Now | Improve this Doc View Source NowUtc Declaration public override string NowUtc { get; } Property Value Type Description System.String Overrides CommonUtils.NowUtc Methods | Improve this Doc View Source AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public override DbParameter AppendParamter(List<DbParameter> _params, string parameterName, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > _params System.String parameterName ColumnInfo col System.Type type System.Object value Returns Type Description System.Data.Common.DbParameter Overrides CommonUtils.AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) | Improve this Doc View Source Div(String, String, Type, Type) Declaration public override string Div(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String Overrides CommonUtils.Div(String, String, Type, Type) | Improve this Doc View Source FormatSql(String, Object[]) Declaration public override string FormatSql(string sql, params object[] args) Parameters Type Name Description System.String sql System.Object [] args Returns Type Description System.String Overrides CommonUtils.FormatSql(String, Object[]) | Improve this Doc View Source GetDbParamtersByObject(String, Object) Declaration public override DbParameter[] GetDbParamtersByObject(string sql, object obj) Parameters Type Name Description System.String sql System.Object obj Returns Type Description System.Data.Common.DbParameter [] Overrides CommonUtils.GetDbParamtersByObject(String, Object) | Improve this Doc View Source GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public override string GetNoneParamaterSqlValue(List<DbParameter> specialParams, string specialParamFlag, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > specialParams System.String specialParamFlag ColumnInfo col System.Type type System.Object value Returns Type Description System.String Overrides CommonUtils.GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) | Improve this Doc View Source IsNull(String, Object) Declaration public override string IsNull(string sql, object value) Parameters Type Name Description System.String sql System.Object value Returns Type Description System.String Overrides CommonUtils.IsNull(String, Object) | Improve this Doc View Source Mod(String, String, Type, Type) Declaration public override string Mod(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String Overrides CommonUtils.Mod(String, String, Type, Type) | Improve this Doc View Source QuoteParamterName(String) Declaration public override string QuoteParamterName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Overrides CommonUtils.QuoteParamterName(String) | Improve this Doc View Source QuoteReadColumnAdapter(Type, Type, String) Declaration protected override string QuoteReadColumnAdapter(Type type, Type mapType, string columnName) Parameters Type Name Description System.Type type System.Type mapType System.String columnName Returns Type Description System.String Overrides CommonUtils.QuoteReadColumnAdapter(Type, Type, String) | Improve this Doc View Source QuoteSqlName(String[]) Declaration public override string QuoteSqlName(params string[] name) Parameters Type Name Description System.String [] name Returns Type Description System.String Overrides CommonUtils.QuoteSqlName(String[]) | Improve this Doc View Source QuoteWriteParamterAdapter(Type, String) Declaration public override string QuoteWriteParamterAdapter(Type type, string paramterName) Parameters Type Name Description System.Type type System.String paramterName Returns Type Description System.String Overrides CommonUtils.QuoteWriteParamterAdapter(Type, String) | Improve this Doc View Source SplitTableName(String) Declaration public override string[] SplitTableName(string name) Parameters Type Name Description System.String name Returns Type Description System.String [] Overrides CommonUtils.SplitTableName(String) | Improve this Doc View Source StringConcat(String[], Type[]) Declaration public override string StringConcat(string[] objs, Type[] types) Parameters Type Name Description System.String [] objs System.Type [] types Returns Type Description System.String Overrides CommonUtils.StringConcat(String[], Type[]) | Improve this Doc View Source TrimQuoteSqlName(String) Declaration public override string TrimQuoteSqlName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Overrides CommonUtils.TrimQuoteSqlName(String)"
  },
  "freesql/provider/FreeSql.Oracle.html": {
    "href": "freesql/provider/FreeSql.Oracle.html",
    "title": "Namespace FreeSql.Oracle | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Oracle Classes OracleProvider<TMark>"
  },
  "freesql/provider/FreeSql.Oracle.OracleProvider-1.html": {
    "href": "freesql/provider/FreeSql.Oracle.OracleProvider-1.html",
    "title": "Class OracleProvider<TMark> | FreeSql API Docs",
    "keywords": "Class OracleProvider<TMark> Inheritance System.Object BaseDbProvider OracleProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Oracle Assembly : FreeSql.Provider.Oracle.dll Syntax public class OracleProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source OracleProvider(String, String[], Func<DbConnection>) Declaration public OracleProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.PostgreSQL.Curd.html": {
    "href": "freesql/provider/FreeSql.PostgreSQL.Curd.html",
    "title": "Namespace FreeSql.PostgreSQL.Curd | FreeSql API Docs",
    "keywords": "Namespace FreeSql.PostgreSQL.Curd Classes OnConflictDoUpdate<T1>"
  },
  "freesql/provider/FreeSql.PostgreSQL.Curd.OnConflictDoUpdate-1.html": {
    "href": "freesql/provider/FreeSql.PostgreSQL.Curd.OnConflictDoUpdate-1.html",
    "title": "Class OnConflictDoUpdate<T1> | FreeSql API Docs",
    "keywords": "Class OnConflictDoUpdate<T1> Inheritance System.Object OnConflictDoUpdate<T1> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.PostgreSQL.Curd Assembly : FreeSql.Provider.PostgreSQL.dll Syntax public class OnConflictDoUpdate<T1> where T1 : class Type Parameters Name Description T1 Constructors | Improve this Doc View Source OnConflictDoUpdate(IInsert<T1>, Expression<Func<T1, Object>>) Declaration public OnConflictDoUpdate(IInsert<T1> insert, Expression<Func<T1, object>> columns = null) Parameters Type Name Description IInsert <T1> insert System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Methods | Improve this Doc View Source ClearData() Declaration protected void ClearData() | Improve this Doc View Source DoNothing() Declaration public OnConflictDoUpdate<T1> DoNothing() Returns Type Description OnConflictDoUpdate <T1> | Improve this Doc View Source ExecuteAffrows() Declaration public long ExecuteAffrows() Returns Type Description System.Int64 | Improve this Doc View Source ExecuteAffrowsAsync(CancellationToken) Declaration public Task<long> ExecuteAffrowsAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int64 > | Improve this Doc View Source IgnoreColumns(Expression<Func<T1, Object>>) Declaration public OnConflictDoUpdate<T1> IgnoreColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OnConflictDoUpdate <T1> | Improve this Doc View Source IgnoreColumns(String[]) Declaration public OnConflictDoUpdate<T1> IgnoreColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OnConflictDoUpdate <T1> | Improve this Doc View Source Set<TMember>(Expression<Func<T1, TMember>>, TMember) Declaration public OnConflictDoUpdate<T1> Set<TMember>(Expression<Func<T1, TMember>> column, TMember value) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, TMember>> column TMember value Returns Type Description OnConflictDoUpdate <T1> Type Parameters Name Description TMember | Improve this Doc View Source SetRaw(String) Declaration public OnConflictDoUpdate<T1> SetRaw(string sql) Parameters Type Name Description System.String sql Returns Type Description OnConflictDoUpdate <T1> | Improve this Doc View Source ToSql() Declaration public string ToSql() Returns Type Description System.String | Improve this Doc View Source UpdateColumns(Expression<Func<T1, Object>>) Declaration public OnConflictDoUpdate<T1> UpdateColumns(Expression<Func<T1, object>> columns) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T1, System.Object >> columns Returns Type Description OnConflictDoUpdate <T1> | Improve this Doc View Source UpdateColumns(String[]) Declaration public OnConflictDoUpdate<T1> UpdateColumns(string[] columns) Parameters Type Name Description System.String [] columns Returns Type Description OnConflictDoUpdate <T1>"
  },
  "freesql/provider/FreeSql.PostgreSQL.html": {
    "href": "freesql/provider/FreeSql.PostgreSQL.html",
    "title": "Namespace FreeSql.PostgreSQL | FreeSql API Docs",
    "keywords": "Namespace FreeSql.PostgreSQL Classes PostgreSQLProvider<TMark>"
  },
  "freesql/provider/FreeSql.PostgreSQL.PostgreSQLProvider-1.html": {
    "href": "freesql/provider/FreeSql.PostgreSQL.PostgreSQLProvider-1.html",
    "title": "Class PostgreSQLProvider<TMark> | FreeSql API Docs",
    "keywords": "Class PostgreSQLProvider<TMark> Inheritance System.Object BaseDbProvider PostgreSQLProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.PostgreSQL Assembly : FreeSql.Provider.PostgreSQL.dll Syntax public class PostgreSQLProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source PostgreSQLProvider(String, String[], Func<DbConnection>) Declaration public PostgreSQLProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.Sqlite.html": {
    "href": "freesql/provider/FreeSql.Sqlite.html",
    "title": "Namespace FreeSql.Sqlite | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Sqlite Classes SqliteProvider<TMark>"
  },
  "freesql/provider/FreeSql.Sqlite.SqliteProvider-1.html": {
    "href": "freesql/provider/FreeSql.Sqlite.SqliteProvider-1.html",
    "title": "Class SqliteProvider<TMark> | FreeSql API Docs",
    "keywords": "Class SqliteProvider<TMark> Inheritance System.Object BaseDbProvider SqliteProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Sqlite Assembly : FreeSql.Provider.Sqlite.dll Syntax public class SqliteProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source SqliteProvider(String, String[], Func<DbConnection>) Declaration public SqliteProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.SqlServer.html": {
    "href": "freesql/provider/FreeSql.SqlServer.html",
    "title": "Namespace FreeSql.SqlServer | FreeSql API Docs",
    "keywords": "Namespace FreeSql.SqlServer Classes SqlServerProvider<TMark> SqlServerUtils"
  },
  "freesql/provider/FreeSql.SqlServer.SqlServerProvider-1.html": {
    "href": "freesql/provider/FreeSql.SqlServer.SqlServerProvider-1.html",
    "title": "Class SqlServerProvider<TMark> | FreeSql API Docs",
    "keywords": "Class SqlServerProvider<TMark> Inheritance System.Object BaseDbProvider SqlServerProvider<TMark> Implements IFreeSql <TMark> IFreeSql System.IDisposable Inherited Members BaseDbProvider.Select<T1>() BaseDbProvider.Select<T1>(Object) BaseDbProvider.Insert<T1>() BaseDbProvider.Insert<T1>(T1) BaseDbProvider.Insert<T1>(T1[]) BaseDbProvider.Insert<T1>(List<T1>) BaseDbProvider.Insert<T1>(IEnumerable<T1>) BaseDbProvider.Update<T1>() BaseDbProvider.Update<T1>(Object) BaseDbProvider.Delete<T1>() BaseDbProvider.Delete<T1>(Object) BaseDbProvider.InsertOrUpdate<T1>() BaseDbProvider.Ado BaseDbProvider.Aop BaseDbProvider.CodeFirst BaseDbProvider.DbFirst BaseDbProvider.InternalCommonUtils BaseDbProvider.InternalCommonExpression BaseDbProvider.Transaction(Action) BaseDbProvider.Transaction(IsolationLevel, Action) BaseDbProvider.GlobalFilter System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.SqlServer Assembly : FreeSql.Provider.SqlServerForSystem.dll Syntax public class SqlServerProvider<TMark> : BaseDbProvider, IFreeSql<TMark>, IFreeSql, IDisposable Type Parameters Name Description TMark Constructors | Improve this Doc View Source SqlServerProvider(String, String[], Func<DbConnection>) Declaration public SqlServerProvider(string masterConnectionString, string[] slaveConnectionString, Func<DbConnection> connectionFactory = null) Parameters Type Name Description System.String masterConnectionString System.String [] slaveConnectionString System.Func < System.Data.Common.DbConnection > connectionFactory Methods | Improve this Doc View Source CreateDeleteProvider<T1>(Object) Declaration public override IDelete<T1> CreateDeleteProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateDeleteProvider<T1>(Object) | Improve this Doc View Source CreateInsertOrUpdateProvider<T1>() Declaration public override IInsertOrUpdate<T1> CreateInsertOrUpdateProvider<T1>() where T1 : class Returns Type Description IInsertOrUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertOrUpdateProvider<T1>() | Improve this Doc View Source CreateInsertProvider<T1>() Declaration public override IInsert<T1> CreateInsertProvider<T1>() where T1 : class Returns Type Description IInsert <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateInsertProvider<T1>() | Improve this Doc View Source CreateSelectProvider<T1>(Object) Declaration public override ISelect<T1> CreateSelectProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateSelectProvider<T1>(Object) | Improve this Doc View Source CreateUpdateProvider<T1>(Object) Declaration public override IUpdate<T1> CreateUpdateProvider<T1>(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IUpdate <T1> Type Parameters Name Description T1 Overrides BaseDbProvider.CreateUpdateProvider<T1>(Object) | Improve this Doc View Source Dispose() Declaration public override void Dispose() Overrides BaseDbProvider.Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IFreeSql<TMark> IFreeSql System.IDisposable Extension Methods FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlSqlServerGlobalExtensions.SetGlobalSelectWithLock(IFreeSql, SqlServerLock, System.Collections.Generic.Dictionary<System.Type, System.Boolean>) FreeSqlOdbcGlobalExtensions.SetOdbcAdapter(IFreeSql, FreeSql.Odbc.Default.OdbcAdapter)"
  },
  "freesql/provider/FreeSql.SqlServer.SqlServerUtils.html": {
    "href": "freesql/provider/FreeSql.SqlServer.SqlServerUtils.html",
    "title": "Class SqlServerUtils | FreeSql API Docs",
    "keywords": "Class SqlServerUtils Inheritance System.Object CommonUtils SqlServerUtils Inherited Members CommonUtils.GetSplitTableNames(String, Char, Char, Int32) CommonUtils.RewriteColumn(ColumnInfo, String) CommonUtils.RereadColumn(ColumnInfo, String) CommonUtils.FieldAsAlias(String) CommonUtils.IIF(String, String, String) CommonUtils.BytesSqlRaw(Byte[]) CommonUtils._orm CommonUtils.CodeFirst CommonUtils.GetTableByEntity(Type) CommonUtils.dbTables CommonUtils.dbTablesLock CommonUtils.ConfigEntity<T>(Action<TableFluent<T>>) CommonUtils.ConfigEntity(Type, Action<TableFluent>) CommonUtils.GetConfigEntity(Type) CommonUtils.GetEntityTableAttribute(Type) CommonUtils.GetEntityColumnAttribute(Type, PropertyInfo) CommonUtils.GetEntityNavigateAttribute(Type, PropertyInfo) CommonUtils.GetEntityIndexAttribute(Type) CommonUtils.WhereObject(TableInfo, String, Object) CommonUtils.WhereItems<TEntity>(ColumnInfo[], String, IEnumerable<TEntity>) CommonUtils.GetPropertyCommentByDescriptionAttribute(Type) CommonUtils.GetProperyCommentBySummary(Type) CommonUtils.PrevReheatConnectionPool(ObjectPool<DbConnection>, Int32) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.SqlServer Assembly : FreeSql.Provider.SqlServerForSystem.dll Syntax public class SqlServerUtils : CommonUtils Constructors | Improve this Doc View Source SqlServerUtils(IFreeSql) Declaration public SqlServerUtils(IFreeSql orm) Parameters Type Name Description IFreeSql orm Fields | Improve this Doc View Source ServerVersion Declaration public int ServerVersion Field Value Type Description System.Int32 Properties | Improve this Doc View Source IsSelectRowNumber Declaration public bool IsSelectRowNumber { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSqlServer2005 Declaration public bool IsSqlServer2005 { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Now Declaration public override string Now { get; } Property Value Type Description System.String Overrides CommonUtils.Now | Improve this Doc View Source NowUtc Declaration public override string NowUtc { get; } Property Value Type Description System.String Overrides CommonUtils.NowUtc Methods | Improve this Doc View Source AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public override DbParameter AppendParamter(List<DbParameter> _params, string parameterName, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > _params System.String parameterName ColumnInfo col System.Type type System.Object value Returns Type Description System.Data.Common.DbParameter Overrides CommonUtils.AppendParamter(List<DbParameter>, String, ColumnInfo, Type, Object) | Improve this Doc View Source Div(String, String, Type, Type) Declaration public override string Div(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String Overrides CommonUtils.Div(String, String, Type, Type) | Improve this Doc View Source FormatSql(String, Object[]) Declaration public override string FormatSql(string sql, params object[] args) Parameters Type Name Description System.String sql System.Object [] args Returns Type Description System.String Overrides CommonUtils.FormatSql(String, Object[]) | Improve this Doc View Source GetDbParamtersByObject(String, Object) Declaration public override DbParameter[] GetDbParamtersByObject(string sql, object obj) Parameters Type Name Description System.String sql System.Object obj Returns Type Description System.Data.Common.DbParameter [] Overrides CommonUtils.GetDbParamtersByObject(String, Object) | Improve this Doc View Source GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) Declaration public override string GetNoneParamaterSqlValue(List<DbParameter> specialParams, string specialParamFlag, ColumnInfo col, Type type, object value) Parameters Type Name Description System.Collections.Generic.List < System.Data.Common.DbParameter > specialParams System.String specialParamFlag ColumnInfo col System.Type type System.Object value Returns Type Description System.String Overrides CommonUtils.GetNoneParamaterSqlValue(List<DbParameter>, String, ColumnInfo, Type, Object) | Improve this Doc View Source IsNull(String, Object) Declaration public override string IsNull(string sql, object value) Parameters Type Name Description System.String sql System.Object value Returns Type Description System.String Overrides CommonUtils.IsNull(String, Object) | Improve this Doc View Source Mod(String, String, Type, Type) Declaration public override string Mod(string left, string right, Type leftType, Type rightType) Parameters Type Name Description System.String left System.String right System.Type leftType System.Type rightType Returns Type Description System.String Overrides CommonUtils.Mod(String, String, Type, Type) | Improve this Doc View Source QuoteParamterName(String) Declaration public override string QuoteParamterName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Overrides CommonUtils.QuoteParamterName(String) | Improve this Doc View Source QuoteReadColumnAdapter(Type, Type, String) Declaration protected override string QuoteReadColumnAdapter(Type type, Type mapType, string columnName) Parameters Type Name Description System.Type type System.Type mapType System.String columnName Returns Type Description System.String Overrides CommonUtils.QuoteReadColumnAdapter(Type, Type, String) | Improve this Doc View Source QuoteSqlName(String[]) Declaration public override string QuoteSqlName(params string[] name) Parameters Type Name Description System.String [] name Returns Type Description System.String Overrides CommonUtils.QuoteSqlName(String[]) | Improve this Doc View Source QuoteWriteParamterAdapter(Type, String) Declaration public override string QuoteWriteParamterAdapter(Type type, string paramterName) Parameters Type Name Description System.Type type System.String paramterName Returns Type Description System.String Overrides CommonUtils.QuoteWriteParamterAdapter(Type, String) | Improve this Doc View Source SplitTableName(String) Declaration public override string[] SplitTableName(string name) Parameters Type Name Description System.String name Returns Type Description System.String [] Overrides CommonUtils.SplitTableName(String) | Improve this Doc View Source StringConcat(String[], Type[]) Declaration public override string StringConcat(string[] objs, Type[] types) Parameters Type Name Description System.String [] objs System.Type [] types Returns Type Description System.String Overrides CommonUtils.StringConcat(String[], Type[]) | Improve this Doc View Source TrimQuoteSqlName(String) Declaration public override string TrimQuoteSqlName(string name) Parameters Type Name Description System.String name Returns Type Description System.String Overrides CommonUtils.TrimQuoteSqlName(String)"
  },
  "freesql/provider/index.html": {
    "href": "freesql/provider/index.html",
    "title": "| FreeSql API Docs",
    "keywords": ""
  },
  "freesql/provider/Newtonsoft.Json.html": {
    "href": "freesql/provider/Newtonsoft.Json.html",
    "title": "Namespace Newtonsoft.Json | FreeSql API Docs",
    "keywords": "Namespace Newtonsoft.Json Classes PostgreSQLTypesConverter"
  },
  "freesql/provider/Newtonsoft.Json.PostgreSQLTypesConverter.html": {
    "href": "freesql/provider/Newtonsoft.Json.PostgreSQLTypesConverter.html",
    "title": "Class PostgreSQLTypesConverter | FreeSql API Docs",
    "keywords": "Class PostgreSQLTypesConverter Inheritance System.Object Newtonsoft.Json.JsonConverter PostgreSQLTypesConverter Inherited Members Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Newtonsoft.Json Assembly : FreeSql.Provider.PostgreSQL.dll Syntax public class PostgreSQLTypesConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description System.Type objectType Returns Type Description System.Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source GetJObject(Array, Int32[], Int32) Declaration public static JToken GetJObject(Array value, int[] indices, int idx) Parameters Type Name Description System.Array value System.Int32 [] indices System.Int32 idx Returns Type Description Newtonsoft.Json.Linq.JToken | Improve this Doc View Source GetJObject(Object) Declaration public static JToken GetJObject(object value) Parameters Type Name Description System.Object value Returns Type Description Newtonsoft.Json.Linq.JToken | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader System.Type objectType System.Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description System.Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer System.Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "freesql/repository/FreeSql.BaseRepository-1.html": {
    "href": "freesql/repository/FreeSql.BaseRepository-1.html",
    "title": "Class BaseRepository<TEntity> | FreeSql API Docs",
    "keywords": "Class BaseRepository<TEntity> Inheritance System.Object BaseRepository<TEntity> BaseRepository<TEntity, TKey> Implements IBaseRepository <TEntity> IBaseRepository System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public abstract class BaseRepository<TEntity> : IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity Constructors | Improve this Doc View Source BaseRepository(IFreeSql, Expression<Func<TEntity, Boolean>>, Func<String, String>) Declaration protected BaseRepository(IFreeSql fsql, Expression<Func<TEntity, bool>> filter, Func<string, string> asTable = null) Parameters Type Name Description IFreeSql fsql System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filter System.Func < System.String , System.String > asTable Properties | Improve this Doc View Source DataFilter Declaration public IDataFilter<TEntity> DataFilter { get; } Property Value Type Description IDataFilter <TEntity> | Improve this Doc View Source DbContextOptions Declaration public DbContextOptions DbContextOptions { get; set; } Property Value Type Description DbContextOptions | Improve this Doc View Source EntityType Declaration public Type EntityType { get; } Property Value Type Description System.Type | Improve this Doc View Source Orm Declaration public IFreeSql Orm { get; } Property Value Type Description IFreeSql | Improve this Doc View Source Select Declaration public virtual ISelect<TEntity> Select { get; } Property Value Type Description ISelect <TEntity> | Improve this Doc View Source UnitOfWork Declaration public IUnitOfWork UnitOfWork { get; set; } Property Value Type Description IUnitOfWork | Improve this Doc View Source UpdateDiy Declaration public IUpdate<TEntity> UpdateDiy { get; } Property Value Type Description IUpdate <TEntity> Methods | Improve this Doc View Source ApplyDataFilter(String, Expression<Func<TEntity, Boolean>>) Declaration protected void ApplyDataFilter(string name, Expression<Func<TEntity, bool>> exp) Parameters Type Name Description System.String name System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> exp | Improve this Doc View Source AsTable(Func<String, String>) Declaration public void AsTable(Func<string, string> rule) Parameters Type Name Description System.Func < System.String , System.String > rule | Improve this Doc View Source AsType(Type) Declaration public void AsType(Type entityType) Parameters Type Name Description System.Type entityType | Improve this Doc View Source Attach(TEntity) Declaration public void Attach(TEntity data) Parameters Type Name Description TEntity data | Improve this Doc View Source Attach(IEnumerable<TEntity>) Declaration public void Attach(IEnumerable<TEntity> data) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data | Improve this Doc View Source AttachOnlyPrimary(TEntity) Declaration public IBaseRepository<TEntity> AttachOnlyPrimary(TEntity data) Parameters Type Name Description TEntity data Returns Type Description IBaseRepository <TEntity> | Improve this Doc View Source BeginEdit(List<TEntity>) Declaration public void BeginEdit(List<TEntity> data) Parameters Type Name Description System.Collections.Generic.List <TEntity> data | Improve this Doc View Source Delete(TEntity) Declaration public virtual int Delete(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description System.Int32 | Improve this Doc View Source Delete(IEnumerable<TEntity>) Declaration public virtual int Delete(IEnumerable<TEntity> entitys) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys Returns Type Description System.Int32 | Improve this Doc View Source Delete(Expression<Func<TEntity, Boolean>>) Declaration public virtual int Delete(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(TEntity, CancellationToken) Declaration public virtual Task<int> DeleteAsync(TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source DeleteAsync(IEnumerable<TEntity>, CancellationToken) Declaration public virtual Task<int> DeleteAsync(IEnumerable<TEntity> entitys, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public virtual Task<int> DeleteAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source EndEdit(List<TEntity>) Declaration public int EndEdit(List<TEntity> data = null) Parameters Type Name Description System.Collections.Generic.List <TEntity> data Returns Type Description System.Int32 | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source FlushState() Declaration public void FlushState() | Improve this Doc View Source Insert(TEntity) Declaration public virtual TEntity Insert(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity | Improve this Doc View Source Insert(IEnumerable<TEntity>) Declaration public virtual List<TEntity> Insert(IEnumerable<TEntity> entitys) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys Returns Type Description System.Collections.Generic.List <TEntity> | Improve this Doc View Source InsertAsync(TEntity, CancellationToken) Declaration public virtual Task<TEntity> InsertAsync(TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TEntity> | Improve this Doc View Source InsertAsync(IEnumerable<TEntity>, CancellationToken) Declaration public virtual Task<List<TEntity>> InsertAsync(IEnumerable<TEntity> entitys, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TEntity>> | Improve this Doc View Source InsertOrUpdate(TEntity) Declaration public virtual TEntity InsertOrUpdate(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity | Improve this Doc View Source InsertOrUpdateAsync(TEntity, CancellationToken) Declaration public virtual Task<TEntity> InsertOrUpdateAsync(TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TEntity> | Improve this Doc View Source SaveMany(TEntity, String) Declaration public void SaveMany(TEntity entity, string propertyName) Parameters Type Name Description TEntity entity System.String propertyName | Improve this Doc View Source SaveManyAsync(TEntity, String, CancellationToken) Declaration public Task SaveManyAsync(TEntity entity, string propertyName, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.String propertyName System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update(TEntity) Declaration public virtual int Update(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description System.Int32 | Improve this Doc View Source Update(IEnumerable<TEntity>) Declaration public virtual int Update(IEnumerable<TEntity> entitys) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys Returns Type Description System.Int32 | Improve this Doc View Source UpdateAsync(TEntity, CancellationToken) Declaration public virtual Task<int> UpdateAsync(TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source UpdateAsync(IEnumerable<TEntity>, CancellationToken) Declaration public virtual Task<int> UpdateAsync(IEnumerable<TEntity> entitys, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source Where(Expression<Func<TEntity, Boolean>>) Declaration public ISelect<TEntity> Where(Expression<Func<TEntity, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> exp Returns Type Description ISelect <TEntity> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<TEntity, Boolean>>) Declaration public ISelect<TEntity> WhereIf(bool condition, Expression<Func<TEntity, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> exp Returns Type Description ISelect <TEntity> Implements IBaseRepository<TEntity> IBaseRepository System.IDisposable"
  },
  "freesql/repository/FreeSql.BaseRepository-2.html": {
    "href": "freesql/repository/FreeSql.BaseRepository-2.html",
    "title": "Class BaseRepository<TEntity, TKey> | FreeSql API Docs",
    "keywords": "Class BaseRepository<TEntity, TKey> Inheritance System.Object BaseRepository <TEntity> BaseRepository<TEntity, TKey> DefaultRepository<TEntity, TKey> GuidRepository<TEntity> Implements IBaseRepository <TEntity, TKey> IBaseRepository <TEntity> IBaseRepository System.IDisposable Inherited Members BaseRepository<TEntity>.DataFilter BaseRepository<TEntity>.ApplyDataFilter(String, Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Dispose() BaseRepository<TEntity>.EntityType BaseRepository<TEntity>.AsType(Type) BaseRepository<TEntity>.AsTable(Func<String, String>) BaseRepository<TEntity>.DbContextOptions BaseRepository<TEntity>.Orm BaseRepository<TEntity>.UnitOfWork BaseRepository<TEntity>.UpdateDiy BaseRepository<TEntity>.Select BaseRepository<TEntity>.Where(Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.WhereIf(Boolean, Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Delete(Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Delete(TEntity) BaseRepository<TEntity>.Delete(IEnumerable<TEntity>) BaseRepository<TEntity>.Insert(TEntity) BaseRepository<TEntity>.Insert(IEnumerable<TEntity>) BaseRepository<TEntity>.Update(TEntity) BaseRepository<TEntity>.Update(IEnumerable<TEntity>) BaseRepository<TEntity>.Attach(TEntity) BaseRepository<TEntity>.Attach(IEnumerable<TEntity>) BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) BaseRepository<TEntity>.FlushState() BaseRepository<TEntity>.InsertOrUpdate(TEntity) BaseRepository<TEntity>.SaveMany(TEntity, String) BaseRepository<TEntity>.BeginEdit(List<TEntity>) BaseRepository<TEntity>.EndEdit(List<TEntity>) BaseRepository<TEntity>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) BaseRepository<TEntity>.DeleteAsync(TEntity, CancellationToken) BaseRepository<TEntity>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.InsertAsync(TEntity, CancellationToken) BaseRepository<TEntity>.InsertAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.UpdateAsync(TEntity, CancellationToken) BaseRepository<TEntity>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, CancellationToken) BaseRepository<TEntity>.SaveManyAsync(TEntity, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public abstract class BaseRepository<TEntity, TKey> : BaseRepository<TEntity>, IBaseRepository<TEntity, TKey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity TKey Constructors | Improve this Doc View Source BaseRepository(IFreeSql, Expression<Func<TEntity, Boolean>>, Func<String, String>) Declaration public BaseRepository(IFreeSql fsql, Expression<Func<TEntity, bool>> filter, Func<string, string> asTable = null) Parameters Type Name Description IFreeSql fsql System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filter System.Func < System.String , System.String > asTable Methods | Improve this Doc View Source Delete(TKey) Declaration public virtual int Delete(TKey id) Parameters Type Name Description TKey id Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(TKey, CancellationToken) Declaration public virtual Task<int> DeleteAsync(TKey id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TKey id System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source Find(TKey) Declaration public virtual TEntity Find(TKey id) Parameters Type Name Description TKey id Returns Type Description TEntity | Improve this Doc View Source FindAsync(TKey, CancellationToken) Declaration public virtual Task<TEntity> FindAsync(TKey id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TKey id System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TEntity> | Improve this Doc View Source Get(TKey) Declaration public TEntity Get(TKey id) Parameters Type Name Description TKey id Returns Type Description TEntity | Improve this Doc View Source GetAsync(TKey, CancellationToken) Declaration public Task<TEntity> GetAsync(TKey id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TKey id System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TEntity> Implements IBaseRepository<TEntity, TKey> IBaseRepository<TEntity> IBaseRepository System.IDisposable"
  },
  "freesql/repository/FreeSql.DbContext.EntityChangeReport.ChangeInfo.html": {
    "href": "freesql/repository/FreeSql.DbContext.EntityChangeReport.ChangeInfo.html",
    "title": "Class DbContext.EntityChangeReport.ChangeInfo | FreeSql API Docs",
    "keywords": "Class DbContext.EntityChangeReport.ChangeInfo Inheritance System.Object DbContext.EntityChangeReport.ChangeInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class ChangeInfo Properties | Improve this Doc View Source BeforeObject Type = Update 的时候，获取更新之前的对象 Declaration public object BeforeObject { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Object Declaration public object Object { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Type Declaration public DbContext.EntityChangeType Type { get; set; } Property Value Type Description DbContext.EntityChangeType"
  },
  "freesql/repository/FreeSql.DbContext.EntityChangeReport.html": {
    "href": "freesql/repository/FreeSql.DbContext.EntityChangeReport.html",
    "title": "Class DbContext.EntityChangeReport | FreeSql API Docs",
    "keywords": "Class DbContext.EntityChangeReport Inheritance System.Object DbContext.EntityChangeReport Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class EntityChangeReport Properties | Improve this Doc View Source OnChange 实体变化事件 Declaration public Action<List<DbContext.EntityChangeReport.ChangeInfo>> OnChange { get; set; } Property Value Type Description System.Action < System.Collections.Generic.List < DbContext.EntityChangeReport.ChangeInfo >> | Improve this Doc View Source Report 实体变化记录 Declaration public List<DbContext.EntityChangeReport.ChangeInfo> Report { get; } Property Value Type Description System.Collections.Generic.List < DbContext.EntityChangeReport.ChangeInfo >"
  },
  "freesql/repository/FreeSql.DbContext.EntityChangeType.html": {
    "href": "freesql/repository/FreeSql.DbContext.EntityChangeType.html",
    "title": "Enum DbContext.EntityChangeType | FreeSql API Docs",
    "keywords": "Enum DbContext.EntityChangeType Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public enum EntityChangeType Fields Name Description Delete Insert SqlRaw Update"
  },
  "freesql/repository/FreeSql.DbContext.html": {
    "href": "freesql/repository/FreeSql.DbContext.html",
    "title": "Class DbContext | FreeSql API Docs",
    "keywords": "Class DbContext Inheritance System.Object DbContext FreeContext Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public abstract class DbContext : IDisposable Constructors | Improve this Doc View Source DbContext() Declaration protected DbContext() | Improve this Doc View Source DbContext(IFreeSql, DbContextOptions) Declaration protected DbContext(IFreeSql fsql, DbContextOptions options) Parameters Type Name Description IFreeSql fsql DbContextOptions options Fields | Improve this Doc View Source _dicSet Declaration protected Dictionary<Type, IDbSet> _dicSet Field Value Type Description System.Collections.Generic.Dictionary < System.Type , IDbSet > | Improve this Doc View Source _listSet Declaration protected List<IDbSet> _listSet Field Value Type Description System.Collections.Generic.List < IDbSet > Properties | Improve this Doc View Source AllSets Declaration protected Dictionary<string, IDbSet> AllSets { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , IDbSet > | Improve this Doc View Source Options Declaration public DbContextOptions Options { get; set; } Property Value Type Description DbContextOptions | Improve this Doc View Source Orm 该对象 Select/Delete/Insert/Update/InsertOrUpdate 与 DbContext 事务保持一致，可省略传递 WithTransaction Declaration public IFreeSql Orm { get; } Property Value Type Description IFreeSql | Improve this Doc View Source UnitOfWork Declaration public IUnitOfWork UnitOfWork { get; set; } Property Value Type Description IUnitOfWork Methods | Improve this Doc View Source Add<TEntity>(TEntity) 添加 Declaration public void Add<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Type Parameters Name Description TEntity | Improve this Doc View Source AddAsync<TEntity>(TEntity) Declaration public Task AddAsync<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEntity | Improve this Doc View Source AddOrUpdate<TEntity>(TEntity) 添加或更新 Declaration public void AddOrUpdate<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Type Parameters Name Description TEntity | Improve this Doc View Source AddOrUpdateAsync<TEntity>(TEntity) Declaration public Task AddOrUpdateAsync<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEntity | Improve this Doc View Source AddRange<TEntity>(IEnumerable<TEntity>) Declaration public void AddRange<TEntity>(IEnumerable<TEntity> data) where TEntity : class Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data Type Parameters Name Description TEntity | Improve this Doc View Source AddRangeAsync<TEntity>(IEnumerable<TEntity>) Declaration public Task AddRangeAsync<TEntity>(IEnumerable<TEntity> data) where TEntity : class Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEntity | Improve this Doc View Source Attach<TEntity>(TEntity) 附加实体，可用于不查询就更新或删除 Declaration public void Attach<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Type Parameters Name Description TEntity | Improve this Doc View Source AttachOnlyPrimary<TEntity>(TEntity) 附加实体，并且只附加主键值，可用于不更新属性值为null或默认值的字段 Declaration public DbContext AttachOnlyPrimary<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Returns Type Description DbContext Type Parameters Name Description TEntity | Improve this Doc View Source AttachRange<TEntity>(IEnumerable<TEntity>) Declaration public void AttachRange<TEntity>(IEnumerable<TEntity> data) where TEntity : class Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data Type Parameters Name Description TEntity | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source OnConfiguring(DbContextOptionsBuilder) Declaration protected virtual void OnConfiguring(DbContextOptionsBuilder options) Parameters Type Name Description DbContextOptionsBuilder options | Improve this Doc View Source OnModelCreating(ICodeFirst) Declaration protected virtual void OnModelCreating(ICodeFirst codefirst) Parameters Type Name Description ICodeFirst codefirst | Improve this Doc View Source Remove<TEntity>(TEntity) 删除 Declaration public void Remove<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Type Parameters Name Description TEntity | Improve this Doc View Source RemoveRange<TEntity>(IEnumerable<TEntity>) Declaration public void RemoveRange<TEntity>(IEnumerable<TEntity> data) where TEntity : class Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data Type Parameters Name Description TEntity | Improve this Doc View Source SaveChanges() Declaration public virtual int SaveChanges() Returns Type Description System.Int32 | Improve this Doc View Source SaveChangesAsync(CancellationToken) Declaration public virtual Task<int> SaveChangesAsync(CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source SaveMany<TEntity>(TEntity, String) 保存实体的指定 ManyToMany/OneToMany 导航属性（完整对比） 场景：在关闭级联保存功能之后，手工使用本方法 例子：保存商品的 OneToMany 集合属性，SaveMany(goods, \"Skus\") 当 goods.Skus 为空(非null)时，会删除表中已存在的所有数据 当 goods.Skus 不为空(非null)时，添加/更新后，删除表中不存在 Skus 集合属性的所有记录 Declaration public void SaveMany<TEntity>(TEntity data, string propertyName) where TEntity : class Parameters Type Name Description TEntity data 实体对象 System.String propertyName 属性名 Type Parameters Name Description TEntity | Improve this Doc View Source SaveManyAsync<TEntity>(TEntity, String) Declaration public Task SaveManyAsync<TEntity>(TEntity data, string propertyName) where TEntity : class Parameters Type Name Description TEntity data System.String propertyName Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEntity | Improve this Doc View Source Set(Type) Declaration public virtual IDbSet Set(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description IDbSet | Improve this Doc View Source Set<TEntity>() Declaration public DbSet<TEntity> Set<TEntity>() where TEntity : class Returns Type Description DbSet <TEntity> Type Parameters Name Description TEntity | Improve this Doc View Source Update<TEntity>(TEntity) 更新 Declaration public void Update<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Type Parameters Name Description TEntity | Improve this Doc View Source UpdateAsync<TEntity>(TEntity) Declaration public Task UpdateAsync<TEntity>(TEntity data) where TEntity : class Parameters Type Name Description TEntity data Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEntity | Improve this Doc View Source UpdateRange<TEntity>(IEnumerable<TEntity>) Declaration public void UpdateRange<TEntity>(IEnumerable<TEntity> data) where TEntity : class Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data Type Parameters Name Description TEntity | Improve this Doc View Source UpdateRangeAsync<TEntity>(IEnumerable<TEntity>) Declaration public Task UpdateRangeAsync<TEntity>(IEnumerable<TEntity> data) where TEntity : class Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description TEntity Implements System.IDisposable"
  },
  "freesql/repository/FreeSql.DbContextOptions.html": {
    "href": "freesql/repository/FreeSql.DbContextOptions.html",
    "title": "Class DbContextOptions | FreeSql API Docs",
    "keywords": "Class DbContextOptions Inheritance System.Object DbContextOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class DbContextOptions Properties | Improve this Doc View Source EnableAddOrUpdateNavigateList 是否开启一对多，多对多级联保存功能 【一对多】模型下， 保存时可级联保存实体的属性集合。出于使用安全考虑我们没做完整对比，只实现实体属性集合的添加或更新操作，所以不会删除实体属性集合的数据。 完整对比的功能使用起来太危险，试想下面的场景： - 保存的时候，实体的属性集合是空的，如何操作？记录全部删除？ - 保存的时候，由于数据库中记录非常之多，那么只想保存子表的部分数据，或者只需要添加，如何操作？ 【多对多】模型下，我们对中间表的保存是完整对比操作，对外部实体的操作只作新增（*注意不会更新） - 属性集合为空时，删除他们的所有关联数据（中间表） - 属性集合不为空时，与数据库存在的关联数据（中间表）完全对比，计算出应该删除和添加的记录 Declaration public bool EnableAddOrUpdateNavigateList { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source EnableGlobalFilter 是否开启 IFreeSql GlobalFilter 功能（默认：true） Declaration public bool EnableGlobalFilter { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NoneParameter 使用无参数化设置（对应 IInsert/IUpdate） Declaration public bool? NoneParameter { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source OnEntityChange 实体变化事件 Declaration public Action<List<DbContext.EntityChangeReport.ChangeInfo>> OnEntityChange { get; set; } Property Value Type Description System.Action < System.Collections.Generic.List < DbContext.EntityChangeReport.ChangeInfo >>"
  },
  "freesql/repository/FreeSql.DbContextOptionsBuilder.html": {
    "href": "freesql/repository/FreeSql.DbContextOptionsBuilder.html",
    "title": "Class DbContextOptionsBuilder | FreeSql API Docs",
    "keywords": "Class DbContextOptionsBuilder Inheritance System.Object DbContextOptionsBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class DbContextOptionsBuilder Methods | Improve this Doc View Source UseFreeSql(IFreeSql) Declaration public DbContextOptionsBuilder UseFreeSql(IFreeSql orm) Parameters Type Name Description IFreeSql orm Returns Type Description DbContextOptionsBuilder | Improve this Doc View Source UseOptions(DbContextOptions) Declaration public DbContextOptionsBuilder UseOptions(DbContextOptions options) Parameters Type Name Description DbContextOptions options Returns Type Description DbContextOptionsBuilder"
  },
  "freesql/repository/FreeSql.DbSet-1.EntityState.html": {
    "href": "freesql/repository/FreeSql.DbSet-1.EntityState.html",
    "title": "Class DbSet<TEntity>.EntityState | FreeSql API Docs",
    "keywords": "Class DbSet<TEntity>.EntityState Inheritance System.Object DbSet<TEntity>.EntityState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class EntityState Constructors | Improve this Doc View Source EntityState(TEntity, String) Declaration public EntityState(TEntity value, string key) Parameters Type Name Description TEntity value System.String key Properties | Improve this Doc View Source Key Declaration public string Key { get; set; } Property Value Type Description System.String | Improve this Doc View Source OldValue Declaration public TEntity OldValue { get; set; } Property Value Type Description TEntity | Improve this Doc View Source Time Declaration public DateTime Time { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Value Declaration public TEntity Value { get; set; } Property Value Type Description TEntity"
  },
  "freesql/repository/FreeSql.DbSet-1.html": {
    "href": "freesql/repository/FreeSql.DbSet-1.html",
    "title": "Class DbSet<TEntity> | FreeSql API Docs",
    "keywords": "Class DbSet<TEntity> Inheritance System.Object DbSet<TEntity> Implements IDbSet System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public abstract class DbSet<TEntity> : IDbSet, IDisposable where TEntity : class Type Parameters Name Description TEntity Fields | Improve this Doc View Source _dataEditing Declaration protected List<TEntity> _dataEditing Field Value Type Description System.Collections.Generic.List <TEntity> | Improve this Doc View Source _entityType Declaration protected Type _entityType Field Value Type Description System.Type | Improve this Doc View Source _states Declaration protected ConcurrentDictionary<string, DbSet<TEntity>.EntityState> _states Field Value Type Description System.Collections.Concurrent.ConcurrentDictionary < System.String , DbSet.EntityState <>> | Improve this Doc View Source _statesEditing Declaration protected ConcurrentDictionary<string, DbSet<TEntity>.EntityState> _statesEditing Field Value Type Description System.Collections.Concurrent.ConcurrentDictionary < System.String , DbSet.EntityState <>> Properties | Improve this Doc View Source _table Declaration protected TableInfo _table { get; } Property Value Type Description TableInfo | Improve this Doc View Source _tableIdentitys Declaration protected ColumnInfo[] _tableIdentitys { get; } Property Value Type Description ColumnInfo [] | Improve this Doc View Source _tableServerTimes Declaration protected ColumnInfo[] _tableServerTimes { get; } Property Value Type Description ColumnInfo [] | Improve this Doc View Source EntityType Declaration public Type EntityType { get; } Property Value Type Description System.Type | Improve this Doc View Source Select Declaration public ISelect<TEntity> Select { get; } Property Value Type Description ISelect <TEntity> Methods | Improve this Doc View Source Add(TEntity) 添加 Declaration public void Add(TEntity data) Parameters Type Name Description TEntity data | Improve this Doc View Source AddAsync(TEntity, CancellationToken) Declaration public Task AddAsync(TEntity data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity data System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source AddOrUpdate(TEntity) 添加或更新 Declaration public void AddOrUpdate(TEntity data) Parameters Type Name Description TEntity data | Improve this Doc View Source AddOrUpdateAsync(TEntity, CancellationToken) Declaration public Task AddOrUpdateAsync(TEntity data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity data System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source AddRange(IEnumerable<TEntity>) Declaration public void AddRange(IEnumerable<TEntity> data) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data | Improve this Doc View Source AddRangeAsync(IEnumerable<TEntity>, CancellationToken) Declaration public Task AddRangeAsync(IEnumerable<TEntity> data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source AsType(Type) 动态Type，在使用 DbSet<object> 后使用本方法，指定实体类型 Declaration public DbSet<TEntity> AsType(Type entityType) Parameters Type Name Description System.Type entityType Returns Type Description DbSet <TEntity> | Improve this Doc View Source Attach(TEntity) 附加实体，可用于不查询就更新或删除 Declaration public void Attach(TEntity data) Parameters Type Name Description TEntity data | Improve this Doc View Source AttachOnlyPrimary(TEntity) 附加实体，并且只附加主键值，可用于不更新属性值为null或默认值的字段 Declaration public DbSet<TEntity> AttachOnlyPrimary(TEntity data) Parameters Type Name Description TEntity data Returns Type Description DbSet <TEntity> | Improve this Doc View Source AttachRange(IEnumerable<TEntity>) Declaration public void AttachRange(IEnumerable<TEntity> data) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data | Improve this Doc View Source BeginEdit(List<TEntity>) 开始编辑数据，然后调用方法 EndEdit 分析出添加、修改、删除 SQL 语句进行执行 场景：winform 加载表数据后，一顿添加、修改、删除操作之后，最后才点击【保存】 示例：https://github.com/dotnetcore/FreeSql/issues/397 注意：* 本方法只支持单表操作，不支持导航属性级联保存 Declaration public void BeginEdit(List<TEntity> data) Parameters Type Name Description System.Collections.Generic.List <TEntity> data | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source EndEdit(List<TEntity>) 完成编辑数据，进行保存动作 该方法根据 BeginEdit 传入的数据状态分析出添加、修改、删除 SQL 语句 注意：* 本方法只支持单表操作，不支持导航属性级联保存 Declaration public int EndEdit(List<TEntity> data = null) Parameters Type Name Description System.Collections.Generic.List <TEntity> data 可选参数：手工传递最终的 data 值进行对比 默认：如果不传递，则使用 BeginEdit 传入的 data 引用进行对比 Returns Type Description System.Int32 | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source FlushState() 清空状态数据 Declaration public void FlushState() | Improve this Doc View Source OrmDelete(Object) Declaration protected virtual IDelete<TEntity> OrmDelete(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description IDelete <TEntity> | Improve this Doc View Source OrmInsert() Declaration protected virtual IInsert<TEntity> OrmInsert() Returns Type Description IInsert <TEntity> | Improve this Doc View Source OrmInsert(TEntity) Declaration protected virtual IInsert<TEntity> OrmInsert(TEntity data) Parameters Type Name Description TEntity data Returns Type Description IInsert <TEntity> | Improve this Doc View Source OrmInsert(IEnumerable<TEntity>) Declaration protected virtual IInsert<TEntity> OrmInsert(IEnumerable<TEntity> data) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data Returns Type Description IInsert <TEntity> | Improve this Doc View Source OrmSelect(Object) Declaration protected virtual ISelect<TEntity> OrmSelect(object dywhere) Parameters Type Name Description System.Object dywhere Returns Type Description ISelect <TEntity> | Improve this Doc View Source OrmUpdate(IEnumerable<TEntity>) Declaration protected virtual IUpdate<TEntity> OrmUpdate(IEnumerable<TEntity> entitys) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys Returns Type Description IUpdate <TEntity> | Improve this Doc View Source Remove(TEntity) 删除 Declaration public void Remove(TEntity data) Parameters Type Name Description TEntity data | Improve this Doc View Source Remove(Expression<Func<TEntity, Boolean>>) 根据 lambda 条件删除数据 Declaration public int Remove(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate Returns Type Description System.Int32 | Improve this Doc View Source RemoveAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public Task<int> RemoveAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source RemoveRange(IEnumerable<TEntity>) Declaration public void RemoveRange(IEnumerable<TEntity> data) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data | Improve this Doc View Source SaveMany(TEntity, String) 保存实体的指定 ManyToMany/OneToMany 导航属性（完整对比） 场景：在关闭级联保存功能之后，手工使用本方法 例子：保存商品的 OneToMany 集合属性，SaveMany(goods, \"Skus\") 当 goods.Skus 为空(非null)时，会删除表中已存在的所有数据 当 goods.Skus 不为空(非null)时，添加/更新后，删除表中不存在 Skus 集合属性的所有记录 Declaration public void SaveMany(TEntity item, string propertyName) Parameters Type Name Description TEntity item 实体对象 System.String propertyName 属性名 | Improve this Doc View Source SaveManyAsync(TEntity, String, CancellationToken) Declaration public Task SaveManyAsync(TEntity item, string propertyName, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity item System.String propertyName System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update(TEntity) 更新 Declaration public void Update(TEntity data) Parameters Type Name Description TEntity data | Improve this Doc View Source UpdateAsync(TEntity, CancellationToken) Declaration public Task UpdateAsync(TEntity data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity data System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source UpdateRange(IEnumerable<TEntity>) Declaration public void UpdateRange(IEnumerable<TEntity> data) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data | Improve this Doc View Source UpdateRangeAsync(IEnumerable<TEntity>, CancellationToken) Declaration public Task UpdateRangeAsync(IEnumerable<TEntity> data, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> data System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Where(Expression<Func<TEntity, Boolean>>) Declaration public ISelect<TEntity> Where(Expression<Func<TEntity, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> exp Returns Type Description ISelect <TEntity> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<TEntity, Boolean>>) Declaration public ISelect<TEntity> WhereIf(bool condition, Expression<Func<TEntity, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> exp Returns Type Description ISelect <TEntity> Implements IDbSet System.IDisposable"
  },
  "freesql/repository/FreeSql.DefaultRepository-2.html": {
    "href": "freesql/repository/FreeSql.DefaultRepository-2.html",
    "title": "Class DefaultRepository<TEntity, TKey> | FreeSql API Docs",
    "keywords": "Class DefaultRepository<TEntity, TKey> Inheritance System.Object BaseRepository <TEntity> BaseRepository <TEntity, TKey> DefaultRepository<TEntity, TKey> Implements IBaseRepository <TEntity, TKey> IBaseRepository <TEntity> IBaseRepository System.IDisposable Inherited Members BaseRepository<TEntity, TKey>.Delete(TKey) BaseRepository<TEntity, TKey>.Find(TKey) BaseRepository<TEntity, TKey>.Get(TKey) BaseRepository<TEntity, TKey>.DeleteAsync(TKey, CancellationToken) BaseRepository<TEntity, TKey>.FindAsync(TKey, CancellationToken) BaseRepository<TEntity, TKey>.GetAsync(TKey, CancellationToken) BaseRepository<TEntity>.DataFilter BaseRepository<TEntity>.ApplyDataFilter(String, Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Dispose() BaseRepository<TEntity>.EntityType BaseRepository<TEntity>.AsType(Type) BaseRepository<TEntity>.AsTable(Func<String, String>) BaseRepository<TEntity>.DbContextOptions BaseRepository<TEntity>.Orm BaseRepository<TEntity>.UnitOfWork BaseRepository<TEntity>.UpdateDiy BaseRepository<TEntity>.Select BaseRepository<TEntity>.Where(Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.WhereIf(Boolean, Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Delete(Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Delete(TEntity) BaseRepository<TEntity>.Delete(IEnumerable<TEntity>) BaseRepository<TEntity>.Insert(TEntity) BaseRepository<TEntity>.Insert(IEnumerable<TEntity>) BaseRepository<TEntity>.Update(TEntity) BaseRepository<TEntity>.Update(IEnumerable<TEntity>) BaseRepository<TEntity>.Attach(TEntity) BaseRepository<TEntity>.Attach(IEnumerable<TEntity>) BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) BaseRepository<TEntity>.FlushState() BaseRepository<TEntity>.InsertOrUpdate(TEntity) BaseRepository<TEntity>.SaveMany(TEntity, String) BaseRepository<TEntity>.BeginEdit(List<TEntity>) BaseRepository<TEntity>.EndEdit(List<TEntity>) BaseRepository<TEntity>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) BaseRepository<TEntity>.DeleteAsync(TEntity, CancellationToken) BaseRepository<TEntity>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.InsertAsync(TEntity, CancellationToken) BaseRepository<TEntity>.InsertAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.UpdateAsync(TEntity, CancellationToken) BaseRepository<TEntity>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, CancellationToken) BaseRepository<TEntity>.SaveManyAsync(TEntity, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class DefaultRepository<TEntity, TKey> : BaseRepository<TEntity, TKey>, IBaseRepository<TEntity, TKey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity TKey Constructors | Improve this Doc View Source DefaultRepository(IFreeSql) Declaration public DefaultRepository(IFreeSql fsql) Parameters Type Name Description IFreeSql fsql | Improve this Doc View Source DefaultRepository(IFreeSql, UnitOfWorkManager) Declaration public DefaultRepository(IFreeSql fsql, UnitOfWorkManager uowManger) Parameters Type Name Description IFreeSql fsql UnitOfWorkManager uowManger | Improve this Doc View Source DefaultRepository(IFreeSql, Expression<Func<TEntity, Boolean>>) Declaration public DefaultRepository(IFreeSql fsql, Expression<Func<TEntity, bool>> filter) Parameters Type Name Description IFreeSql fsql System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filter Implements IBaseRepository<TEntity, TKey> IBaseRepository<TEntity> IBaseRepository System.IDisposable"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreColumnFluent.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreColumnFluent.html",
    "title": "Class EfCoreColumnFluent | FreeSql API Docs",
    "keywords": "Class EfCoreColumnFluent Inheritance System.Object EfCoreColumnFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class EfCoreColumnFluent Methods | Improve this Doc View Source HasColumnName(String) Declaration public EfCoreColumnFluent HasColumnName(string name) Parameters Type Name Description System.String name Returns Type Description EfCoreColumnFluent | Improve this Doc View Source HasColumnType(String) Declaration public EfCoreColumnFluent HasColumnType(string dbtype) Parameters Type Name Description System.String dbtype Returns Type Description EfCoreColumnFluent | Improve this Doc View Source HasDefaultValueSql(String) Declaration public EfCoreColumnFluent HasDefaultValueSql(string sqlValue) Parameters Type Name Description System.String sqlValue Returns Type Description EfCoreColumnFluent | Improve this Doc View Source HasMaxLength(Int32) Declaration public EfCoreColumnFluent HasMaxLength(int length) Parameters Type Name Description System.Int32 length Returns Type Description EfCoreColumnFluent | Improve this Doc View Source HasPrecision(Int32, Int32) Declaration public EfCoreColumnFluent HasPrecision(int precision, int scale = 0) Parameters Type Name Description System.Int32 precision System.Int32 scale Returns Type Description EfCoreColumnFluent | Improve this Doc View Source Help() 使用 FreeSql FluentApi 方法，当 EFCore FluentApi 方法无法表示的时候使用 Declaration public ColumnFluent Help() Returns Type Description ColumnFluent | Improve this Doc View Source IsRequired() Declaration public EfCoreColumnFluent IsRequired() Returns Type Description EfCoreColumnFluent | Improve this Doc View Source IsRowVersion() Declaration public EfCoreColumnFluent IsRowVersion() Returns Type Description EfCoreColumnFluent"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent.HasIndexFluent.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent.HasIndexFluent.html",
    "title": "Class EfCoreTableFluent.HasIndexFluent | FreeSql API Docs",
    "keywords": "Class EfCoreTableFluent.HasIndexFluent Inheritance System.Object EfCoreTableFluent.HasIndexFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class HasIndexFluent Methods | Improve this Doc View Source HasName(String) Declaration public EfCoreTableFluent.HasIndexFluent HasName(string name) Parameters Type Name Description System.String name Returns Type Description EfCoreTableFluent.HasIndexFluent | Improve this Doc View Source IsUnique() Declaration public EfCoreTableFluent.HasIndexFluent IsUnique() Returns Type Description EfCoreTableFluent.HasIndexFluent"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent.HasManyFluent.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent.HasManyFluent.html",
    "title": "Class EfCoreTableFluent.HasManyFluent | FreeSql API Docs",
    "keywords": "Class EfCoreTableFluent.HasManyFluent Inheritance System.Object EfCoreTableFluent.HasManyFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class HasManyFluent Methods | Improve this Doc View Source HasForeignKey(String) Declaration public EfCoreTableFluent.HasManyFluent HasForeignKey(string foreignKey) Parameters Type Name Description System.String foreignKey Returns Type Description EfCoreTableFluent.HasManyFluent | Improve this Doc View Source WithMany(String, Type) Declaration public void WithMany(string many, Type middleType) Parameters Type Name Description System.String many System.Type middleType | Improve this Doc View Source WithOne(String) Declaration public EfCoreTableFluent.HasManyFluent WithOne(string one) Parameters Type Name Description System.String one Returns Type Description EfCoreTableFluent.HasManyFluent"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent.HasOneFluent.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent.HasOneFluent.html",
    "title": "Class EfCoreTableFluent.HasOneFluent | FreeSql API Docs",
    "keywords": "Class EfCoreTableFluent.HasOneFluent Inheritance System.Object EfCoreTableFluent.HasOneFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class HasOneFluent Methods | Improve this Doc View Source HasForeignKey(String) Declaration public EfCoreTableFluent.HasOneFluent HasForeignKey(string foreignKey) Parameters Type Name Description System.String foreignKey Returns Type Description EfCoreTableFluent.HasOneFluent | Improve this Doc View Source WithMany(String) Declaration public EfCoreTableFluent.HasOneFluent WithMany(string many) Parameters Type Name Description System.String many Returns Type Description EfCoreTableFluent.HasOneFluent | Improve this Doc View Source WithOne(String, String) Declaration public EfCoreTableFluent.HasOneFluent WithOne(string one, string foreignKey) Parameters Type Name Description System.String one System.String foreignKey Returns Type Description EfCoreTableFluent.HasOneFluent"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent.html",
    "title": "Class EfCoreTableFluent | FreeSql API Docs",
    "keywords": "Class EfCoreTableFluent Inheritance System.Object EfCoreTableFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class EfCoreTableFluent Methods | Improve this Doc View Source HasData(IEnumerable<Object>) 使用 Repository + EnableAddOrUpdateNavigateList + NoneParameter 方式插入种子数据 Declaration public EfCoreTableFluent HasData(IEnumerable<object> data) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Object > data Returns Type Description EfCoreTableFluent | Improve this Doc View Source HasIndex(String) Declaration public EfCoreTableFluent.HasIndexFluent HasIndex(string index) Parameters Type Name Description System.String index Returns Type Description EfCoreTableFluent.HasIndexFluent | Improve this Doc View Source HasKey(String) Declaration public EfCoreTableFluent HasKey(string key) Parameters Type Name Description System.String key Returns Type Description EfCoreTableFluent | Improve this Doc View Source HasMany(String) Declaration public EfCoreTableFluent.HasManyFluent HasMany(string many) Parameters Type Name Description System.String many Returns Type Description EfCoreTableFluent.HasManyFluent | Improve this Doc View Source HasOne(String) Declaration public EfCoreTableFluent.HasOneFluent HasOne(string one) Parameters Type Name Description System.String one Returns Type Description EfCoreTableFluent.HasOneFluent | Improve this Doc View Source Help() 使用 FreeSql FluentApi 方法，当 EFCore FluentApi 方法无法表示的时候使用 Declaration public TableFluent Help() Returns Type Description TableFluent | Improve this Doc View Source Ignore(String) Declaration public EfCoreTableFluent Ignore(string property) Parameters Type Name Description System.String property Returns Type Description EfCoreTableFluent | Improve this Doc View Source Property(String) Declaration public EfCoreColumnFluent Property(string property) Parameters Type Name Description System.String property Returns Type Description EfCoreColumnFluent | Improve this Doc View Source ToTable(String) Declaration public EfCoreTableFluent ToTable(string name) Parameters Type Name Description System.String name Returns Type Description EfCoreTableFluent | Improve this Doc View Source ToView(String) Declaration public EfCoreTableFluent ToView(string name) Parameters Type Name Description System.String name Returns Type Description EfCoreTableFluent"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent-1.HasIndexFluent.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent-1.HasIndexFluent.html",
    "title": "Class EfCoreTableFluent<T>.HasIndexFluent | FreeSql API Docs",
    "keywords": "Class EfCoreTableFluent<T>.HasIndexFluent Inheritance System.Object EfCoreTableFluent<T>.HasIndexFluent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class HasIndexFluent Methods | Improve this Doc View Source HasName(String) Declaration public EfCoreTableFluent<T>.HasIndexFluent HasName(string name) Parameters Type Name Description System.String name Returns Type Description EfCoreTableFluent.HasIndexFluent <> | Improve this Doc View Source IsUnique() Declaration public EfCoreTableFluent<T>.HasIndexFluent IsUnique() Returns Type Description EfCoreTableFluent.HasIndexFluent <>"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent-1.HasManyFluent-1.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent-1.HasManyFluent-1.html",
    "title": "Class EfCoreTableFluent<T>.HasManyFluent<T2> | FreeSql API Docs",
    "keywords": "Class EfCoreTableFluent<T>.HasManyFluent<T2> Inheritance System.Object EfCoreTableFluent<T>.HasManyFluent<T2> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class HasManyFluent<T2> Type Parameters Name Description T2 Methods | Improve this Doc View Source HasForeignKey(Expression<Func<T2, Object>>) Declaration public EfCoreTableFluent<T>.HasManyFluent<T2> HasForeignKey(Expression<Func<T2, object>> foreignKey) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T2, System.Object >> foreignKey Returns Type Description EfCoreTableFluent.HasManyFluent <T2> | Improve this Doc View Source WithMany(Expression<Func<T2, IEnumerable<T>>>, Type) Declaration public void WithMany(Expression<Func<T2, IEnumerable<T>>> many, Type middleType) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T2, System.Collections.Generic.IEnumerable <T>>> many System.Type middleType | Improve this Doc View Source WithOne(Expression<Func<T2, T>>) Declaration public EfCoreTableFluent<T>.HasManyFluent<T2> WithOne(Expression<Func<T2, T>> one) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T2, T>> one Returns Type Description EfCoreTableFluent.HasManyFluent <T2>"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent-1.HasOneFluent-1.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent-1.HasOneFluent-1.html",
    "title": "Class EfCoreTableFluent<T>.HasOneFluent<T2> | FreeSql API Docs",
    "keywords": "Class EfCoreTableFluent<T>.HasOneFluent<T2> Inheritance System.Object EfCoreTableFluent<T>.HasOneFluent<T2> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class HasOneFluent<T2> Type Parameters Name Description T2 Methods | Improve this Doc View Source HasForeignKey(Expression<Func<T, Object>>) Declaration public EfCoreTableFluent<T>.HasOneFluent<T2> HasForeignKey(Expression<Func<T, object>> foreignKey) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, System.Object >> foreignKey Returns Type Description EfCoreTableFluent.HasOneFluent <T2> | Improve this Doc View Source WithMany<TMany>(Expression<Func<T2, TMany>>) Declaration public EfCoreTableFluent<T>.HasOneFluent<T2> WithMany<TMany>(Expression<Func<T2, TMany>> many) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T2, TMany>> many Returns Type Description EfCoreTableFluent.HasOneFluent <T2> Type Parameters Name Description TMany | Improve this Doc View Source WithOne(Expression<Func<T2, T>>, Expression<Func<T2, Object>>) Declaration public EfCoreTableFluent<T>.HasOneFluent<T2> WithOne(Expression<Func<T2, T>> one, Expression<Func<T2, object>> foreignKey) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T2, T>> one System.Linq.Expressions.Expression < System.Func <T2, System.Object >> foreignKey Returns Type Description EfCoreTableFluent.HasOneFluent <T2>"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent-1.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.EfCoreTableFluent-1.html",
    "title": "Class EfCoreTableFluent<T> | FreeSql API Docs",
    "keywords": "Class EfCoreTableFluent<T> Inheritance System.Object EfCoreTableFluent<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Extensions.EfCoreFluentApi Assembly : FreeSql.DbContext.dll Syntax public class EfCoreTableFluent<T> Type Parameters Name Description T Methods | Improve this Doc View Source HasData(T) Declaration public EfCoreTableFluent<T> HasData(T data) Parameters Type Name Description T data Returns Type Description EfCoreTableFluent <T> | Improve this Doc View Source HasData(IEnumerable<T>) 使用 Repository + EnableAddOrUpdateNavigateList + NoneParameter 方式插入种子数据 Declaration public EfCoreTableFluent<T> HasData(IEnumerable<T> data) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> data Returns Type Description EfCoreTableFluent <T> | Improve this Doc View Source HasIndex(Expression<Func<T, Object>>) Declaration public EfCoreTableFluent<T>.HasIndexFluent HasIndex(Expression<Func<T, object>> index) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, System.Object >> index Returns Type Description EfCoreTableFluent.HasIndexFluent <> | Improve this Doc View Source HasKey(Expression<Func<T, Object>>) Declaration public EfCoreTableFluent<T> HasKey(Expression<Func<T, object>> key) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, System.Object >> key Returns Type Description EfCoreTableFluent <T> | Improve this Doc View Source HasMany<T2>(Expression<Func<T, IEnumerable<T2>>>) Declaration public EfCoreTableFluent<T>.HasManyFluent<T2> HasMany<T2>(Expression<Func<T, IEnumerable<T2>>> many) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, System.Collections.Generic.IEnumerable <T2>>> many Returns Type Description EfCoreTableFluent.HasManyFluent <T2> Type Parameters Name Description T2 | Improve this Doc View Source HasOne<T2>(Expression<Func<T, T2>>) Declaration public EfCoreTableFluent<T>.HasOneFluent<T2> HasOne<T2>(Expression<Func<T, T2>> one) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, T2>> one Returns Type Description EfCoreTableFluent.HasOneFluent <T2> Type Parameters Name Description T2 | Improve this Doc View Source Help() 使用 FreeSql FluentApi 方法，当 EFCore FluentApi 方法无法表示的时候使用 Declaration public TableFluent<T> Help() Returns Type Description TableFluent <T> | Improve this Doc View Source Ignore<TProperty>(Expression<Func<T, TProperty>>) Declaration public EfCoreTableFluent<T> Ignore<TProperty>(Expression<Func<T, TProperty>> property) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, TProperty>> property Returns Type Description EfCoreTableFluent <T> Type Parameters Name Description TProperty | Improve this Doc View Source Property(String) Declaration public EfCoreColumnFluent Property(string property) Parameters Type Name Description System.String property Returns Type Description EfCoreColumnFluent | Improve this Doc View Source Property<TProperty>(Expression<Func<T, TProperty>>) Declaration public EfCoreColumnFluent Property<TProperty>(Expression<Func<T, TProperty>> property) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <T, TProperty>> property Returns Type Description EfCoreColumnFluent Type Parameters Name Description TProperty | Improve this Doc View Source ToTable(String) Declaration public EfCoreTableFluent<T> ToTable(string name) Parameters Type Name Description System.String name Returns Type Description EfCoreTableFluent <T> | Improve this Doc View Source ToView(String) Declaration public EfCoreTableFluent<T> ToView(string name) Parameters Type Name Description System.String name Returns Type Description EfCoreTableFluent <T>"
  },
  "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.html": {
    "href": "freesql/repository/FreeSql.Extensions.EfCoreFluentApi.html",
    "title": "Namespace FreeSql.Extensions.EfCoreFluentApi | FreeSql API Docs",
    "keywords": "Namespace FreeSql.Extensions.EfCoreFluentApi Classes EfCoreColumnFluent EfCoreTableFluent EfCoreTableFluent.HasIndexFluent EfCoreTableFluent.HasManyFluent EfCoreTableFluent.HasOneFluent EfCoreTableFluent<T> EfCoreTableFluent<T>.HasIndexFluent EfCoreTableFluent<T>.HasManyFluent<T2> EfCoreTableFluent<T>.HasOneFluent<T2>"
  },
  "freesql/repository/FreeSql.FluentDataFilter.html": {
    "href": "freesql/repository/FreeSql.FluentDataFilter.html",
    "title": "Class FluentDataFilter | FreeSql API Docs",
    "keywords": "Class FluentDataFilter Inheritance System.Object FluentDataFilter Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class FluentDataFilter : IDisposable Methods | Improve this Doc View Source Apply<TEntity>(String, Expression<Func<TEntity, Boolean>>) Declaration public FluentDataFilter Apply<TEntity>(string filterName, Expression<Func<TEntity, bool>> filterAndValidateExp) where TEntity : class Parameters Type Name Description System.String filterName System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filterAndValidateExp Returns Type Description FluentDataFilter Type Parameters Name Description TEntity | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements System.IDisposable"
  },
  "freesql/repository/FreeSql.FreeContext.html": {
    "href": "freesql/repository/FreeSql.FreeContext.html",
    "title": "Class FreeContext | FreeSql API Docs",
    "keywords": "Class FreeContext Inheritance System.Object DbContext FreeContext Implements System.IDisposable Inherited Members DbContext.Orm DbContext.UnitOfWork DbContext.Options DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.OnModelCreating(ICodeFirst) DbContext._listSet DbContext._dicSet DbContext.Set<TEntity>() DbContext.Set(Type) DbContext.AllSets DbContext.Add<TEntity>(TEntity) DbContext.AddRange<TEntity>(IEnumerable<TEntity>) DbContext.Update<TEntity>(TEntity) DbContext.UpdateRange<TEntity>(IEnumerable<TEntity>) DbContext.Remove<TEntity>(TEntity) DbContext.RemoveRange<TEntity>(IEnumerable<TEntity>) DbContext.AddOrUpdate<TEntity>(TEntity) DbContext.SaveMany<TEntity>(TEntity, String) DbContext.Attach<TEntity>(TEntity) DbContext.AttachRange<TEntity>(IEnumerable<TEntity>) DbContext.AttachOnlyPrimary<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity) DbContext.AddRangeAsync<TEntity>(IEnumerable<TEntity>) DbContext.UpdateAsync<TEntity>(TEntity) DbContext.UpdateRangeAsync<TEntity>(IEnumerable<TEntity>) DbContext.AddOrUpdateAsync<TEntity>(TEntity) DbContext.SaveManyAsync<TEntity>(TEntity, String) DbContext.Dispose() DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChanges() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class FreeContext : DbContext, IDisposable Constructors | Improve this Doc View Source FreeContext(IFreeSql) Declaration public FreeContext(IFreeSql orm) Parameters Type Name Description IFreeSql orm Implements System.IDisposable"
  },
  "freesql/repository/FreeSql.GuidRepository-1.html": {
    "href": "freesql/repository/FreeSql.GuidRepository-1.html",
    "title": "Class GuidRepository<TEntity> | FreeSql API Docs",
    "keywords": "Class GuidRepository<TEntity> Inheritance System.Object BaseRepository <TEntity> BaseRepository <TEntity, System.Guid > GuidRepository<TEntity> Implements IBaseRepository <TEntity, System.Guid > IBaseRepository <TEntity> IBaseRepository System.IDisposable Inherited Members BaseRepository<TEntity, Guid>.Delete(Guid) BaseRepository<TEntity, Guid>.Find(Guid) BaseRepository<TEntity, Guid>.Get(Guid) BaseRepository<TEntity, Guid>.DeleteAsync(Guid, CancellationToken) BaseRepository<TEntity, Guid>.FindAsync(Guid, CancellationToken) BaseRepository<TEntity, Guid>.GetAsync(Guid, CancellationToken) BaseRepository<TEntity>.DataFilter BaseRepository<TEntity>.ApplyDataFilter(String, Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Dispose() BaseRepository<TEntity>.EntityType BaseRepository<TEntity>.AsType(Type) BaseRepository<TEntity>.AsTable(Func<String, String>) BaseRepository<TEntity>.DbContextOptions BaseRepository<TEntity>.Orm BaseRepository<TEntity>.UnitOfWork BaseRepository<TEntity>.UpdateDiy BaseRepository<TEntity>.Select BaseRepository<TEntity>.Where(Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.WhereIf(Boolean, Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Delete(Expression<Func<TEntity, Boolean>>) BaseRepository<TEntity>.Delete(TEntity) BaseRepository<TEntity>.Delete(IEnumerable<TEntity>) BaseRepository<TEntity>.Insert(TEntity) BaseRepository<TEntity>.Insert(IEnumerable<TEntity>) BaseRepository<TEntity>.Update(TEntity) BaseRepository<TEntity>.Update(IEnumerable<TEntity>) BaseRepository<TEntity>.Attach(TEntity) BaseRepository<TEntity>.Attach(IEnumerable<TEntity>) BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) BaseRepository<TEntity>.FlushState() BaseRepository<TEntity>.InsertOrUpdate(TEntity) BaseRepository<TEntity>.SaveMany(TEntity, String) BaseRepository<TEntity>.BeginEdit(List<TEntity>) BaseRepository<TEntity>.EndEdit(List<TEntity>) BaseRepository<TEntity>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) BaseRepository<TEntity>.DeleteAsync(TEntity, CancellationToken) BaseRepository<TEntity>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.InsertAsync(TEntity, CancellationToken) BaseRepository<TEntity>.InsertAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.UpdateAsync(TEntity, CancellationToken) BaseRepository<TEntity>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, CancellationToken) BaseRepository<TEntity>.SaveManyAsync(TEntity, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class GuidRepository<TEntity> : BaseRepository<TEntity, Guid>, IBaseRepository<TEntity, Guid>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity Constructors | Improve this Doc View Source GuidRepository(IFreeSql) Declaration public GuidRepository(IFreeSql fsql) Parameters Type Name Description IFreeSql fsql | Improve this Doc View Source GuidRepository(IFreeSql, UnitOfWorkManager) Declaration public GuidRepository(IFreeSql fsql, UnitOfWorkManager uowManger) Parameters Type Name Description IFreeSql fsql UnitOfWorkManager uowManger | Improve this Doc View Source GuidRepository(IFreeSql, Expression<Func<TEntity, Boolean>>, Func<String, String>) Declaration public GuidRepository(IFreeSql fsql, Expression<Func<TEntity, bool>> filter, Func<string, string> asTable) Parameters Type Name Description IFreeSql fsql System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filter System.Func < System.String , System.String > asTable Implements IBaseRepository<TEntity, TKey> IBaseRepository<TEntity> IBaseRepository System.IDisposable"
  },
  "freesql/repository/FreeSql.html": {
    "href": "freesql/repository/FreeSql.html",
    "title": "Namespace FreeSql | FreeSql API Docs",
    "keywords": "Namespace FreeSql Classes BaseRepository<TEntity> BaseRepository<TEntity, TKey> DbContext DbContext.EntityChangeReport DbContext.EntityChangeReport.ChangeInfo DbContextOptions DbContextOptionsBuilder DbSet<TEntity> DbSet<TEntity>.EntityState DefaultRepository<TEntity, TKey> FluentDataFilter FreeContext GuidRepository<TEntity> UnitOfWork UnitOfWorkManager 工作单元管理器 Interfaces IBaseRepository IBaseRepository<TEntity> IBaseRepository<TEntity, TKey> IDataFilter<TEntity> IDbSet IRepositoryUnitOfWork IUnitOfWork 工作单元 Enums DbContext.EntityChangeType Propagation 事务传播方式"
  },
  "freesql/repository/FreeSql.IBaseRepository.html": {
    "href": "freesql/repository/FreeSql.IBaseRepository.html",
    "title": "Interface IBaseRepository | FreeSql API Docs",
    "keywords": "Interface IBaseRepository Inherited Members System.IDisposable.Dispose() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public interface IBaseRepository : IDisposable Properties | Improve this Doc View Source DbContextOptions 设置 DbContext 选项 Declaration DbContextOptions DbContextOptions { get; set; } Property Value Type Description DbContextOptions | Improve this Doc View Source EntityType Declaration Type EntityType { get; } Property Value Type Description System.Type | Improve this Doc View Source Orm Declaration IFreeSql Orm { get; } Property Value Type Description IFreeSql | Improve this Doc View Source UnitOfWork Declaration IUnitOfWork UnitOfWork { get; set; } Property Value Type Description IUnitOfWork Methods | Improve this Doc View Source AsTable(Func<String, String>) 分表规则，参数：旧表名；返回：新表名 https://github.com/2881099/FreeSql/wiki/Repository Declaration void AsTable(Func<string, string> rule) Parameters Type Name Description System.Func < System.String , System.String > rule | Improve this Doc View Source AsType(Type) 动态Type，在使用 Repository<object> 后使用本方法，指定实体类型 Declaration void AsType(Type entityType) Parameters Type Name Description System.Type entityType"
  },
  "freesql/repository/FreeSql.IBaseRepository-1.html": {
    "href": "freesql/repository/FreeSql.IBaseRepository-1.html",
    "title": "Interface IBaseRepository<TEntity> | FreeSql API Docs",
    "keywords": "Interface IBaseRepository<TEntity> Inherited Members IBaseRepository.EntityType IBaseRepository.UnitOfWork IBaseRepository.Orm IBaseRepository.AsType(Type) IBaseRepository.AsTable(Func<String, String>) IBaseRepository.DbContextOptions System.IDisposable.Dispose() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public interface IBaseRepository<TEntity> : IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity Properties | Improve this Doc View Source DataFilter Declaration IDataFilter<TEntity> DataFilter { get; } Property Value Type Description IDataFilter <TEntity> | Improve this Doc View Source Select Declaration ISelect<TEntity> Select { get; } Property Value Type Description ISelect <TEntity> | Improve this Doc View Source UpdateDiy Declaration IUpdate<TEntity> UpdateDiy { get; } Property Value Type Description IUpdate <TEntity> Methods | Improve this Doc View Source Attach(TEntity) 附加实体，可用于不查询就更新或删除 Declaration void Attach(TEntity entity) Parameters Type Name Description TEntity entity | Improve this Doc View Source Attach(IEnumerable<TEntity>) Declaration void Attach(IEnumerable<TEntity> entity) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entity | Improve this Doc View Source AttachOnlyPrimary(TEntity) 附加实体，并且只附加主键值，可用于不更新属性值为null或默认值的字段 Declaration IBaseRepository<TEntity> AttachOnlyPrimary(TEntity data) Parameters Type Name Description TEntity data Returns Type Description IBaseRepository <TEntity> | Improve this Doc View Source BeginEdit(List<TEntity>) 开始编辑数据，然后调用方法 EndEdit 分析出添加、修改、删除 SQL 语句进行执行 场景：winform 加载表数据后，一顿添加、修改、删除操作之后，最后才点击【保存】 示例：https://github.com/dotnetcore/FreeSql/issues/397 注意：* 本方法只支持单表操作，不支持导航属性级联保存 Declaration void BeginEdit(List<TEntity> data) Parameters Type Name Description System.Collections.Generic.List <TEntity> data | Improve this Doc View Source Delete(TEntity) Declaration int Delete(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description System.Int32 | Improve this Doc View Source Delete(IEnumerable<TEntity>) Declaration int Delete(IEnumerable<TEntity> entitys) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys Returns Type Description System.Int32 | Improve this Doc View Source Delete(Expression<Func<TEntity, Boolean>>) Declaration int Delete(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(TEntity, CancellationToken) Declaration Task<int> DeleteAsync(TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source DeleteAsync(IEnumerable<TEntity>, CancellationToken) Declaration Task<int> DeleteAsync(IEnumerable<TEntity> entitys, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration Task<int> DeleteAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source EndEdit(List<TEntity>) 完成编辑数据，进行保存动作 该方法根据 BeginEdit 传入的数据状态分析出添加、修改、删除 SQL 语句 注意：* 本方法只支持单表操作，不支持导航属性级联保存 Declaration int EndEdit(List<TEntity> data = null) Parameters Type Name Description System.Collections.Generic.List <TEntity> data 可选参数：手工传递最终的 data 值进行对比 默认：如果不传递，则使用 BeginEdit 传入的 data 引用进行对比 Returns Type Description System.Int32 | Improve this Doc View Source FlushState() 清空状态数据 Declaration void FlushState() | Improve this Doc View Source Insert(TEntity) Declaration TEntity Insert(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity | Improve this Doc View Source Insert(IEnumerable<TEntity>) Declaration List<TEntity> Insert(IEnumerable<TEntity> entitys) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys Returns Type Description System.Collections.Generic.List <TEntity> | Improve this Doc View Source InsertAsync(TEntity, CancellationToken) Declaration Task<TEntity> InsertAsync(TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TEntity> | Improve this Doc View Source InsertAsync(IEnumerable<TEntity>, CancellationToken) Declaration Task<List<TEntity>> InsertAsync(IEnumerable<TEntity> entitys, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TEntity>> | Improve this Doc View Source InsertOrUpdate(TEntity) Declaration TEntity InsertOrUpdate(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity | Improve this Doc View Source InsertOrUpdateAsync(TEntity, CancellationToken) Declaration Task<TEntity> InsertOrUpdateAsync(TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TEntity> | Improve this Doc View Source SaveMany(TEntity, String) 保存实体的指定 ManyToMany/OneToMany 导航属性（完整对比） 场景：在关闭级联保存功能之后，手工使用本方法 例子：保存商品的 OneToMany 集合属性，SaveMany(goods, \"Skus\") 当 goods.Skus 为空(非null)时，会删除表中已存在的所有数据 当 goods.Skus 不为空(非null)时，添加/更新后，删除表中不存在 Skus 集合属性的所有记录 Declaration void SaveMany(TEntity entity, string propertyName) Parameters Type Name Description TEntity entity 实体对象 System.String propertyName 属性名 | Improve this Doc View Source SaveManyAsync(TEntity, String, CancellationToken) Declaration Task SaveManyAsync(TEntity entity, string propertyName, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.String propertyName System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source Update(TEntity) Declaration int Update(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description System.Int32 | Improve this Doc View Source Update(IEnumerable<TEntity>) Declaration int Update(IEnumerable<TEntity> entitys) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys Returns Type Description System.Int32 | Improve this Doc View Source UpdateAsync(TEntity, CancellationToken) Declaration Task<int> UpdateAsync(TEntity entity, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TEntity entity System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source UpdateAsync(IEnumerable<TEntity>, CancellationToken) Declaration Task<int> UpdateAsync(IEnumerable<TEntity> entitys, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entitys System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source Where(Expression<Func<TEntity, Boolean>>) Declaration ISelect<TEntity> Where(Expression<Func<TEntity, bool>> exp) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> exp Returns Type Description ISelect <TEntity> | Improve this Doc View Source WhereIf(Boolean, Expression<Func<TEntity, Boolean>>) Declaration ISelect<TEntity> WhereIf(bool condition, Expression<Func<TEntity, bool>> exp) Parameters Type Name Description System.Boolean condition System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> exp Returns Type Description ISelect <TEntity>"
  },
  "freesql/repository/FreeSql.IBaseRepository-2.html": {
    "href": "freesql/repository/FreeSql.IBaseRepository-2.html",
    "title": "Interface IBaseRepository<TEntity, TKey> | FreeSql API Docs",
    "keywords": "Interface IBaseRepository<TEntity, TKey> Inherited Members IBaseRepository<TEntity>.DataFilter IBaseRepository<TEntity>.Select IBaseRepository<TEntity>.Where(Expression<Func<TEntity, Boolean>>) IBaseRepository<TEntity>.WhereIf(Boolean, Expression<Func<TEntity, Boolean>>) IBaseRepository<TEntity>.Insert(TEntity) IBaseRepository<TEntity>.Insert(IEnumerable<TEntity>) IBaseRepository<TEntity>.FlushState() IBaseRepository<TEntity>.Attach(TEntity) IBaseRepository<TEntity>.Attach(IEnumerable<TEntity>) IBaseRepository<TEntity>.AttachOnlyPrimary(TEntity) IBaseRepository<TEntity>.Update(TEntity) IBaseRepository<TEntity>.Update(IEnumerable<TEntity>) IBaseRepository<TEntity>.InsertOrUpdate(TEntity) IBaseRepository<TEntity>.SaveMany(TEntity, String) IBaseRepository<TEntity>.UpdateDiy IBaseRepository<TEntity>.Delete(TEntity) IBaseRepository<TEntity>.Delete(IEnumerable<TEntity>) IBaseRepository<TEntity>.Delete(Expression<Func<TEntity, Boolean>>) IBaseRepository<TEntity>.BeginEdit(List<TEntity>) IBaseRepository<TEntity>.EndEdit(List<TEntity>) IBaseRepository<TEntity>.InsertAsync(TEntity, CancellationToken) IBaseRepository<TEntity>.InsertAsync(IEnumerable<TEntity>, CancellationToken) IBaseRepository<TEntity>.UpdateAsync(TEntity, CancellationToken) IBaseRepository<TEntity>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) IBaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, CancellationToken) IBaseRepository<TEntity>.SaveManyAsync(TEntity, String, CancellationToken) IBaseRepository<TEntity>.DeleteAsync(TEntity, CancellationToken) IBaseRepository<TEntity>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) IBaseRepository<TEntity>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) IBaseRepository.EntityType IBaseRepository.UnitOfWork IBaseRepository.Orm IBaseRepository.AsType(Type) IBaseRepository.AsTable(Func<String, String>) IBaseRepository.DbContextOptions System.IDisposable.Dispose() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public interface IBaseRepository<TEntity, TKey> : IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity TKey Methods | Improve this Doc View Source Delete(TKey) Declaration int Delete(TKey id) Parameters Type Name Description TKey id Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(TKey, CancellationToken) Declaration Task<int> DeleteAsync(TKey id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TKey id System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source Find(TKey) Declaration TEntity Find(TKey id) Parameters Type Name Description TKey id Returns Type Description TEntity | Improve this Doc View Source FindAsync(TKey, CancellationToken) Declaration Task<TEntity> FindAsync(TKey id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TKey id System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TEntity> | Improve this Doc View Source Get(TKey) Declaration TEntity Get(TKey id) Parameters Type Name Description TKey id Returns Type Description TEntity | Improve this Doc View Source GetAsync(TKey, CancellationToken) Declaration Task<TEntity> GetAsync(TKey id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description TKey id System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TEntity>"
  },
  "freesql/repository/FreeSql.IDataFilter-1.html": {
    "href": "freesql/repository/FreeSql.IDataFilter-1.html",
    "title": "Interface IDataFilter<TEntity> | FreeSql API Docs",
    "keywords": "Interface IDataFilter<TEntity> Inherited Members System.IDisposable.Dispose() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public interface IDataFilter<TEntity> : IDisposable where TEntity : class Type Parameters Name Description TEntity Methods | Improve this Doc View Source Apply(String, Expression<Func<TEntity, Boolean>>) Declaration IDataFilter<TEntity> Apply(string filterName, Expression<Func<TEntity, bool>> filterAndValidateExp) Parameters Type Name Description System.String filterName System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filterAndValidateExp Returns Type Description IDataFilter <TEntity> | Improve this Doc View Source Disable(String[]) 禁用过滤器，若使用 using 则使用完后，恢复为原有状态 Declaration IDisposable Disable(params string[] filterName) Parameters Type Name Description System.String [] filterName Returns Type Description System.IDisposable | Improve this Doc View Source DisableAll() 禁用所有过滤器，若使用 using 则使用完后，恢复为原有状态 Declaration IDisposable DisableAll() Returns Type Description System.IDisposable | Improve this Doc View Source Enable(String[]) 开启过滤器，若使用 using 则使用完后，恢复为原有状态 Declaration IDisposable Enable(params string[] filterName) Parameters Type Name Description System.String [] filterName 过滤器名称 Returns Type Description System.IDisposable | Improve this Doc View Source EnableAll() 开启所有过滤器，若使用 using 则使用完后，恢复为原有状态 Declaration IDisposable EnableAll() Returns Type Description System.IDisposable | Improve this Doc View Source IsEnabled(String) Declaration bool IsEnabled(string filterName) Parameters Type Name Description System.String filterName Returns Type Description System.Boolean"
  },
  "freesql/repository/FreeSql.IDbSet.html": {
    "href": "freesql/repository/FreeSql.IDbSet.html",
    "title": "Interface IDbSet | FreeSql API Docs",
    "keywords": "Interface IDbSet Inherited Members System.IDisposable.Dispose() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public interface IDbSet : IDisposable Properties | Improve this Doc View Source EntityType Declaration Type EntityType { get; } Property Value Type Description System.Type"
  },
  "freesql/repository/FreeSql.IRepositoryUnitOfWork.html": {
    "href": "freesql/repository/FreeSql.IRepositoryUnitOfWork.html",
    "title": "Interface IRepositoryUnitOfWork | FreeSql API Docs",
    "keywords": "Interface IRepositoryUnitOfWork Inherited Members IUnitOfWork.Orm IUnitOfWork.GetOrBeginTransaction(Boolean) IUnitOfWork.IsolationLevel IUnitOfWork.Commit() IUnitOfWork.Rollback() IUnitOfWork.EntityChangeReport System.IDisposable.Dispose() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public interface IRepositoryUnitOfWork : IUnitOfWork, IDisposable Methods | Improve this Doc View Source GetGuidRepository<TEntity>(Expression<Func<TEntity, Boolean>>, Func<String, String>) 在工作单元内创建仓库类，工作单元下的仓储操作具有事务特点 Declaration IBaseRepository<TEntity, Guid> GetGuidRepository<TEntity>(Expression<Func<TEntity, bool>> filter = null, Func<string, string> asTable = null) where TEntity : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filter 数据过滤 + 验证 System.Func < System.String , System.String > asTable 分表规则，参数：旧表名；返回：新表名 https://github.com/2881099/FreeSql/wiki/Repository Returns Type Description IBaseRepository <TEntity, System.Guid > Type Parameters Name Description TEntity | Improve this Doc View Source GetRepository<TEntity>(Expression<Func<TEntity, Boolean>>) 在工作单元内创建联合主键的仓储类，工作单元下的仓储操作具有事务特点 Declaration IBaseRepository<TEntity> GetRepository<TEntity>(Expression<Func<TEntity, bool>> filter = null) where TEntity : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filter 数据过滤 + 验证 Returns Type Description IBaseRepository <TEntity> Type Parameters Name Description TEntity | Improve this Doc View Source GetRepository<TEntity, TKey>(Expression<Func<TEntity, Boolean>>) 在工作单元内创建默认仓库类，工作单元下的仓储操作具有事务特点 Declaration IBaseRepository<TEntity, TKey> GetRepository<TEntity, TKey>(Expression<Func<TEntity, bool>> filter = null) where TEntity : class Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> filter 数据过滤 + 验证 Returns Type Description IBaseRepository <TEntity, TKey> Type Parameters Name Description TEntity TKey"
  },
  "freesql/repository/FreeSql.IUnitOfWork.html": {
    "href": "freesql/repository/FreeSql.IUnitOfWork.html",
    "title": "Interface IUnitOfWork | FreeSql API Docs",
    "keywords": "Interface IUnitOfWork 工作单元 Inherited Members System.IDisposable.Dispose() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public interface IUnitOfWork : IDisposable Properties | Improve this Doc View Source EntityChangeReport 工作单元内的实体变化跟踪 Declaration DbContext.EntityChangeReport EntityChangeReport { get; } Property Value Type Description DbContext.EntityChangeReport | Improve this Doc View Source IsolationLevel Declaration IsolationLevel? IsolationLevel { get; set; } Property Value Type Description System.Nullable < System.Data.IsolationLevel > | Improve this Doc View Source Orm 该对象 Select/Delete/Insert/Update/InsertOrUpdate 与工作单元事务保持一致，可省略传递 WithTransaction Declaration IFreeSql Orm { get; } Property Value Type Description IFreeSql Methods | Improve this Doc View Source Commit() Declaration void Commit() | Improve this Doc View Source GetOrBeginTransaction(Boolean) 开启事务，或者返回已开启的事务 Declaration DbTransaction GetOrBeginTransaction(bool isCreate = true) Parameters Type Name Description System.Boolean isCreate 若未开启事务，则开启 Returns Type Description System.Data.Common.DbTransaction | Improve this Doc View Source Rollback() Declaration void Rollback()"
  },
  "freesql/repository/FreeSql.Propagation.html": {
    "href": "freesql/repository/FreeSql.Propagation.html",
    "title": "Enum Propagation | FreeSql API Docs",
    "keywords": "Enum Propagation 事务传播方式 Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public enum Propagation Fields Name Description Mandatory 使用当前事务，如果没有当前事务，就抛出异常。 Nested 以嵌套事务方式执行。 Never 以非事务方式执行操作，如果当前事务存在则抛出异常。 NotSupported 以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。 Required 如果当前没有事务，就新建一个事务，如果已存在一个事务中，加入到这个事务中，默认的选择。 Supports 支持当前事务，如果没有当前事务，就以非事务方法执行。"
  },
  "freesql/repository/FreeSql.UnitOfWork.html": {
    "href": "freesql/repository/FreeSql.UnitOfWork.html",
    "title": "Class UnitOfWork | FreeSql API Docs",
    "keywords": "Class UnitOfWork Inheritance System.Object UnitOfWork Implements IUnitOfWork System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class UnitOfWork : IUnitOfWork, IDisposable Constructors | Improve this Doc View Source UnitOfWork(IFreeSql) Declaration public UnitOfWork(IFreeSql fsql) Parameters Type Name Description IFreeSql fsql Fields | Improve this Doc View Source _conn Declaration protected Object<DbConnection> _conn Field Value Type Description Object < System.Data.Common.DbConnection > | Improve this Doc View Source _fsql Declaration protected IFreeSql _fsql Field Value Type Description IFreeSql | Improve this Doc View Source _tran Declaration protected DbTransaction _tran Field Value Type Description System.Data.Common.DbTransaction | Improve this Doc View Source _tranBefore Declaration protected TraceBeforeEventArgs _tranBefore Field Value Type Description TraceBeforeEventArgs | Improve this Doc View Source _uowBefore Declaration protected TraceBeforeEventArgs _uowBefore Field Value Type Description TraceBeforeEventArgs Properties | Improve this Doc View Source DebugBeingUsed 正在使用中的工作单元（调试） Declaration public static ConcurrentDictionary<string, UnitOfWork> DebugBeingUsed { get; } Property Value Type Description System.Collections.Concurrent.ConcurrentDictionary < System.String , UnitOfWork > | Improve this Doc View Source Enable Declaration public bool Enable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source EntityChangeReport Declaration public DbContext.EntityChangeReport EntityChangeReport { get; } Property Value Type Description DbContext.EntityChangeReport | Improve this Doc View Source Id 开启事务后有值，是 UnitOfWork 的唯一标识 格式：yyyyMMdd_HHmmss_种子id 例如：20191121_214504_1 Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source IsolationLevel Declaration public IsolationLevel? IsolationLevel { get; set; } Property Value Type Description System.Nullable < System.Data.IsolationLevel > | Improve this Doc View Source Orm Declaration public IFreeSql Orm { get; } Property Value Type Description IFreeSql Methods | Improve this Doc View Source Close() Declaration public void Close() | Improve this Doc View Source Commit() Declaration public void Commit() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source GetOrBeginTransaction(Boolean) Declaration public DbTransaction GetOrBeginTransaction(bool isCreate = true) Parameters Type Name Description System.Boolean isCreate Returns Type Description System.Data.Common.DbTransaction | Improve this Doc View Source Open() Declaration public void Open() | Improve this Doc View Source Rollback() Declaration public void Rollback() Implements IUnitOfWork System.IDisposable"
  },
  "freesql/repository/FreeSql.UnitOfWorkManager.html": {
    "href": "freesql/repository/FreeSql.UnitOfWorkManager.html",
    "title": "Class UnitOfWorkManager | FreeSql API Docs",
    "keywords": "Class UnitOfWorkManager 工作单元管理器 Inheritance System.Object UnitOfWorkManager Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : FreeSql.DbContext.dll Syntax public class UnitOfWorkManager : IDisposable Constructors | Improve this Doc View Source UnitOfWorkManager(IFreeSql) Declaration public UnitOfWorkManager(IFreeSql fsql) Parameters Type Name Description IFreeSql fsql Properties | Improve this Doc View Source Current 当前的工作单元 Declaration public IUnitOfWork Current { get; } Property Value Type Description IUnitOfWork | Improve this Doc View Source Orm Declaration public IFreeSql Orm { get; } Property Value Type Description IFreeSql Methods | Improve this Doc View Source Begin(Propagation, Nullable<IsolationLevel>) 创建工作单元 Declaration public IUnitOfWork Begin(Propagation propagation = Propagation.Required, IsolationLevel? isolationLevel = default(IsolationLevel? )) Parameters Type Name Description Propagation propagation 事务传播方式 System.Nullable < System.Data.IsolationLevel > isolationLevel 事务隔离级别 Returns Type Description IUnitOfWork | Improve this Doc View Source Binding(IBaseRepository) 将仓储的事务交给我管理 Declaration public void Binding(IBaseRepository repository) Parameters Type Name Description IBaseRepository repository | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements System.IDisposable"
  },
  "freesql/repository/index.html": {
    "href": "freesql/repository/index.html",
    "title": "repository | FreeSql API Docs",
    "keywords": "repository TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "index.html": {
    "href": "index.html",
    "title": "FreeSql Document | FreeSql API Docs",
    "keywords": "FreeSql Document http://freesql.net .NET orm, Mysql orm, Postgresql orm, SqlServer orm, Oracle orm, Sqlite orm, Firebird orm, 达梦 orm, 人大金仓 orm, 神通 orm, MsAccess orm. Github https://github.com/dotnetcore/freesql Gitee https://gitee.com/FreeSql/FreeSql-ORM"
  },
  "README.html": {
    "href": "README.html",
    "title": "DocFX | FreeSql API Docs",
    "keywords": "DocFX https://dotnet.github.io/docfx/tutorial/docfx_getting_started.html run docfx docfx_project\\docfx.json --serve or docfx .\\docfx.json --serve"
  }
}